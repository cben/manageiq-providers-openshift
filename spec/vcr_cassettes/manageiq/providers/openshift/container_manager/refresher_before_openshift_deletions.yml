---
http_interactions:
- request:
    method: get
    uri: https://192.168.99.100:8443/api/v1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:18 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"kind":"APIResourceList","groupVersion":"v1","resources":[{"name":"bindings","singularName":"","namespaced":true,"kind":"Binding","verbs":["create"]},{"name":"componentstatuses","singularName":"","namespaced":false,"kind":"ComponentStatus","verbs":["get","list"],"shortNames":["cs"]},{"name":"configmaps","singularName":"","namespaced":true,"kind":"ConfigMap","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["cm"]},{"name":"endpoints","singularName":"","namespaced":true,"kind":"Endpoints","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["ep"]},{"name":"events","singularName":"","namespaced":true,"kind":"Event","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["ev"]},{"name":"limitranges","singularName":"","namespaced":true,"kind":"LimitRange","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["limits"]},{"name":"namespaces","singularName":"","namespaced":false,"kind":"Namespace","verbs":["create","delete","get","list","patch","update","watch"],"shortNames":["ns"]},{"name":"namespaces/finalize","singularName":"","namespaced":false,"kind":"Namespace","verbs":["update"]},{"name":"namespaces/status","singularName":"","namespaced":false,"kind":"Namespace","verbs":["get","patch","update"]},{"name":"nodes","singularName":"","namespaced":false,"kind":"Node","verbs":["create","delete","deletecollection","get","list","patch","proxy","update","watch"],"shortNames":["no"]},{"name":"nodes/proxy","singularName":"","namespaced":false,"kind":"Node","verbs":[]},{"name":"nodes/status","singularName":"","namespaced":false,"kind":"Node","verbs":["get","patch","update"]},{"name":"persistentvolumeclaims","singularName":"","namespaced":true,"kind":"PersistentVolumeClaim","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["pvc"]},{"name":"persistentvolumeclaims/status","singularName":"","namespaced":true,"kind":"PersistentVolumeClaim","verbs":["get","patch","update"]},{"name":"persistentvolumes","singularName":"","namespaced":false,"kind":"PersistentVolume","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["pv"]},{"name":"persistentvolumes/status","singularName":"","namespaced":false,"kind":"PersistentVolume","verbs":["get","patch","update"]},{"name":"pods","singularName":"","namespaced":true,"kind":"Pod","verbs":["create","delete","deletecollection","get","list","patch","proxy","update","watch"],"shortNames":["po"],"categories":["all"]},{"name":"pods/attach","singularName":"","namespaced":true,"kind":"Pod","verbs":[]},{"name":"pods/binding","singularName":"","namespaced":true,"kind":"Binding","verbs":["create"]},{"name":"pods/eviction","singularName":"","namespaced":true,"kind":"Eviction","verbs":["create"]},{"name":"pods/exec","singularName":"","namespaced":true,"kind":"Pod","verbs":[]},{"name":"pods/log","singularName":"","namespaced":true,"kind":"Pod","verbs":["get"]},{"name":"pods/portforward","singularName":"","namespaced":true,"kind":"Pod","verbs":[]},{"name":"pods/proxy","singularName":"","namespaced":true,"kind":"Pod","verbs":[]},{"name":"pods/status","singularName":"","namespaced":true,"kind":"Pod","verbs":["get","patch","update"]},{"name":"podtemplates","singularName":"","namespaced":true,"kind":"PodTemplate","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"replicationcontrollers","singularName":"","namespaced":true,"kind":"ReplicationController","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["rc"],"categories":["all"]},{"name":"replicationcontrollers/scale","singularName":"","namespaced":true,"kind":"Scale","verbs":["get","patch","update"]},{"name":"replicationcontrollers/status","singularName":"","namespaced":true,"kind":"ReplicationController","verbs":["get","patch","update"]},{"name":"resourcequotas","singularName":"","namespaced":true,"kind":"ResourceQuota","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["quota"]},{"name":"resourcequotas/status","singularName":"","namespaced":true,"kind":"ResourceQuota","verbs":["get","patch","update"]},{"name":"secrets","singularName":"","namespaced":true,"kind":"Secret","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"securitycontextconstraints","singularName":"","namespaced":false,"kind":"SecurityContextConstraints","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["scc"]},{"name":"serviceaccounts","singularName":"","namespaced":true,"kind":"ServiceAccount","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["sa"]},{"name":"services","singularName":"","namespaced":true,"kind":"Service","verbs":["create","delete","get","list","patch","proxy","update","watch"],"shortNames":["svc"],"categories":["all"]},{"name":"services/proxy","singularName":"","namespaced":true,"kind":"Service","verbs":[]},{"name":"services/status","singularName":"","namespaced":true,"kind":"Service","verbs":["get","patch","update"]}]}

'
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:18 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/api/v1/pods?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:22 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "PodList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/api/v1/pods",
            "resourceVersion": "8713"
          },
          "items": [
            {
              "metadata": {
                "name": "docker-registry-1-bpltr",
                "generateName": "docker-registry-1-",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/pods/docker-registry-1-bpltr",
                "uid": "6cb44bb8-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "4880",
                "creationTimestamp": "2017-12-11T13:15:57Z",
                "labels": {
                  "deployment": "docker-registry-1",
                  "deploymentconfig": "docker-registry",
                  "docker-registry": "default"
                },
                "annotations": {
                  "kubernetes.io/created-by": "{\"kind\":\"SerializedReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"ReplicationController\",\"namespace\":\"default\",\"name\":\"docker-registry-1\",\"uid\":\"64fe9a25-de75-11e7-a24c-461d677cd862\",\"apiVersion\":\"v1\",\"resourceVersion\":\"1085\"}}\n",
                  "openshift.io/deployment-config.latest-version": "1",
                  "openshift.io/deployment-config.name": "docker-registry",
                  "openshift.io/deployment.name": "docker-registry-1",
                  "openshift.io/scc": "privileged"
                },
                "ownerReferences": [
                  {
                    "apiVersion": "v1",
                    "kind": "ReplicationController",
                    "name": "docker-registry-1",
                    "uid": "64fe9a25-de75-11e7-a24c-461d677cd862",
                    "controller": true,
                    "blockOwnerDeletion": true
                  }
                ]
              },
              "spec": {
                "volumes": [
                  {
                    "name": "registry-storage",
                    "hostPath": {
                      "path": "/var/lib/minishift/openshift.local.pv/registry"
                    }
                  },
                  {
                    "name": "registry-token-djbr8",
                    "secret": {
                      "secretName": "registry-token-djbr8",
                      "defaultMode": 420
                    }
                  }
                ],
                "containers": [
                  {
                    "name": "registry",
                    "image": "openshift/origin-docker-registry:v3.7.0",
                    "ports": [
                      {
                        "containerPort": 5000,
                        "protocol": "TCP"
                      }
                    ],
                    "env": [
                      {
                        "name": "REGISTRY_HTTP_ADDR",
                        "value": ":5000"
                      },
                      {
                        "name": "REGISTRY_HTTP_NET",
                        "value": "tcp"
                      },
                      {
                        "name": "REGISTRY_HTTP_SECRET",
                        "value": "hzyuQQzbq2P0OUX2RdODaQxc+tEaz/LHXQwUbjAMEyM="
                      },
                      {
                        "name": "REGISTRY_MIDDLEWARE_REPOSITORY_OPENSHIFT_ENFORCEQUOTA",
                        "value": "false"
                      }
                    ],
                    "resources": {
                      "requests": {
                        "cpu": "100m",
                        "memory": "256Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "registry-storage",
                        "mountPath": "/registry"
                      },
                      {
                        "name": "registry-token-djbr8",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/healthz",
                        "port": 5000,
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 10,
                      "timeoutSeconds": 5,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/healthz",
                        "port": 5000,
                        "scheme": "HTTP"
                      },
                      "timeoutSeconds": 5,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "privileged": true
                    }
                  }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "registry",
                "serviceAccount": "registry",
                "nodeName": "localhost",
                "securityContext": {},
                "imagePullSecrets": [
                  {
                    "name": "registry-dockercfg-pfzqb"
                  }
                ],
                "schedulerName": "default-scheduler"
              },
              "status": {
                "phase": "Running",
                "conditions": [
                  {
                    "type": "Initialized",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T13:15:57Z"
                  },
                  {
                    "type": "Ready",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T13:46:07Z"
                  },
                  {
                    "type": "PodScheduled",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T13:15:57Z"
                  }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "172.17.0.5",
                "startTime": "2017-12-11T13:15:57Z",
                "containerStatuses": [
                  {
                    "name": "registry",
                    "state": {
                      "running": {
                        "startedAt": "2017-12-11T13:45:53Z"
                      }
                    },
                    "lastState": {
                      "terminated": {
                        "exitCode": 2,
                        "reason": "Error",
                        "startedAt": "2017-12-11T13:16:11Z",
                        "finishedAt": "2017-12-11T13:45:43Z",
                        "containerID": "docker://d1b8159bd15f1b48b57fb13d668f314b613f64d75e36d2241854db0eab99b932"
                      }
                    },
                    "ready": true,
                    "restartCount": 1,
                    "image": "openshift/origin-docker-registry:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin-docker-registry@sha256:9230bd859ce5a7fad13dc676efae72b2c86a9a0177cbd26db9b047be28620143",
                    "containerID": "docker://a7dd2ebf4b40954bb3c2e84624d8c41a039f8a4a666c88536e3aa889bcf0522b"
                  }
                ],
                "qosClass": "Burstable"
              }
            },
            {
              "metadata": {
                "name": "persistent-volume-setup-2plb4",
                "generateName": "persistent-volume-setup-",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/pods/persistent-volume-setup-2plb4",
                "uid": "65551156-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1377",
                "creationTimestamp": "2017-12-11T13:15:45Z",
                "labels": {
                  "controller-uid": "5fbc6b36-de75-11e7-a24c-461d677cd862",
                  "job-name": "persistent-volume-setup"
                },
                "annotations": {
                  "kubernetes.io/created-by": "{\"kind\":\"SerializedReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Job\",\"namespace\":\"default\",\"name\":\"persistent-volume-setup\",\"uid\":\"5fbc6b36-de75-11e7-a24c-461d677cd862\",\"apiVersion\":\"batch\",\"resourceVersion\":\"302\"}}\n",
                  "openshift.io/scc": "privileged"
                },
                "ownerReferences": [
                  {
                    "apiVersion": "batch/v1",
                    "kind": "Job",
                    "name": "persistent-volume-setup",
                    "uid": "5fbc6b36-de75-11e7-a24c-461d677cd862",
                    "controller": true,
                    "blockOwnerDeletion": true
                  }
                ]
              },
              "spec": {
                "volumes": [
                  {
                    "name": "pvdir",
                    "hostPath": {
                      "path": "/var/lib/minishift/openshift.local.pv"
                    }
                  },
                  {
                    "name": "pvinstaller-token-4kftl",
                    "secret": {
                      "secretName": "pvinstaller-token-4kftl",
                      "defaultMode": 420
                    }
                  }
                ],
                "containers": [
                  {
                    "name": "storage-setup-job",
                    "image": "openshift/origin:v3.7.0",
                    "command": [
                      "/bin/bash",
                      "-c",
                      "#/bin/bash\n\nset -e\n\nfunction generate_pv() {\n  local basedir=\"${1}\"\n  local name=\"${2}\"\ncat \u003c\u003cEOF\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: ${name}\n  labels:\n    volume: ${name}\nspec:\n  capacity:\n    storage: 100Gi\n  accessModes:\n    - ReadWriteOnce\n    - ReadWriteMany\n    - ReadOnlyMany\n  hostPath:\n    path: ${basedir}/${name}\n  persistentVolumeReclaimPolicy: Recycle\nEOF\n}\n\nfunction setup_pv_dir() {\n  local dir=\"${1}\"\n  if [[ ! -d \"${dir}\" ]]; then\n    mkdir -p \"${dir}\"\n  fi\n  if ! chcon -t svirt_sandbox_file_t \"${dir}\" \u0026\u003e /dev/null; then\n    echo \"Not setting SELinux content for ${dir}\"\n  fi\n  chmod 770 \"${dir}\"\n}\n\nfunction create_pv() {\n  local basedir=\"${1}\"\n  local name=\"${2}\"\n\n  setup_pv_dir \"${basedir}/${name}\"\n  if ! oc get pv \"${name}\" \u0026\u003e /dev/null; then \n    generate_pv \"${basedir}\" \"${name}\" | oc create -f -\n  else\n    echo \"persistentvolume ${name} already exists\"\n  fi\n}\n\nbasedir=\"/var/lib/minishift/openshift.local.pv\"\nsetup_pv_dir \"${basedir}/registry\"\n\nfor i in $(seq -f \"%04g\" 1 100); do\n  create_pv \"${basedir}\" \"pv${i}\"\ndone\n"
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "pvdir",
                        "mountPath": "/var/lib/minishift/openshift.local.pv"
                      },
                      {
                        "name": "pvinstaller-token-4kftl",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "privileged": true
                    }
                  }
                ],
                "restartPolicy": "Never",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "pvinstaller",
                "serviceAccount": "pvinstaller",
                "nodeName": "localhost",
                "securityContext": {},
                "imagePullSecrets": [
                  {
                    "name": "pvinstaller-dockercfg-xvhhj"
                  }
                ],
                "schedulerName": "default-scheduler"
              },
              "status": {
                "phase": "Succeeded",
                "conditions": [
                  {
                    "type": "Initialized",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T13:15:45Z",
                    "reason": "PodCompleted"
                  },
                  {
                    "type": "Ready",
                    "status": "False",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T13:16:43Z",
                    "reason": "PodCompleted"
                  },
                  {
                    "type": "PodScheduled",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T13:15:45Z"
                  }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "172.17.0.3",
                "startTime": "2017-12-11T13:15:45Z",
                "containerStatuses": [
                  {
                    "name": "storage-setup-job",
                    "state": {
                      "terminated": {
                        "exitCode": 0,
                        "reason": "Completed",
                        "startedAt": "2017-12-11T13:15:53Z",
                        "finishedAt": "2017-12-11T13:16:42Z",
                        "containerID": "docker://9768f96491509a54d2d8acdb67c483518655c23cdf4bf47561a8eae169556c44"
                      }
                    },
                    "lastState": {},
                    "ready": false,
                    "restartCount": 0,
                    "image": "openshift/origin:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin@sha256:33327642e9c72386e6272a2e6c37ff9b42155a2da028620ce2c28c63ba20d18e",
                    "containerID": "docker://9768f96491509a54d2d8acdb67c483518655c23cdf4bf47561a8eae169556c44"
                  }
                ],
                "qosClass": "BestEffort"
              }
            },
            {
              "metadata": {
                "name": "router-1-hk8t6",
                "generateName": "router-1-",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/pods/router-1-hk8t6",
                "uid": "6e3dd60b-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "7429",
                "creationTimestamp": "2017-12-11T13:16:00Z",
                "labels": {
                  "deployment": "router-1",
                  "deploymentconfig": "router",
                  "router": "router"
                },
                "annotations": {
                  "kubernetes.io/created-by": "{\"kind\":\"SerializedReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"ReplicationController\",\"namespace\":\"default\",\"name\":\"router-1\",\"uid\":\"64f27dbd-de75-11e7-a24c-461d677cd862\",\"apiVersion\":\"v1\",\"resourceVersion\":\"1114\"}}\n",
                  "openshift.io/deployment-config.latest-version": "1",
                  "openshift.io/deployment-config.name": "router",
                  "openshift.io/deployment.name": "router-1",
                  "openshift.io/scc": "privileged"
                },
                "ownerReferences": [
                  {
                    "apiVersion": "v1",
                    "kind": "ReplicationController",
                    "name": "router-1",
                    "uid": "64f27dbd-de75-11e7-a24c-461d677cd862",
                    "controller": true,
                    "blockOwnerDeletion": true
                  }
                ]
              },
              "spec": {
                "volumes": [
                  {
                    "name": "server-certificate",
                    "secret": {
                      "secretName": "router-certs",
                      "defaultMode": 420
                    }
                  },
                  {
                    "name": "router-token-9mhzc",
                    "secret": {
                      "secretName": "router-token-9mhzc",
                      "defaultMode": 420
                    }
                  }
                ],
                "containers": [
                  {
                    "name": "router",
                    "image": "openshift/origin-haproxy-router:v3.7.0",
                    "ports": [
                      {
                        "hostPort": 80,
                        "containerPort": 80,
                        "protocol": "TCP"
                      },
                      {
                        "hostPort": 443,
                        "containerPort": 443,
                        "protocol": "TCP"
                      },
                      {
                        "name": "stats",
                        "hostPort": 1936,
                        "containerPort": 1936,
                        "protocol": "TCP"
                      }
                    ],
                    "env": [
                      {
                        "name": "DEFAULT_CERTIFICATE_DIR",
                        "value": "/etc/pki/tls/private"
                      },
                      {
                        "name": "DEFAULT_CERTIFICATE_PATH",
                        "value": "/etc/pki/tls/private/tls.crt"
                      },
                      {
                        "name": "ROUTER_CIPHERS"
                      },
                      {
                        "name": "ROUTER_EXTERNAL_HOST_HOSTNAME"
                      },
                      {
                        "name": "ROUTER_EXTERNAL_HOST_HTTPS_VSERVER"
                      },
                      {
                        "name": "ROUTER_EXTERNAL_HOST_HTTP_VSERVER"
                      },
                      {
                        "name": "ROUTER_EXTERNAL_HOST_INSECURE",
                        "value": "false"
                      },
                      {
                        "name": "ROUTER_EXTERNAL_HOST_INTERNAL_ADDRESS"
                      },
                      {
                        "name": "ROUTER_EXTERNAL_HOST_PARTITION_PATH"
                      },
                      {
                        "name": "ROUTER_EXTERNAL_HOST_PASSWORD"
                      },
                      {
                        "name": "ROUTER_EXTERNAL_HOST_PRIVKEY",
                        "value": "/etc/secret-volume/router.pem"
                      },
                      {
                        "name": "ROUTER_EXTERNAL_HOST_USERNAME"
                      },
                      {
                        "name": "ROUTER_EXTERNAL_HOST_VXLAN_GW_CIDR"
                      },
                      {
                        "name": "ROUTER_LISTEN_ADDR",
                        "value": "0.0.0.0:1936"
                      },
                      {
                        "name": "ROUTER_METRICS_TYPE",
                        "value": "haproxy"
                      },
                      {
                        "name": "ROUTER_SERVICE_HTTPS_PORT",
                        "value": "443"
                      },
                      {
                        "name": "ROUTER_SERVICE_HTTP_PORT",
                        "value": "80"
                      },
                      {
                        "name": "ROUTER_SERVICE_NAME",
                        "value": "router"
                      },
                      {
                        "name": "ROUTER_SERVICE_NAMESPACE",
                        "value": "default"
                      },
                      {
                        "name": "ROUTER_SUBDOMAIN"
                      },
                      {
                        "name": "STATS_PASSWORD",
                        "value": "jrl3OWQIGD"
                      },
                      {
                        "name": "STATS_PORT",
                        "value": "1936"
                      },
                      {
                        "name": "STATS_USERNAME",
                        "value": "admin"
                      }
                    ],
                    "resources": {
                      "requests": {
                        "cpu": "100m",
                        "memory": "256Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "server-certificate",
                        "readOnly": true,
                        "mountPath": "/etc/pki/tls/private"
                      },
                      {
                        "name": "router-token-9mhzc",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "livenessProbe": {
                      "httpGet": {
                        "path": "/healthz",
                        "port": 1936,
                        "host": "localhost",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 10,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "readinessProbe": {
                      "httpGet": {
                        "path": "/healthz",
                        "port": 1936,
                        "host": "localhost",
                        "scheme": "HTTP"
                      },
                      "initialDelaySeconds": 10,
                      "timeoutSeconds": 1,
                      "periodSeconds": 10,
                      "successThreshold": 1,
                      "failureThreshold": 3
                    },
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "privileged": false
                    }
                  }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "router",
                "serviceAccount": "router",
                "nodeName": "localhost",
                "hostNetwork": true,
                "securityContext": {},
                "imagePullSecrets": [
                  {
                    "name": "router-dockercfg-skbbx"
                  }
                ],
                "schedulerName": "default-scheduler"
              },
              "status": {
                "phase": "Running",
                "conditions": [
                  {
                    "type": "Initialized",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T13:16:00Z"
                  },
                  {
                    "type": "Ready",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:12:13Z"
                  },
                  {
                    "type": "PodScheduled",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T13:16:00Z"
                  }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "10.0.2.15",
                "startTime": "2017-12-11T13:16:00Z",
                "containerStatuses": [
                  {
                    "name": "router",
                    "state": {
                      "running": {
                        "startedAt": "2017-12-11T21:11:42Z"
                      }
                    },
                    "lastState": {
                      "terminated": {
                        "exitCode": 2,
                        "reason": "Error",
                        "startedAt": "2017-12-11T21:10:30Z",
                        "finishedAt": "2017-12-11T21:11:27Z",
                        "containerID": "docker://01572011c895f72ea7207dd422dd892d135c0f3221cf625b264554307854293d"
                      }
                    },
                    "ready": true,
                    "restartCount": 10,
                    "image": "openshift/origin-haproxy-router:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin-haproxy-router@sha256:9fe2b3b8916b89fbabbd0c798655da6c808156b3c1f473bb8341bf64c6c560a5",
                    "containerID": "docker://4b888e1b846153504122c4a7be85d717ad32a078e7ac3c0d628ba50cccb7d77b"
                  }
                ],
                "qosClass": "Burstable"
              }
            },
            {
              "metadata": {
                "name": "my-build-config-0-1-build",
                "namespace": "my-project-0",
                "selfLink": "/api/v1/namespaces/my-project-0/pods/my-build-config-0-1-build",
                "uid": "69fa9636-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8652",
                "creationTimestamp": "2017-12-11T21:22:38Z",
                "labels": {
                  "openshift.io/build.name": "my-build-config-0-1"
                },
                "annotations": {
                  "kubernetes.io/limit-ranger": "LimitRanger plugin set: cpu, memory request for container sti-build; cpu, memory limit for container sti-build; cpu, memory request for init container git-clone; cpu, memory limit for init container git-clone; cpu, memory request for init container manage-dockerfile; cpu, memory limit for init container manage-dockerfile",
                  "openshift.io/build.name": "my-build-config-0-1",
                  "openshift.io/scc": "privileged",
                  "pod.alpha.kubernetes.io/init-container-statuses": "[{\"name\":\"git-clone\",\"state\":{\"terminated\":{\"exitCode\":0,\"reason\":\"Completed\",\"startedAt\":\"2017-12-11T21:22:40Z\",\"finishedAt\":\"2017-12-11T21:22:46Z\",\"containerID\":\"docker://dc1b6366e0a47b0cfd22401d935e9b0c96ceda3b843d98518674bdecb520b834\"}},\"lastState\":{},\"ready\":true,\"restartCount\":0,\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"imageID\":\"docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529\",\"containerID\":\"docker://dc1b6366e0a47b0cfd22401d935e9b0c96ceda3b843d98518674bdecb520b834\"},{\"name\":\"manage-dockerfile\",\"state\":{\"terminated\":{\"exitCode\":0,\"reason\":\"Completed\",\"startedAt\":\"2017-12-11T21:22:48Z\",\"finishedAt\":\"2017-12-11T21:22:49Z\",\"containerID\":\"docker://478b195c1a824114c53ce6b57c4f417d0d622de989b7e87ac40ec2a0da86b339\"}},\"lastState\":{},\"ready\":true,\"restartCount\":0,\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"imageID\":\"docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529\",\"containerID\":\"docker://478b195c1a824114c53ce6b57c4f417d0d622de989b7e87ac40ec2a0da86b339\"}]",
                  "pod.alpha.kubernetes.io/init-containers": "[{\"name\":\"git-clone\",\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"command\":[\"openshift-git-clone\"],\"args\":[\"--loglevel=0\"],\"env\":[{\"name\":\"BUILD\",\"value\":\"{\\\"kind\\\":\\\"Build\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":{\\\"name\\\":\\\"my-build-config-0-1\\\",\\\"namespace\\\":\\\"my-project-0\\\",\\\"selfLink\\\":\\\"/apis/build.openshift.io/v1/namespaces/my-project-0/builds/my-build-config-0-1\\\",\\\"uid\\\":\\\"69f4271f-deb9-11e7-a24c-461d677cd862\\\",\\\"resourceVersion\\\":\\\"8422\\\",\\\"creationTimestamp\\\":\\\"2017-12-11T21:22:38Z\\\",\\\"labels\\\":{\\\"buildconfig\\\":\\\"my-build-config-0\\\",\\\"openshift.io/build-config.name\\\":\\\"my-build-config-0\\\",\\\"openshift.io/build.start-policy\\\":\\\"Serial\\\"},\\\"annotations\\\":{\\\"openshift.io/build-config.name\\\":\\\"my-build-config-0\\\",\\\"openshift.io/build.number\\\":\\\"1\\\"},\\\"ownerReferences\\\":[{\\\"apiVersion\\\":\\\"build.openshift.io/v1\\\",\\\"kind\\\":\\\"BuildConfig\\\",\\\"name\\\":\\\"my-build-config-0\\\",\\\"uid\\\":\\\"69a7ee58-deb9-11e7-a24c-461d677cd862\\\",\\\"controller\\\":true}]},\\\"spec\\\":{\\\"serviceAccount\\\":\\\"builder\\\",\\\"source\\\":{\\\"type\\\":\\\"Git\\\",\\\"git\\\":{\\\"uri\\\":\\\"https://github.com/openshift/ruby-hello-world\\\"}},\\\"strategy\\\":{\\\"type\\\":\\\"Source\\\",\\\"sourceStrategy\\\":{\\\"from\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"ruby-20-centos7:latest\\\"}}},\\\"output\\\":{\\\"to\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"172.30.1.1:5000/my-project-0/origin-ruby-sample:latest\\\"},\\\"pushSecret\\\":{\\\"name\\\":\\\"builder-dockercfg-kkbkb\\\"}},\\\"resources\\\":{},\\\"postCommit\\\":{\\\"script\\\":\\\"bundle exec rake test\\\"},\\\"nodeSelector\\\":null,\\\"triggeredBy\\\":[{\\\"message\\\":\\\"Manually triggered\\\"}]},\\\"status\\\":{\\\"phase\\\":\\\"New\\\",\\\"outputDockerImageReference\\\":\\\"172.30.1.1:5000/my-project-0/origin-ruby-sample:latest\\\",\\\"config\\\":{\\\"kind\\\":\\\"BuildConfig\\\",\\\"namespace\\\":\\\"my-project-0\\\",\\\"name\\\":\\\"my-build-config-0\\\"},\\\"output\\\":{}}}\\n\"},{\"name\":\"SOURCE_REPOSITORY\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"SOURCE_URI\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"ORIGIN_VERSION\",\"value\":\"v3.7.0+7ed6862\"},{\"name\":\"ALLOWED_UIDS\",\"value\":\"1-\"},{\"name\":\"DROP_CAPS\",\"value\":\"KILL,MKNOD,SETGID,SETUID\"}],\"resources\":{\"limits\":{\"cpu\":\"300m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"name\":\"buildworkdir\",\"mountPath\":\"/tmp/build\"},{\"name\":\"builder-token-mwb66\",\"readOnly\":true,\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\"}],\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"imagePullPolicy\":\"IfNotPresent\",\"securityContext\":{\"privileged\":false}},{\"name\":\"manage-dockerfile\",\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"command\":[\"openshift-manage-dockerfile\"],\"args\":[\"--loglevel=0\"],\"env\":[{\"name\":\"BUILD\",\"value\":\"{\\\"kind\\\":\\\"Build\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":{\\\"name\\\":\\\"my-build-config-0-1\\\",\\\"namespace\\\":\\\"my-project-0\\\",\\\"selfLink\\\":\\\"/apis/build.openshift.io/v1/namespaces/my-project-0/builds/my-build-config-0-1\\\",\\\"uid\\\":\\\"69f4271f-deb9-11e7-a24c-461d677cd862\\\",\\\"resourceVersion\\\":\\\"8422\\\",\\\"creationTimestamp\\\":\\\"2017-12-11T21:22:38Z\\\",\\\"labels\\\":{\\\"buildconfig\\\":\\\"my-build-config-0\\\",\\\"openshift.io/build-config.name\\\":\\\"my-build-config-0\\\",\\\"openshift.io/build.start-policy\\\":\\\"Serial\\\"},\\\"annotations\\\":{\\\"openshift.io/build-config.name\\\":\\\"my-build-config-0\\\",\\\"openshift.io/build.number\\\":\\\"1\\\"},\\\"ownerReferences\\\":[{\\\"apiVersion\\\":\\\"build.openshift.io/v1\\\",\\\"kind\\\":\\\"BuildConfig\\\",\\\"name\\\":\\\"my-build-config-0\\\",\\\"uid\\\":\\\"69a7ee58-deb9-11e7-a24c-461d677cd862\\\",\\\"controller\\\":true}]},\\\"spec\\\":{\\\"serviceAccount\\\":\\\"builder\\\",\\\"source\\\":{\\\"type\\\":\\\"Git\\\",\\\"git\\\":{\\\"uri\\\":\\\"https://github.com/openshift/ruby-hello-world\\\"}},\\\"strategy\\\":{\\\"type\\\":\\\"Source\\\",\\\"sourceStrategy\\\":{\\\"from\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"ruby-20-centos7:latest\\\"}}},\\\"output\\\":{\\\"to\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"172.30.1.1:5000/my-project-0/origin-ruby-sample:latest\\\"},\\\"pushSecret\\\":{\\\"name\\\":\\\"builder-dockercfg-kkbkb\\\"}},\\\"resources\\\":{},\\\"postCommit\\\":{\\\"script\\\":\\\"bundle exec rake test\\\"},\\\"nodeSelector\\\":null,\\\"triggeredBy\\\":[{\\\"message\\\":\\\"Manually triggered\\\"}]},\\\"status\\\":{\\\"phase\\\":\\\"New\\\",\\\"outputDockerImageReference\\\":\\\"172.30.1.1:5000/my-project-0/origin-ruby-sample:latest\\\",\\\"config\\\":{\\\"kind\\\":\\\"BuildConfig\\\",\\\"namespace\\\":\\\"my-project-0\\\",\\\"name\\\":\\\"my-build-config-0\\\"},\\\"output\\\":{}}}\\n\"},{\"name\":\"SOURCE_REPOSITORY\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"SOURCE_URI\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"ORIGIN_VERSION\",\"value\":\"v3.7.0+7ed6862\"},{\"name\":\"ALLOWED_UIDS\",\"value\":\"1-\"},{\"name\":\"DROP_CAPS\",\"value\":\"KILL,MKNOD,SETGID,SETUID\"}],\"resources\":{\"limits\":{\"cpu\":\"300m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"name\":\"buildworkdir\",\"mountPath\":\"/tmp/build\"},{\"name\":\"builder-token-mwb66\",\"readOnly\":true,\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\"}],\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"imagePullPolicy\":\"IfNotPresent\",\"securityContext\":{\"privileged\":false}}]",
                  "pod.beta.kubernetes.io/init-container-statuses": "[{\"name\":\"git-clone\",\"state\":{\"terminated\":{\"exitCode\":0,\"reason\":\"Completed\",\"startedAt\":\"2017-12-11T21:22:40Z\",\"finishedAt\":\"2017-12-11T21:22:46Z\",\"containerID\":\"docker://dc1b6366e0a47b0cfd22401d935e9b0c96ceda3b843d98518674bdecb520b834\"}},\"lastState\":{},\"ready\":true,\"restartCount\":0,\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"imageID\":\"docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529\",\"containerID\":\"docker://dc1b6366e0a47b0cfd22401d935e9b0c96ceda3b843d98518674bdecb520b834\"},{\"name\":\"manage-dockerfile\",\"state\":{\"terminated\":{\"exitCode\":0,\"reason\":\"Completed\",\"startedAt\":\"2017-12-11T21:22:48Z\",\"finishedAt\":\"2017-12-11T21:22:49Z\",\"containerID\":\"docker://478b195c1a824114c53ce6b57c4f417d0d622de989b7e87ac40ec2a0da86b339\"}},\"lastState\":{},\"ready\":true,\"restartCount\":0,\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"imageID\":\"docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529\",\"containerID\":\"docker://478b195c1a824114c53ce6b57c4f417d0d622de989b7e87ac40ec2a0da86b339\"}]",
                  "pod.beta.kubernetes.io/init-containers": "[{\"name\":\"git-clone\",\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"command\":[\"openshift-git-clone\"],\"args\":[\"--loglevel=0\"],\"env\":[{\"name\":\"BUILD\",\"value\":\"{\\\"kind\\\":\\\"Build\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":{\\\"name\\\":\\\"my-build-config-0-1\\\",\\\"namespace\\\":\\\"my-project-0\\\",\\\"selfLink\\\":\\\"/apis/build.openshift.io/v1/namespaces/my-project-0/builds/my-build-config-0-1\\\",\\\"uid\\\":\\\"69f4271f-deb9-11e7-a24c-461d677cd862\\\",\\\"resourceVersion\\\":\\\"8422\\\",\\\"creationTimestamp\\\":\\\"2017-12-11T21:22:38Z\\\",\\\"labels\\\":{\\\"buildconfig\\\":\\\"my-build-config-0\\\",\\\"openshift.io/build-config.name\\\":\\\"my-build-config-0\\\",\\\"openshift.io/build.start-policy\\\":\\\"Serial\\\"},\\\"annotations\\\":{\\\"openshift.io/build-config.name\\\":\\\"my-build-config-0\\\",\\\"openshift.io/build.number\\\":\\\"1\\\"},\\\"ownerReferences\\\":[{\\\"apiVersion\\\":\\\"build.openshift.io/v1\\\",\\\"kind\\\":\\\"BuildConfig\\\",\\\"name\\\":\\\"my-build-config-0\\\",\\\"uid\\\":\\\"69a7ee58-deb9-11e7-a24c-461d677cd862\\\",\\\"controller\\\":true}]},\\\"spec\\\":{\\\"serviceAccount\\\":\\\"builder\\\",\\\"source\\\":{\\\"type\\\":\\\"Git\\\",\\\"git\\\":{\\\"uri\\\":\\\"https://github.com/openshift/ruby-hello-world\\\"}},\\\"strategy\\\":{\\\"type\\\":\\\"Source\\\",\\\"sourceStrategy\\\":{\\\"from\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"ruby-20-centos7:latest\\\"}}},\\\"output\\\":{\\\"to\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"172.30.1.1:5000/my-project-0/origin-ruby-sample:latest\\\"},\\\"pushSecret\\\":{\\\"name\\\":\\\"builder-dockercfg-kkbkb\\\"}},\\\"resources\\\":{},\\\"postCommit\\\":{\\\"script\\\":\\\"bundle exec rake test\\\"},\\\"nodeSelector\\\":null,\\\"triggeredBy\\\":[{\\\"message\\\":\\\"Manually triggered\\\"}]},\\\"status\\\":{\\\"phase\\\":\\\"New\\\",\\\"outputDockerImageReference\\\":\\\"172.30.1.1:5000/my-project-0/origin-ruby-sample:latest\\\",\\\"config\\\":{\\\"kind\\\":\\\"BuildConfig\\\",\\\"namespace\\\":\\\"my-project-0\\\",\\\"name\\\":\\\"my-build-config-0\\\"},\\\"output\\\":{}}}\\n\"},{\"name\":\"SOURCE_REPOSITORY\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"SOURCE_URI\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"ORIGIN_VERSION\",\"value\":\"v3.7.0+7ed6862\"},{\"name\":\"ALLOWED_UIDS\",\"value\":\"1-\"},{\"name\":\"DROP_CAPS\",\"value\":\"KILL,MKNOD,SETGID,SETUID\"}],\"resources\":{\"limits\":{\"cpu\":\"300m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"name\":\"buildworkdir\",\"mountPath\":\"/tmp/build\"},{\"name\":\"builder-token-mwb66\",\"readOnly\":true,\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\"}],\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"imagePullPolicy\":\"IfNotPresent\",\"securityContext\":{\"privileged\":false}},{\"name\":\"manage-dockerfile\",\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"command\":[\"openshift-manage-dockerfile\"],\"args\":[\"--loglevel=0\"],\"env\":[{\"name\":\"BUILD\",\"value\":\"{\\\"kind\\\":\\\"Build\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":{\\\"name\\\":\\\"my-build-config-0-1\\\",\\\"namespace\\\":\\\"my-project-0\\\",\\\"selfLink\\\":\\\"/apis/build.openshift.io/v1/namespaces/my-project-0/builds/my-build-config-0-1\\\",\\\"uid\\\":\\\"69f4271f-deb9-11e7-a24c-461d677cd862\\\",\\\"resourceVersion\\\":\\\"8422\\\",\\\"creationTimestamp\\\":\\\"2017-12-11T21:22:38Z\\\",\\\"labels\\\":{\\\"buildconfig\\\":\\\"my-build-config-0\\\",\\\"openshift.io/build-config.name\\\":\\\"my-build-config-0\\\",\\\"openshift.io/build.start-policy\\\":\\\"Serial\\\"},\\\"annotations\\\":{\\\"openshift.io/build-config.name\\\":\\\"my-build-config-0\\\",\\\"openshift.io/build.number\\\":\\\"1\\\"},\\\"ownerReferences\\\":[{\\\"apiVersion\\\":\\\"build.openshift.io/v1\\\",\\\"kind\\\":\\\"BuildConfig\\\",\\\"name\\\":\\\"my-build-config-0\\\",\\\"uid\\\":\\\"69a7ee58-deb9-11e7-a24c-461d677cd862\\\",\\\"controller\\\":true}]},\\\"spec\\\":{\\\"serviceAccount\\\":\\\"builder\\\",\\\"source\\\":{\\\"type\\\":\\\"Git\\\",\\\"git\\\":{\\\"uri\\\":\\\"https://github.com/openshift/ruby-hello-world\\\"}},\\\"strategy\\\":{\\\"type\\\":\\\"Source\\\",\\\"sourceStrategy\\\":{\\\"from\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"ruby-20-centos7:latest\\\"}}},\\\"output\\\":{\\\"to\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"172.30.1.1:5000/my-project-0/origin-ruby-sample:latest\\\"},\\\"pushSecret\\\":{\\\"name\\\":\\\"builder-dockercfg-kkbkb\\\"}},\\\"resources\\\":{},\\\"postCommit\\\":{\\\"script\\\":\\\"bundle exec rake test\\\"},\\\"nodeSelector\\\":null,\\\"triggeredBy\\\":[{\\\"message\\\":\\\"Manually triggered\\\"}]},\\\"status\\\":{\\\"phase\\\":\\\"New\\\",\\\"outputDockerImageReference\\\":\\\"172.30.1.1:5000/my-project-0/origin-ruby-sample:latest\\\",\\\"config\\\":{\\\"kind\\\":\\\"BuildConfig\\\",\\\"namespace\\\":\\\"my-project-0\\\",\\\"name\\\":\\\"my-build-config-0\\\"},\\\"output\\\":{}}}\\n\"},{\"name\":\"SOURCE_REPOSITORY\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"SOURCE_URI\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"ORIGIN_VERSION\",\"value\":\"v3.7.0+7ed6862\"},{\"name\":\"ALLOWED_UIDS\",\"value\":\"1-\"},{\"name\":\"DROP_CAPS\",\"value\":\"KILL,MKNOD,SETGID,SETUID\"}],\"resources\":{\"limits\":{\"cpu\":\"300m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"name\":\"buildworkdir\",\"mountPath\":\"/tmp/build\"},{\"name\":\"builder-token-mwb66\",\"readOnly\":true,\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\"}],\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"imagePullPolicy\":\"IfNotPresent\",\"securityContext\":{\"privileged\":false}}]"
                },
                "ownerReferences": [
                  {
                    "apiVersion": "build.openshift.io/v1",
                    "kind": "Build",
                    "name": "my-build-config-0-1",
                    "uid": "69f4271f-deb9-11e7-a24c-461d677cd862",
                    "controller": true
                  }
                ]
              },
              "spec": {
                "volumes": [
                  {
                    "name": "buildworkdir",
                    "emptyDir": {}
                  },
                  {
                    "name": "docker-socket",
                    "hostPath": {
                      "path": "/var/run/docker.sock"
                    }
                  },
                  {
                    "name": "crio-socket",
                    "hostPath": {
                      "path": "/var/run/crio.sock"
                    }
                  },
                  {
                    "name": "builder-dockercfg-kkbkb-push",
                    "secret": {
                      "secretName": "builder-dockercfg-kkbkb",
                      "defaultMode": 384
                    }
                  },
                  {
                    "name": "builder-token-mwb66",
                    "secret": {
                      "secretName": "builder-token-mwb66",
                      "defaultMode": 420
                    }
                  }
                ],
                "initContainers": [
                  {
                    "name": "git-clone",
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "command": [
                      "openshift-git-clone"
                    ],
                    "args": [
                      "--loglevel=0"
                    ],
                    "env": [
                      {
                        "name": "BUILD",
                        "value": "{\"kind\":\"Build\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"my-build-config-0-1\",\"namespace\":\"my-project-0\",\"selfLink\":\"/apis/build.openshift.io/v1/namespaces/my-project-0/builds/my-build-config-0-1\",\"uid\":\"69f4271f-deb9-11e7-a24c-461d677cd862\",\"resourceVersion\":\"8422\",\"creationTimestamp\":\"2017-12-11T21:22:38Z\",\"labels\":{\"buildconfig\":\"my-build-config-0\",\"openshift.io/build-config.name\":\"my-build-config-0\",\"openshift.io/build.start-policy\":\"Serial\"},\"annotations\":{\"openshift.io/build-config.name\":\"my-build-config-0\",\"openshift.io/build.number\":\"1\"},\"ownerReferences\":[{\"apiVersion\":\"build.openshift.io/v1\",\"kind\":\"BuildConfig\",\"name\":\"my-build-config-0\",\"uid\":\"69a7ee58-deb9-11e7-a24c-461d677cd862\",\"controller\":true}]},\"spec\":{\"serviceAccount\":\"builder\",\"source\":{\"type\":\"Git\",\"git\":{\"uri\":\"https://github.com/openshift/ruby-hello-world\"}},\"strategy\":{\"type\":\"Source\",\"sourceStrategy\":{\"from\":{\"kind\":\"DockerImage\",\"name\":\"ruby-20-centos7:latest\"}}},\"output\":{\"to\":{\"kind\":\"DockerImage\",\"name\":\"172.30.1.1:5000/my-project-0/origin-ruby-sample:latest\"},\"pushSecret\":{\"name\":\"builder-dockercfg-kkbkb\"}},\"resources\":{},\"postCommit\":{\"script\":\"bundle exec rake test\"},\"nodeSelector\":null,\"triggeredBy\":[{\"message\":\"Manually triggered\"}]},\"status\":{\"phase\":\"New\",\"outputDockerImageReference\":\"172.30.1.1:5000/my-project-0/origin-ruby-sample:latest\",\"config\":{\"kind\":\"BuildConfig\",\"namespace\":\"my-project-0\",\"name\":\"my-build-config-0\"},\"output\":{}}}\n"
                      },
                      {
                        "name": "SOURCE_REPOSITORY",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "SOURCE_URI",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "ORIGIN_VERSION",
                        "value": "v3.7.0+7ed6862"
                      },
                      {
                        "name": "ALLOWED_UIDS",
                        "value": "1-"
                      },
                      {
                        "name": "DROP_CAPS",
                        "value": "KILL,MKNOD,SETGID,SETUID"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "300m",
                        "memory": "200Mi"
                      },
                      "requests": {
                        "cpu": "200m",
                        "memory": "100Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "buildworkdir",
                        "mountPath": "/tmp/build"
                      },
                      {
                        "name": "builder-token-mwb66",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "FallbackToLogsOnError",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "privileged": false
                    }
                  },
                  {
                    "name": "manage-dockerfile",
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "command": [
                      "openshift-manage-dockerfile"
                    ],
                    "args": [
                      "--loglevel=0"
                    ],
                    "env": [
                      {
                        "name": "BUILD",
                        "value": "{\"kind\":\"Build\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"my-build-config-0-1\",\"namespace\":\"my-project-0\",\"selfLink\":\"/apis/build.openshift.io/v1/namespaces/my-project-0/builds/my-build-config-0-1\",\"uid\":\"69f4271f-deb9-11e7-a24c-461d677cd862\",\"resourceVersion\":\"8422\",\"creationTimestamp\":\"2017-12-11T21:22:38Z\",\"labels\":{\"buildconfig\":\"my-build-config-0\",\"openshift.io/build-config.name\":\"my-build-config-0\",\"openshift.io/build.start-policy\":\"Serial\"},\"annotations\":{\"openshift.io/build-config.name\":\"my-build-config-0\",\"openshift.io/build.number\":\"1\"},\"ownerReferences\":[{\"apiVersion\":\"build.openshift.io/v1\",\"kind\":\"BuildConfig\",\"name\":\"my-build-config-0\",\"uid\":\"69a7ee58-deb9-11e7-a24c-461d677cd862\",\"controller\":true}]},\"spec\":{\"serviceAccount\":\"builder\",\"source\":{\"type\":\"Git\",\"git\":{\"uri\":\"https://github.com/openshift/ruby-hello-world\"}},\"strategy\":{\"type\":\"Source\",\"sourceStrategy\":{\"from\":{\"kind\":\"DockerImage\",\"name\":\"ruby-20-centos7:latest\"}}},\"output\":{\"to\":{\"kind\":\"DockerImage\",\"name\":\"172.30.1.1:5000/my-project-0/origin-ruby-sample:latest\"},\"pushSecret\":{\"name\":\"builder-dockercfg-kkbkb\"}},\"resources\":{},\"postCommit\":{\"script\":\"bundle exec rake test\"},\"nodeSelector\":null,\"triggeredBy\":[{\"message\":\"Manually triggered\"}]},\"status\":{\"phase\":\"New\",\"outputDockerImageReference\":\"172.30.1.1:5000/my-project-0/origin-ruby-sample:latest\",\"config\":{\"kind\":\"BuildConfig\",\"namespace\":\"my-project-0\",\"name\":\"my-build-config-0\"},\"output\":{}}}\n"
                      },
                      {
                        "name": "SOURCE_REPOSITORY",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "SOURCE_URI",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "ORIGIN_VERSION",
                        "value": "v3.7.0+7ed6862"
                      },
                      {
                        "name": "ALLOWED_UIDS",
                        "value": "1-"
                      },
                      {
                        "name": "DROP_CAPS",
                        "value": "KILL,MKNOD,SETGID,SETUID"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "300m",
                        "memory": "200Mi"
                      },
                      "requests": {
                        "cpu": "200m",
                        "memory": "100Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "buildworkdir",
                        "mountPath": "/tmp/build"
                      },
                      {
                        "name": "builder-token-mwb66",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "FallbackToLogsOnError",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "privileged": false
                    }
                  }
                ],
                "containers": [
                  {
                    "name": "sti-build",
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "command": [
                      "openshift-sti-build"
                    ],
                    "args": [
                      "--loglevel=0"
                    ],
                    "env": [
                      {
                        "name": "BUILD",
                        "value": "{\"kind\":\"Build\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"my-build-config-0-1\",\"namespace\":\"my-project-0\",\"selfLink\":\"/apis/build.openshift.io/v1/namespaces/my-project-0/builds/my-build-config-0-1\",\"uid\":\"69f4271f-deb9-11e7-a24c-461d677cd862\",\"resourceVersion\":\"8422\",\"creationTimestamp\":\"2017-12-11T21:22:38Z\",\"labels\":{\"buildconfig\":\"my-build-config-0\",\"openshift.io/build-config.name\":\"my-build-config-0\",\"openshift.io/build.start-policy\":\"Serial\"},\"annotations\":{\"openshift.io/build-config.name\":\"my-build-config-0\",\"openshift.io/build.number\":\"1\"},\"ownerReferences\":[{\"apiVersion\":\"build.openshift.io/v1\",\"kind\":\"BuildConfig\",\"name\":\"my-build-config-0\",\"uid\":\"69a7ee58-deb9-11e7-a24c-461d677cd862\",\"controller\":true}]},\"spec\":{\"serviceAccount\":\"builder\",\"source\":{\"type\":\"Git\",\"git\":{\"uri\":\"https://github.com/openshift/ruby-hello-world\"}},\"strategy\":{\"type\":\"Source\",\"sourceStrategy\":{\"from\":{\"kind\":\"DockerImage\",\"name\":\"ruby-20-centos7:latest\"}}},\"output\":{\"to\":{\"kind\":\"DockerImage\",\"name\":\"172.30.1.1:5000/my-project-0/origin-ruby-sample:latest\"},\"pushSecret\":{\"name\":\"builder-dockercfg-kkbkb\"}},\"resources\":{},\"postCommit\":{\"script\":\"bundle exec rake test\"},\"nodeSelector\":null,\"triggeredBy\":[{\"message\":\"Manually triggered\"}]},\"status\":{\"phase\":\"New\",\"outputDockerImageReference\":\"172.30.1.1:5000/my-project-0/origin-ruby-sample:latest\",\"config\":{\"kind\":\"BuildConfig\",\"namespace\":\"my-project-0\",\"name\":\"my-build-config-0\"},\"output\":{}}}\n"
                      },
                      {
                        "name": "SOURCE_REPOSITORY",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "SOURCE_URI",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "ORIGIN_VERSION",
                        "value": "v3.7.0+7ed6862"
                      },
                      {
                        "name": "ALLOWED_UIDS",
                        "value": "1-"
                      },
                      {
                        "name": "DROP_CAPS",
                        "value": "KILL,MKNOD,SETGID,SETUID"
                      },
                      {
                        "name": "PUSH_DOCKERCFG_PATH",
                        "value": "/var/run/secrets/openshift.io/push"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "300m",
                        "memory": "200Mi"
                      },
                      "requests": {
                        "cpu": "200m",
                        "memory": "100Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "buildworkdir",
                        "mountPath": "/tmp/build"
                      },
                      {
                        "name": "docker-socket",
                        "mountPath": "/var/run/docker.sock"
                      },
                      {
                        "name": "crio-socket",
                        "mountPath": "/var/run/crio.sock"
                      },
                      {
                        "name": "builder-dockercfg-kkbkb-push",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/openshift.io/push"
                      },
                      {
                        "name": "builder-token-mwb66",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "FallbackToLogsOnError",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "privileged": true
                    }
                  }
                ],
                "restartPolicy": "Never",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "builder",
                "serviceAccount": "builder",
                "nodeName": "localhost",
                "securityContext": {},
                "imagePullSecrets": [
                  {
                    "name": "builder-dockercfg-kkbkb"
                  }
                ],
                "schedulerName": "default-scheduler"
              },
              "status": {
                "phase": "Failed",
                "conditions": [
                  {
                    "type": "Initialized",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:49Z"
                  },
                  {
                    "type": "Ready",
                    "status": "False",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:56Z",
                    "reason": "ContainersNotReady",
                    "message": "containers with unready status: [sti-build]"
                  },
                  {
                    "type": "PodScheduled",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:38Z"
                  }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "172.17.0.3",
                "startTime": "2017-12-11T21:22:39Z",
                "initContainerStatuses": [
                  {
                    "name": "git-clone",
                    "state": {
                      "terminated": {
                        "exitCode": 0,
                        "reason": "Completed",
                        "startedAt": "2017-12-11T21:22:40Z",
                        "finishedAt": "2017-12-11T21:22:46Z",
                        "containerID": "docker://dc1b6366e0a47b0cfd22401d935e9b0c96ceda3b843d98518674bdecb520b834"
                      }
                    },
                    "lastState": {},
                    "ready": true,
                    "restartCount": 0,
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529",
                    "containerID": "docker://dc1b6366e0a47b0cfd22401d935e9b0c96ceda3b843d98518674bdecb520b834"
                  },
                  {
                    "name": "manage-dockerfile",
                    "state": {
                      "terminated": {
                        "exitCode": 0,
                        "reason": "Completed",
                        "startedAt": "2017-12-11T21:22:48Z",
                        "finishedAt": "2017-12-11T21:22:49Z",
                        "containerID": "docker://478b195c1a824114c53ce6b57c4f417d0d622de989b7e87ac40ec2a0da86b339"
                      }
                    },
                    "lastState": {},
                    "ready": true,
                    "restartCount": 0,
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529",
                    "containerID": "docker://478b195c1a824114c53ce6b57c4f417d0d622de989b7e87ac40ec2a0da86b339"
                  }
                ],
                "containerStatuses": [
                  {
                    "name": "sti-build",
                    "state": {
                      "terminated": {
                        "exitCode": 1,
                        "reason": "Error",
                        "message": "pulling image error : Error: image library/ruby-20-centos7:latest not found\nerror: build error: unable to get ruby-20-centos7:latest\n",
                        "startedAt": "2017-12-11T21:22:50Z",
                        "finishedAt": "2017-12-11T21:22:55Z",
                        "containerID": "docker://63bccc98503266561b621354f85bcb1d18a49f9ee886cb645f0023b725f02134"
                      }
                    },
                    "lastState": {},
                    "ready": false,
                    "restartCount": 0,
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529",
                    "containerID": "docker://63bccc98503266561b621354f85bcb1d18a49f9ee886cb645f0023b725f02134"
                  }
                ],
                "qosClass": "Burstable"
              }
            },
            {
              "metadata": {
                "name": "my-pod-0",
                "namespace": "my-project-0",
                "selfLink": "/api/v1/namespaces/my-project-0/pods/my-pod-0",
                "uid": "699a55ea-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8554",
                "creationTimestamp": "2017-12-11T21:22:38Z",
                "labels": {
                  "key-pod-label": "value-pod-label"
                },
                "annotations": {
                  "openshift.io/scc": "privileged"
                }
              },
              "spec": {
                "volumes": [
                  {
                    "name": "default-token-t7hd9",
                    "secret": {
                      "secretName": "default-token-t7hd9",
                      "defaultMode": 420
                    }
                  }
                ],
                "containers": [
                  {
                    "name": "my-container",
                    "image": "registry.access.redhat.com/jboss-decisionserver-6/decisionserver63-openshift",
                    "ports": [
                      {
                        "containerPort": 6379,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "default-token-t7hd9",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "Always",
                    "securityContext": {
                      "privileged": true,
                      "seLinuxOptions": {
                        "user": "username",
                        "role": "admin",
                        "type": "default",
                        "level": "s0:c123,c456"
                      }
                    }
                  }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "localhost",
                "securityContext": {},
                "imagePullSecrets": [
                  {
                    "name": "default-dockercfg-rlj74"
                  }
                ],
                "schedulerName": "default-scheduler"
              },
              "status": {
                "phase": "Running",
                "conditions": [
                  {
                    "type": "Initialized",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:38Z"
                  },
                  {
                    "type": "Ready",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:44Z"
                  },
                  {
                    "type": "PodScheduled",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:38Z"
                  }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "172.17.0.2",
                "startTime": "2017-12-11T21:22:38Z",
                "containerStatuses": [
                  {
                    "name": "my-container",
                    "state": {
                      "running": {
                        "startedAt": "2017-12-11T21:22:43Z"
                      }
                    },
                    "lastState": {},
                    "ready": true,
                    "restartCount": 0,
                    "image": "registry.access.redhat.com/jboss-decisionserver-6/decisionserver63-openshift:latest",
                    "imageID": "docker-pullable://registry.access.redhat.com/jboss-decisionserver-6/decisionserver63-openshift@sha256:ba59492801525306d62f870ff75488e193fdd4fbc03e9171c77b0b1efdc8d1fc",
                    "containerID": "docker://f27987a1976b670fb2efc7a6095d121229cffd95e5022454eb4bd6897033263c"
                  }
                ],
                "qosClass": "BestEffort"
              }
            },
            {
              "metadata": {
                "name": "my-build-config-1-1-build",
                "namespace": "my-project-1",
                "selfLink": "/api/v1/namespaces/my-project-1/pods/my-build-config-1-1-build",
                "uid": "6bc03cc3-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8658",
                "creationTimestamp": "2017-12-11T21:22:41Z",
                "labels": {
                  "openshift.io/build.name": "my-build-config-1-1"
                },
                "annotations": {
                  "kubernetes.io/limit-ranger": "LimitRanger plugin set: cpu, memory request for container sti-build; cpu, memory limit for container sti-build; cpu, memory request for init container git-clone; cpu, memory limit for init container git-clone; cpu, memory request for init container manage-dockerfile; cpu, memory limit for init container manage-dockerfile",
                  "openshift.io/build.name": "my-build-config-1-1",
                  "openshift.io/scc": "privileged",
                  "pod.alpha.kubernetes.io/init-container-statuses": "[{\"name\":\"git-clone\",\"state\":{\"terminated\":{\"exitCode\":0,\"reason\":\"Completed\",\"startedAt\":\"2017-12-11T21:22:42Z\",\"finishedAt\":\"2017-12-11T21:22:48Z\",\"containerID\":\"docker://b51c507b00ec2f4e2b78b844fb22467b689ac509dd497b56ea54849b51782c71\"}},\"lastState\":{},\"ready\":true,\"restartCount\":0,\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"imageID\":\"docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529\",\"containerID\":\"docker://b51c507b00ec2f4e2b78b844fb22467b689ac509dd497b56ea54849b51782c71\"},{\"name\":\"manage-dockerfile\",\"state\":{\"terminated\":{\"exitCode\":0,\"reason\":\"Completed\",\"startedAt\":\"2017-12-11T21:22:50Z\",\"finishedAt\":\"2017-12-11T21:22:51Z\",\"containerID\":\"docker://8d759939a286e71c6196ceb983e8e64d0d69ff7b0bc8e976ade6e9ce32e51960\"}},\"lastState\":{},\"ready\":true,\"restartCount\":0,\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"imageID\":\"docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529\",\"containerID\":\"docker://8d759939a286e71c6196ceb983e8e64d0d69ff7b0bc8e976ade6e9ce32e51960\"}]",
                  "pod.alpha.kubernetes.io/init-containers": "[{\"name\":\"git-clone\",\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"command\":[\"openshift-git-clone\"],\"args\":[\"--loglevel=0\"],\"env\":[{\"name\":\"BUILD\",\"value\":\"{\\\"kind\\\":\\\"Build\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":{\\\"name\\\":\\\"my-build-config-1-1\\\",\\\"namespace\\\":\\\"my-project-1\\\",\\\"selfLink\\\":\\\"/apis/build.openshift.io/v1/namespaces/my-project-1/builds/my-build-config-1-1\\\",\\\"uid\\\":\\\"6bbcb5cc-deb9-11e7-a24c-461d677cd862\\\",\\\"resourceVersion\\\":\\\"8499\\\",\\\"creationTimestamp\\\":\\\"2017-12-11T21:22:41Z\\\",\\\"labels\\\":{\\\"buildconfig\\\":\\\"my-build-config-1\\\",\\\"openshift.io/build-config.name\\\":\\\"my-build-config-1\\\",\\\"openshift.io/build.start-policy\\\":\\\"Serial\\\"},\\\"annotations\\\":{\\\"openshift.io/build-config.name\\\":\\\"my-build-config-1\\\",\\\"openshift.io/build.number\\\":\\\"1\\\"},\\\"ownerReferences\\\":[{\\\"apiVersion\\\":\\\"build.openshift.io/v1\\\",\\\"kind\\\":\\\"BuildConfig\\\",\\\"name\\\":\\\"my-build-config-1\\\",\\\"uid\\\":\\\"6b731636-deb9-11e7-a24c-461d677cd862\\\",\\\"controller\\\":true}]},\\\"spec\\\":{\\\"serviceAccount\\\":\\\"builder\\\",\\\"source\\\":{\\\"type\\\":\\\"Git\\\",\\\"git\\\":{\\\"uri\\\":\\\"https://github.com/openshift/ruby-hello-world\\\"}},\\\"strategy\\\":{\\\"type\\\":\\\"Source\\\",\\\"sourceStrategy\\\":{\\\"from\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"ruby-20-centos7:latest\\\"}}},\\\"output\\\":{\\\"to\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"172.30.1.1:5000/my-project-1/origin-ruby-sample:latest\\\"},\\\"pushSecret\\\":{\\\"name\\\":\\\"builder-dockercfg-rlz4n\\\"}},\\\"resources\\\":{},\\\"postCommit\\\":{\\\"script\\\":\\\"bundle exec rake test\\\"},\\\"nodeSelector\\\":null,\\\"triggeredBy\\\":[{\\\"message\\\":\\\"Manually triggered\\\"}]},\\\"status\\\":{\\\"phase\\\":\\\"New\\\",\\\"outputDockerImageReference\\\":\\\"172.30.1.1:5000/my-project-1/origin-ruby-sample:latest\\\",\\\"config\\\":{\\\"kind\\\":\\\"BuildConfig\\\",\\\"namespace\\\":\\\"my-project-1\\\",\\\"name\\\":\\\"my-build-config-1\\\"},\\\"output\\\":{}}}\\n\"},{\"name\":\"SOURCE_REPOSITORY\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"SOURCE_URI\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"ORIGIN_VERSION\",\"value\":\"v3.7.0+7ed6862\"},{\"name\":\"ALLOWED_UIDS\",\"value\":\"1-\"},{\"name\":\"DROP_CAPS\",\"value\":\"KILL,MKNOD,SETGID,SETUID\"}],\"resources\":{\"limits\":{\"cpu\":\"300m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"name\":\"buildworkdir\",\"mountPath\":\"/tmp/build\"},{\"name\":\"builder-token-9zpnb\",\"readOnly\":true,\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\"}],\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"imagePullPolicy\":\"IfNotPresent\",\"securityContext\":{\"privileged\":false}},{\"name\":\"manage-dockerfile\",\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"command\":[\"openshift-manage-dockerfile\"],\"args\":[\"--loglevel=0\"],\"env\":[{\"name\":\"BUILD\",\"value\":\"{\\\"kind\\\":\\\"Build\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":{\\\"name\\\":\\\"my-build-config-1-1\\\",\\\"namespace\\\":\\\"my-project-1\\\",\\\"selfLink\\\":\\\"/apis/build.openshift.io/v1/namespaces/my-project-1/builds/my-build-config-1-1\\\",\\\"uid\\\":\\\"6bbcb5cc-deb9-11e7-a24c-461d677cd862\\\",\\\"resourceVersion\\\":\\\"8499\\\",\\\"creationTimestamp\\\":\\\"2017-12-11T21:22:41Z\\\",\\\"labels\\\":{\\\"buildconfig\\\":\\\"my-build-config-1\\\",\\\"openshift.io/build-config.name\\\":\\\"my-build-config-1\\\",\\\"openshift.io/build.start-policy\\\":\\\"Serial\\\"},\\\"annotations\\\":{\\\"openshift.io/build-config.name\\\":\\\"my-build-config-1\\\",\\\"openshift.io/build.number\\\":\\\"1\\\"},\\\"ownerReferences\\\":[{\\\"apiVersion\\\":\\\"build.openshift.io/v1\\\",\\\"kind\\\":\\\"BuildConfig\\\",\\\"name\\\":\\\"my-build-config-1\\\",\\\"uid\\\":\\\"6b731636-deb9-11e7-a24c-461d677cd862\\\",\\\"controller\\\":true}]},\\\"spec\\\":{\\\"serviceAccount\\\":\\\"builder\\\",\\\"source\\\":{\\\"type\\\":\\\"Git\\\",\\\"git\\\":{\\\"uri\\\":\\\"https://github.com/openshift/ruby-hello-world\\\"}},\\\"strategy\\\":{\\\"type\\\":\\\"Source\\\",\\\"sourceStrategy\\\":{\\\"from\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"ruby-20-centos7:latest\\\"}}},\\\"output\\\":{\\\"to\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"172.30.1.1:5000/my-project-1/origin-ruby-sample:latest\\\"},\\\"pushSecret\\\":{\\\"name\\\":\\\"builder-dockercfg-rlz4n\\\"}},\\\"resources\\\":{},\\\"postCommit\\\":{\\\"script\\\":\\\"bundle exec rake test\\\"},\\\"nodeSelector\\\":null,\\\"triggeredBy\\\":[{\\\"message\\\":\\\"Manually triggered\\\"}]},\\\"status\\\":{\\\"phase\\\":\\\"New\\\",\\\"outputDockerImageReference\\\":\\\"172.30.1.1:5000/my-project-1/origin-ruby-sample:latest\\\",\\\"config\\\":{\\\"kind\\\":\\\"BuildConfig\\\",\\\"namespace\\\":\\\"my-project-1\\\",\\\"name\\\":\\\"my-build-config-1\\\"},\\\"output\\\":{}}}\\n\"},{\"name\":\"SOURCE_REPOSITORY\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"SOURCE_URI\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"ORIGIN_VERSION\",\"value\":\"v3.7.0+7ed6862\"},{\"name\":\"ALLOWED_UIDS\",\"value\":\"1-\"},{\"name\":\"DROP_CAPS\",\"value\":\"KILL,MKNOD,SETGID,SETUID\"}],\"resources\":{\"limits\":{\"cpu\":\"300m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"name\":\"buildworkdir\",\"mountPath\":\"/tmp/build\"},{\"name\":\"builder-token-9zpnb\",\"readOnly\":true,\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\"}],\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"imagePullPolicy\":\"IfNotPresent\",\"securityContext\":{\"privileged\":false}}]",
                  "pod.beta.kubernetes.io/init-container-statuses": "[{\"name\":\"git-clone\",\"state\":{\"terminated\":{\"exitCode\":0,\"reason\":\"Completed\",\"startedAt\":\"2017-12-11T21:22:42Z\",\"finishedAt\":\"2017-12-11T21:22:48Z\",\"containerID\":\"docker://b51c507b00ec2f4e2b78b844fb22467b689ac509dd497b56ea54849b51782c71\"}},\"lastState\":{},\"ready\":true,\"restartCount\":0,\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"imageID\":\"docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529\",\"containerID\":\"docker://b51c507b00ec2f4e2b78b844fb22467b689ac509dd497b56ea54849b51782c71\"},{\"name\":\"manage-dockerfile\",\"state\":{\"terminated\":{\"exitCode\":0,\"reason\":\"Completed\",\"startedAt\":\"2017-12-11T21:22:50Z\",\"finishedAt\":\"2017-12-11T21:22:51Z\",\"containerID\":\"docker://8d759939a286e71c6196ceb983e8e64d0d69ff7b0bc8e976ade6e9ce32e51960\"}},\"lastState\":{},\"ready\":true,\"restartCount\":0,\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"imageID\":\"docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529\",\"containerID\":\"docker://8d759939a286e71c6196ceb983e8e64d0d69ff7b0bc8e976ade6e9ce32e51960\"}]",
                  "pod.beta.kubernetes.io/init-containers": "[{\"name\":\"git-clone\",\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"command\":[\"openshift-git-clone\"],\"args\":[\"--loglevel=0\"],\"env\":[{\"name\":\"BUILD\",\"value\":\"{\\\"kind\\\":\\\"Build\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":{\\\"name\\\":\\\"my-build-config-1-1\\\",\\\"namespace\\\":\\\"my-project-1\\\",\\\"selfLink\\\":\\\"/apis/build.openshift.io/v1/namespaces/my-project-1/builds/my-build-config-1-1\\\",\\\"uid\\\":\\\"6bbcb5cc-deb9-11e7-a24c-461d677cd862\\\",\\\"resourceVersion\\\":\\\"8499\\\",\\\"creationTimestamp\\\":\\\"2017-12-11T21:22:41Z\\\",\\\"labels\\\":{\\\"buildconfig\\\":\\\"my-build-config-1\\\",\\\"openshift.io/build-config.name\\\":\\\"my-build-config-1\\\",\\\"openshift.io/build.start-policy\\\":\\\"Serial\\\"},\\\"annotations\\\":{\\\"openshift.io/build-config.name\\\":\\\"my-build-config-1\\\",\\\"openshift.io/build.number\\\":\\\"1\\\"},\\\"ownerReferences\\\":[{\\\"apiVersion\\\":\\\"build.openshift.io/v1\\\",\\\"kind\\\":\\\"BuildConfig\\\",\\\"name\\\":\\\"my-build-config-1\\\",\\\"uid\\\":\\\"6b731636-deb9-11e7-a24c-461d677cd862\\\",\\\"controller\\\":true}]},\\\"spec\\\":{\\\"serviceAccount\\\":\\\"builder\\\",\\\"source\\\":{\\\"type\\\":\\\"Git\\\",\\\"git\\\":{\\\"uri\\\":\\\"https://github.com/openshift/ruby-hello-world\\\"}},\\\"strategy\\\":{\\\"type\\\":\\\"Source\\\",\\\"sourceStrategy\\\":{\\\"from\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"ruby-20-centos7:latest\\\"}}},\\\"output\\\":{\\\"to\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"172.30.1.1:5000/my-project-1/origin-ruby-sample:latest\\\"},\\\"pushSecret\\\":{\\\"name\\\":\\\"builder-dockercfg-rlz4n\\\"}},\\\"resources\\\":{},\\\"postCommit\\\":{\\\"script\\\":\\\"bundle exec rake test\\\"},\\\"nodeSelector\\\":null,\\\"triggeredBy\\\":[{\\\"message\\\":\\\"Manually triggered\\\"}]},\\\"status\\\":{\\\"phase\\\":\\\"New\\\",\\\"outputDockerImageReference\\\":\\\"172.30.1.1:5000/my-project-1/origin-ruby-sample:latest\\\",\\\"config\\\":{\\\"kind\\\":\\\"BuildConfig\\\",\\\"namespace\\\":\\\"my-project-1\\\",\\\"name\\\":\\\"my-build-config-1\\\"},\\\"output\\\":{}}}\\n\"},{\"name\":\"SOURCE_REPOSITORY\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"SOURCE_URI\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"ORIGIN_VERSION\",\"value\":\"v3.7.0+7ed6862\"},{\"name\":\"ALLOWED_UIDS\",\"value\":\"1-\"},{\"name\":\"DROP_CAPS\",\"value\":\"KILL,MKNOD,SETGID,SETUID\"}],\"resources\":{\"limits\":{\"cpu\":\"300m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"name\":\"buildworkdir\",\"mountPath\":\"/tmp/build\"},{\"name\":\"builder-token-9zpnb\",\"readOnly\":true,\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\"}],\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"imagePullPolicy\":\"IfNotPresent\",\"securityContext\":{\"privileged\":false}},{\"name\":\"manage-dockerfile\",\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"command\":[\"openshift-manage-dockerfile\"],\"args\":[\"--loglevel=0\"],\"env\":[{\"name\":\"BUILD\",\"value\":\"{\\\"kind\\\":\\\"Build\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":{\\\"name\\\":\\\"my-build-config-1-1\\\",\\\"namespace\\\":\\\"my-project-1\\\",\\\"selfLink\\\":\\\"/apis/build.openshift.io/v1/namespaces/my-project-1/builds/my-build-config-1-1\\\",\\\"uid\\\":\\\"6bbcb5cc-deb9-11e7-a24c-461d677cd862\\\",\\\"resourceVersion\\\":\\\"8499\\\",\\\"creationTimestamp\\\":\\\"2017-12-11T21:22:41Z\\\",\\\"labels\\\":{\\\"buildconfig\\\":\\\"my-build-config-1\\\",\\\"openshift.io/build-config.name\\\":\\\"my-build-config-1\\\",\\\"openshift.io/build.start-policy\\\":\\\"Serial\\\"},\\\"annotations\\\":{\\\"openshift.io/build-config.name\\\":\\\"my-build-config-1\\\",\\\"openshift.io/build.number\\\":\\\"1\\\"},\\\"ownerReferences\\\":[{\\\"apiVersion\\\":\\\"build.openshift.io/v1\\\",\\\"kind\\\":\\\"BuildConfig\\\",\\\"name\\\":\\\"my-build-config-1\\\",\\\"uid\\\":\\\"6b731636-deb9-11e7-a24c-461d677cd862\\\",\\\"controller\\\":true}]},\\\"spec\\\":{\\\"serviceAccount\\\":\\\"builder\\\",\\\"source\\\":{\\\"type\\\":\\\"Git\\\",\\\"git\\\":{\\\"uri\\\":\\\"https://github.com/openshift/ruby-hello-world\\\"}},\\\"strategy\\\":{\\\"type\\\":\\\"Source\\\",\\\"sourceStrategy\\\":{\\\"from\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"ruby-20-centos7:latest\\\"}}},\\\"output\\\":{\\\"to\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"172.30.1.1:5000/my-project-1/origin-ruby-sample:latest\\\"},\\\"pushSecret\\\":{\\\"name\\\":\\\"builder-dockercfg-rlz4n\\\"}},\\\"resources\\\":{},\\\"postCommit\\\":{\\\"script\\\":\\\"bundle exec rake test\\\"},\\\"nodeSelector\\\":null,\\\"triggeredBy\\\":[{\\\"message\\\":\\\"Manually triggered\\\"}]},\\\"status\\\":{\\\"phase\\\":\\\"New\\\",\\\"outputDockerImageReference\\\":\\\"172.30.1.1:5000/my-project-1/origin-ruby-sample:latest\\\",\\\"config\\\":{\\\"kind\\\":\\\"BuildConfig\\\",\\\"namespace\\\":\\\"my-project-1\\\",\\\"name\\\":\\\"my-build-config-1\\\"},\\\"output\\\":{}}}\\n\"},{\"name\":\"SOURCE_REPOSITORY\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"SOURCE_URI\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"ORIGIN_VERSION\",\"value\":\"v3.7.0+7ed6862\"},{\"name\":\"ALLOWED_UIDS\",\"value\":\"1-\"},{\"name\":\"DROP_CAPS\",\"value\":\"KILL,MKNOD,SETGID,SETUID\"}],\"resources\":{\"limits\":{\"cpu\":\"300m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"name\":\"buildworkdir\",\"mountPath\":\"/tmp/build\"},{\"name\":\"builder-token-9zpnb\",\"readOnly\":true,\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\"}],\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"imagePullPolicy\":\"IfNotPresent\",\"securityContext\":{\"privileged\":false}}]"
                },
                "ownerReferences": [
                  {
                    "apiVersion": "build.openshift.io/v1",
                    "kind": "Build",
                    "name": "my-build-config-1-1",
                    "uid": "6bbcb5cc-deb9-11e7-a24c-461d677cd862",
                    "controller": true
                  }
                ]
              },
              "spec": {
                "volumes": [
                  {
                    "name": "buildworkdir",
                    "emptyDir": {}
                  },
                  {
                    "name": "docker-socket",
                    "hostPath": {
                      "path": "/var/run/docker.sock"
                    }
                  },
                  {
                    "name": "crio-socket",
                    "hostPath": {
                      "path": "/var/run/crio.sock"
                    }
                  },
                  {
                    "name": "builder-dockercfg-rlz4n-push",
                    "secret": {
                      "secretName": "builder-dockercfg-rlz4n",
                      "defaultMode": 384
                    }
                  },
                  {
                    "name": "builder-token-9zpnb",
                    "secret": {
                      "secretName": "builder-token-9zpnb",
                      "defaultMode": 420
                    }
                  }
                ],
                "initContainers": [
                  {
                    "name": "git-clone",
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "command": [
                      "openshift-git-clone"
                    ],
                    "args": [
                      "--loglevel=0"
                    ],
                    "env": [
                      {
                        "name": "BUILD",
                        "value": "{\"kind\":\"Build\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"my-build-config-1-1\",\"namespace\":\"my-project-1\",\"selfLink\":\"/apis/build.openshift.io/v1/namespaces/my-project-1/builds/my-build-config-1-1\",\"uid\":\"6bbcb5cc-deb9-11e7-a24c-461d677cd862\",\"resourceVersion\":\"8499\",\"creationTimestamp\":\"2017-12-11T21:22:41Z\",\"labels\":{\"buildconfig\":\"my-build-config-1\",\"openshift.io/build-config.name\":\"my-build-config-1\",\"openshift.io/build.start-policy\":\"Serial\"},\"annotations\":{\"openshift.io/build-config.name\":\"my-build-config-1\",\"openshift.io/build.number\":\"1\"},\"ownerReferences\":[{\"apiVersion\":\"build.openshift.io/v1\",\"kind\":\"BuildConfig\",\"name\":\"my-build-config-1\",\"uid\":\"6b731636-deb9-11e7-a24c-461d677cd862\",\"controller\":true}]},\"spec\":{\"serviceAccount\":\"builder\",\"source\":{\"type\":\"Git\",\"git\":{\"uri\":\"https://github.com/openshift/ruby-hello-world\"}},\"strategy\":{\"type\":\"Source\",\"sourceStrategy\":{\"from\":{\"kind\":\"DockerImage\",\"name\":\"ruby-20-centos7:latest\"}}},\"output\":{\"to\":{\"kind\":\"DockerImage\",\"name\":\"172.30.1.1:5000/my-project-1/origin-ruby-sample:latest\"},\"pushSecret\":{\"name\":\"builder-dockercfg-rlz4n\"}},\"resources\":{},\"postCommit\":{\"script\":\"bundle exec rake test\"},\"nodeSelector\":null,\"triggeredBy\":[{\"message\":\"Manually triggered\"}]},\"status\":{\"phase\":\"New\",\"outputDockerImageReference\":\"172.30.1.1:5000/my-project-1/origin-ruby-sample:latest\",\"config\":{\"kind\":\"BuildConfig\",\"namespace\":\"my-project-1\",\"name\":\"my-build-config-1\"},\"output\":{}}}\n"
                      },
                      {
                        "name": "SOURCE_REPOSITORY",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "SOURCE_URI",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "ORIGIN_VERSION",
                        "value": "v3.7.0+7ed6862"
                      },
                      {
                        "name": "ALLOWED_UIDS",
                        "value": "1-"
                      },
                      {
                        "name": "DROP_CAPS",
                        "value": "KILL,MKNOD,SETGID,SETUID"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "300m",
                        "memory": "200Mi"
                      },
                      "requests": {
                        "cpu": "200m",
                        "memory": "100Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "buildworkdir",
                        "mountPath": "/tmp/build"
                      },
                      {
                        "name": "builder-token-9zpnb",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "FallbackToLogsOnError",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "privileged": false
                    }
                  },
                  {
                    "name": "manage-dockerfile",
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "command": [
                      "openshift-manage-dockerfile"
                    ],
                    "args": [
                      "--loglevel=0"
                    ],
                    "env": [
                      {
                        "name": "BUILD",
                        "value": "{\"kind\":\"Build\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"my-build-config-1-1\",\"namespace\":\"my-project-1\",\"selfLink\":\"/apis/build.openshift.io/v1/namespaces/my-project-1/builds/my-build-config-1-1\",\"uid\":\"6bbcb5cc-deb9-11e7-a24c-461d677cd862\",\"resourceVersion\":\"8499\",\"creationTimestamp\":\"2017-12-11T21:22:41Z\",\"labels\":{\"buildconfig\":\"my-build-config-1\",\"openshift.io/build-config.name\":\"my-build-config-1\",\"openshift.io/build.start-policy\":\"Serial\"},\"annotations\":{\"openshift.io/build-config.name\":\"my-build-config-1\",\"openshift.io/build.number\":\"1\"},\"ownerReferences\":[{\"apiVersion\":\"build.openshift.io/v1\",\"kind\":\"BuildConfig\",\"name\":\"my-build-config-1\",\"uid\":\"6b731636-deb9-11e7-a24c-461d677cd862\",\"controller\":true}]},\"spec\":{\"serviceAccount\":\"builder\",\"source\":{\"type\":\"Git\",\"git\":{\"uri\":\"https://github.com/openshift/ruby-hello-world\"}},\"strategy\":{\"type\":\"Source\",\"sourceStrategy\":{\"from\":{\"kind\":\"DockerImage\",\"name\":\"ruby-20-centos7:latest\"}}},\"output\":{\"to\":{\"kind\":\"DockerImage\",\"name\":\"172.30.1.1:5000/my-project-1/origin-ruby-sample:latest\"},\"pushSecret\":{\"name\":\"builder-dockercfg-rlz4n\"}},\"resources\":{},\"postCommit\":{\"script\":\"bundle exec rake test\"},\"nodeSelector\":null,\"triggeredBy\":[{\"message\":\"Manually triggered\"}]},\"status\":{\"phase\":\"New\",\"outputDockerImageReference\":\"172.30.1.1:5000/my-project-1/origin-ruby-sample:latest\",\"config\":{\"kind\":\"BuildConfig\",\"namespace\":\"my-project-1\",\"name\":\"my-build-config-1\"},\"output\":{}}}\n"
                      },
                      {
                        "name": "SOURCE_REPOSITORY",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "SOURCE_URI",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "ORIGIN_VERSION",
                        "value": "v3.7.0+7ed6862"
                      },
                      {
                        "name": "ALLOWED_UIDS",
                        "value": "1-"
                      },
                      {
                        "name": "DROP_CAPS",
                        "value": "KILL,MKNOD,SETGID,SETUID"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "300m",
                        "memory": "200Mi"
                      },
                      "requests": {
                        "cpu": "200m",
                        "memory": "100Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "buildworkdir",
                        "mountPath": "/tmp/build"
                      },
                      {
                        "name": "builder-token-9zpnb",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "FallbackToLogsOnError",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "privileged": false
                    }
                  }
                ],
                "containers": [
                  {
                    "name": "sti-build",
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "command": [
                      "openshift-sti-build"
                    ],
                    "args": [
                      "--loglevel=0"
                    ],
                    "env": [
                      {
                        "name": "BUILD",
                        "value": "{\"kind\":\"Build\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"my-build-config-1-1\",\"namespace\":\"my-project-1\",\"selfLink\":\"/apis/build.openshift.io/v1/namespaces/my-project-1/builds/my-build-config-1-1\",\"uid\":\"6bbcb5cc-deb9-11e7-a24c-461d677cd862\",\"resourceVersion\":\"8499\",\"creationTimestamp\":\"2017-12-11T21:22:41Z\",\"labels\":{\"buildconfig\":\"my-build-config-1\",\"openshift.io/build-config.name\":\"my-build-config-1\",\"openshift.io/build.start-policy\":\"Serial\"},\"annotations\":{\"openshift.io/build-config.name\":\"my-build-config-1\",\"openshift.io/build.number\":\"1\"},\"ownerReferences\":[{\"apiVersion\":\"build.openshift.io/v1\",\"kind\":\"BuildConfig\",\"name\":\"my-build-config-1\",\"uid\":\"6b731636-deb9-11e7-a24c-461d677cd862\",\"controller\":true}]},\"spec\":{\"serviceAccount\":\"builder\",\"source\":{\"type\":\"Git\",\"git\":{\"uri\":\"https://github.com/openshift/ruby-hello-world\"}},\"strategy\":{\"type\":\"Source\",\"sourceStrategy\":{\"from\":{\"kind\":\"DockerImage\",\"name\":\"ruby-20-centos7:latest\"}}},\"output\":{\"to\":{\"kind\":\"DockerImage\",\"name\":\"172.30.1.1:5000/my-project-1/origin-ruby-sample:latest\"},\"pushSecret\":{\"name\":\"builder-dockercfg-rlz4n\"}},\"resources\":{},\"postCommit\":{\"script\":\"bundle exec rake test\"},\"nodeSelector\":null,\"triggeredBy\":[{\"message\":\"Manually triggered\"}]},\"status\":{\"phase\":\"New\",\"outputDockerImageReference\":\"172.30.1.1:5000/my-project-1/origin-ruby-sample:latest\",\"config\":{\"kind\":\"BuildConfig\",\"namespace\":\"my-project-1\",\"name\":\"my-build-config-1\"},\"output\":{}}}\n"
                      },
                      {
                        "name": "SOURCE_REPOSITORY",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "SOURCE_URI",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "ORIGIN_VERSION",
                        "value": "v3.7.0+7ed6862"
                      },
                      {
                        "name": "ALLOWED_UIDS",
                        "value": "1-"
                      },
                      {
                        "name": "DROP_CAPS",
                        "value": "KILL,MKNOD,SETGID,SETUID"
                      },
                      {
                        "name": "PUSH_DOCKERCFG_PATH",
                        "value": "/var/run/secrets/openshift.io/push"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "300m",
                        "memory": "200Mi"
                      },
                      "requests": {
                        "cpu": "200m",
                        "memory": "100Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "buildworkdir",
                        "mountPath": "/tmp/build"
                      },
                      {
                        "name": "docker-socket",
                        "mountPath": "/var/run/docker.sock"
                      },
                      {
                        "name": "crio-socket",
                        "mountPath": "/var/run/crio.sock"
                      },
                      {
                        "name": "builder-dockercfg-rlz4n-push",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/openshift.io/push"
                      },
                      {
                        "name": "builder-token-9zpnb",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "FallbackToLogsOnError",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "privileged": true
                    }
                  }
                ],
                "restartPolicy": "Never",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "builder",
                "serviceAccount": "builder",
                "nodeName": "localhost",
                "securityContext": {},
                "imagePullSecrets": [
                  {
                    "name": "builder-dockercfg-rlz4n"
                  }
                ],
                "schedulerName": "default-scheduler"
              },
              "status": {
                "phase": "Failed",
                "conditions": [
                  {
                    "type": "Initialized",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:51Z"
                  },
                  {
                    "type": "Ready",
                    "status": "False",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:58Z",
                    "reason": "ContainersNotReady",
                    "message": "containers with unready status: [sti-build]"
                  },
                  {
                    "type": "PodScheduled",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:41Z"
                  }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "172.17.0.6",
                "startTime": "2017-12-11T21:22:41Z",
                "initContainerStatuses": [
                  {
                    "name": "git-clone",
                    "state": {
                      "terminated": {
                        "exitCode": 0,
                        "reason": "Completed",
                        "startedAt": "2017-12-11T21:22:42Z",
                        "finishedAt": "2017-12-11T21:22:48Z",
                        "containerID": "docker://b51c507b00ec2f4e2b78b844fb22467b689ac509dd497b56ea54849b51782c71"
                      }
                    },
                    "lastState": {},
                    "ready": true,
                    "restartCount": 0,
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529",
                    "containerID": "docker://b51c507b00ec2f4e2b78b844fb22467b689ac509dd497b56ea54849b51782c71"
                  },
                  {
                    "name": "manage-dockerfile",
                    "state": {
                      "terminated": {
                        "exitCode": 0,
                        "reason": "Completed",
                        "startedAt": "2017-12-11T21:22:50Z",
                        "finishedAt": "2017-12-11T21:22:51Z",
                        "containerID": "docker://8d759939a286e71c6196ceb983e8e64d0d69ff7b0bc8e976ade6e9ce32e51960"
                      }
                    },
                    "lastState": {},
                    "ready": true,
                    "restartCount": 0,
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529",
                    "containerID": "docker://8d759939a286e71c6196ceb983e8e64d0d69ff7b0bc8e976ade6e9ce32e51960"
                  }
                ],
                "containerStatuses": [
                  {
                    "name": "sti-build",
                    "state": {
                      "terminated": {
                        "exitCode": 1,
                        "reason": "Error",
                        "message": "pulling image error : Error: image library/ruby-20-centos7:latest not found\nerror: build error: unable to get ruby-20-centos7:latest\n",
                        "startedAt": "2017-12-11T21:22:52Z",
                        "finishedAt": "2017-12-11T21:22:57Z",
                        "containerID": "docker://37a254c671ba5f6d6a4d32c3f49b5c356ece813038ce25628f0513f47541be77"
                      }
                    },
                    "lastState": {},
                    "ready": false,
                    "restartCount": 0,
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529",
                    "containerID": "docker://37a254c671ba5f6d6a4d32c3f49b5c356ece813038ce25628f0513f47541be77"
                  }
                ],
                "qosClass": "Burstable"
              }
            },
            {
              "metadata": {
                "name": "my-pod-1",
                "namespace": "my-project-1",
                "selfLink": "/api/v1/namespaces/my-project-1/pods/my-pod-1",
                "uid": "6b60d117-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8599",
                "creationTimestamp": "2017-12-11T21:22:40Z",
                "labels": {
                  "key-pod-label": "value-pod-label"
                },
                "annotations": {
                  "openshift.io/scc": "privileged"
                }
              },
              "spec": {
                "volumes": [
                  {
                    "name": "default-token-zkfx2",
                    "secret": {
                      "secretName": "default-token-zkfx2",
                      "defaultMode": 420
                    }
                  }
                ],
                "containers": [
                  {
                    "name": "my-container",
                    "image": "registry.access.redhat.com/jboss-decisionserver-6/decisionserver63-openshift",
                    "ports": [
                      {
                        "containerPort": 6379,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "default-token-zkfx2",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "Always",
                    "securityContext": {
                      "privileged": true,
                      "seLinuxOptions": {
                        "user": "username",
                        "role": "admin",
                        "type": "default",
                        "level": "s0:c123,c456"
                      }
                    }
                  }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "localhost",
                "securityContext": {},
                "imagePullSecrets": [
                  {
                    "name": "default-dockercfg-jh6p6"
                  }
                ],
                "schedulerName": "default-scheduler"
              },
              "status": {
                "phase": "Running",
                "conditions": [
                  {
                    "type": "Initialized",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:41Z"
                  },
                  {
                    "type": "Ready",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:46Z"
                  },
                  {
                    "type": "PodScheduled",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:40Z"
                  }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "172.17.0.4",
                "startTime": "2017-12-11T21:22:41Z",
                "containerStatuses": [
                  {
                    "name": "my-container",
                    "state": {
                      "running": {
                        "startedAt": "2017-12-11T21:22:46Z"
                      }
                    },
                    "lastState": {},
                    "ready": true,
                    "restartCount": 0,
                    "image": "registry.access.redhat.com/jboss-decisionserver-6/decisionserver63-openshift:latest",
                    "imageID": "docker-pullable://registry.access.redhat.com/jboss-decisionserver-6/decisionserver63-openshift@sha256:ba59492801525306d62f870ff75488e193fdd4fbc03e9171c77b0b1efdc8d1fc",
                    "containerID": "docker://e07a1c1ba59a6472e435869e027c1b3aba360487cf7840267287452915c75d79"
                  }
                ],
                "qosClass": "BestEffort"
              }
            },
            {
              "metadata": {
                "name": "my-build-config-2-1-build",
                "namespace": "my-project-2",
                "selfLink": "/api/v1/namespaces/my-project-2/pods/my-build-config-2-1-build",
                "uid": "6db8d17d-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8665",
                "creationTimestamp": "2017-12-11T21:22:44Z",
                "labels": {
                  "openshift.io/build.name": "my-build-config-2-1"
                },
                "annotations": {
                  "kubernetes.io/limit-ranger": "LimitRanger plugin set: cpu, memory request for container sti-build; cpu, memory limit for container sti-build; cpu, memory request for init container git-clone; cpu, memory limit for init container git-clone; cpu, memory request for init container manage-dockerfile; cpu, memory limit for init container manage-dockerfile",
                  "openshift.io/build.name": "my-build-config-2-1",
                  "openshift.io/scc": "privileged",
                  "pod.alpha.kubernetes.io/init-container-statuses": "[{\"name\":\"git-clone\",\"state\":{\"terminated\":{\"exitCode\":0,\"reason\":\"Completed\",\"startedAt\":\"2017-12-11T21:22:46Z\",\"finishedAt\":\"2017-12-11T21:22:52Z\",\"containerID\":\"docker://19164f14a9b3dd0a46f9e58d3c02b327ad423c03563c103515cfec98c763db2e\"}},\"lastState\":{},\"ready\":true,\"restartCount\":0,\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"imageID\":\"docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529\",\"containerID\":\"docker://19164f14a9b3dd0a46f9e58d3c02b327ad423c03563c103515cfec98c763db2e\"},{\"name\":\"manage-dockerfile\",\"state\":{\"terminated\":{\"exitCode\":0,\"reason\":\"Completed\",\"startedAt\":\"2017-12-11T21:22:54Z\",\"finishedAt\":\"2017-12-11T21:22:54Z\",\"containerID\":\"docker://4f7c476935b9532ff0130c4eeb9a961f830d627d1ae84a49d2ae774096da920f\"}},\"lastState\":{},\"ready\":true,\"restartCount\":0,\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"imageID\":\"docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529\",\"containerID\":\"docker://4f7c476935b9532ff0130c4eeb9a961f830d627d1ae84a49d2ae774096da920f\"}]",
                  "pod.alpha.kubernetes.io/init-containers": "[{\"name\":\"git-clone\",\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"command\":[\"openshift-git-clone\"],\"args\":[\"--loglevel=0\"],\"env\":[{\"name\":\"BUILD\",\"value\":\"{\\\"kind\\\":\\\"Build\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":{\\\"name\\\":\\\"my-build-config-2-1\\\",\\\"namespace\\\":\\\"my-project-2\\\",\\\"selfLink\\\":\\\"/apis/build.openshift.io/v1/namespaces/my-project-2/builds/my-build-config-2-1\\\",\\\"uid\\\":\\\"6dae9c13-deb9-11e7-a24c-461d677cd862\\\",\\\"resourceVersion\\\":\\\"8579\\\",\\\"creationTimestamp\\\":\\\"2017-12-11T21:22:44Z\\\",\\\"labels\\\":{\\\"buildconfig\\\":\\\"my-build-config-2\\\",\\\"openshift.io/build-config.name\\\":\\\"my-build-config-2\\\",\\\"openshift.io/build.start-policy\\\":\\\"Serial\\\"},\\\"annotations\\\":{\\\"openshift.io/build-config.name\\\":\\\"my-build-config-2\\\",\\\"openshift.io/build.number\\\":\\\"1\\\"},\\\"ownerReferences\\\":[{\\\"apiVersion\\\":\\\"build.openshift.io/v1\\\",\\\"kind\\\":\\\"BuildConfig\\\",\\\"name\\\":\\\"my-build-config-2\\\",\\\"uid\\\":\\\"6d55f4ec-deb9-11e7-a24c-461d677cd862\\\",\\\"controller\\\":true}]},\\\"spec\\\":{\\\"serviceAccount\\\":\\\"builder\\\",\\\"source\\\":{\\\"type\\\":\\\"Git\\\",\\\"git\\\":{\\\"uri\\\":\\\"https://github.com/openshift/ruby-hello-world\\\"}},\\\"strategy\\\":{\\\"type\\\":\\\"Source\\\",\\\"sourceStrategy\\\":{\\\"from\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"ruby-20-centos7:latest\\\"}}},\\\"output\\\":{\\\"to\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"172.30.1.1:5000/my-project-2/origin-ruby-sample:latest\\\"},\\\"pushSecret\\\":{\\\"name\\\":\\\"builder-dockercfg-wd7v4\\\"}},\\\"resources\\\":{},\\\"postCommit\\\":{\\\"script\\\":\\\"bundle exec rake test\\\"},\\\"nodeSelector\\\":null,\\\"triggeredBy\\\":[{\\\"message\\\":\\\"Manually triggered\\\"}]},\\\"status\\\":{\\\"phase\\\":\\\"New\\\",\\\"outputDockerImageReference\\\":\\\"172.30.1.1:5000/my-project-2/origin-ruby-sample:latest\\\",\\\"config\\\":{\\\"kind\\\":\\\"BuildConfig\\\",\\\"namespace\\\":\\\"my-project-2\\\",\\\"name\\\":\\\"my-build-config-2\\\"},\\\"output\\\":{}}}\\n\"},{\"name\":\"SOURCE_REPOSITORY\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"SOURCE_URI\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"ORIGIN_VERSION\",\"value\":\"v3.7.0+7ed6862\"},{\"name\":\"ALLOWED_UIDS\",\"value\":\"1-\"},{\"name\":\"DROP_CAPS\",\"value\":\"KILL,MKNOD,SETGID,SETUID\"}],\"resources\":{\"limits\":{\"cpu\":\"300m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"name\":\"buildworkdir\",\"mountPath\":\"/tmp/build\"},{\"name\":\"builder-token-dvfw8\",\"readOnly\":true,\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\"}],\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"imagePullPolicy\":\"IfNotPresent\",\"securityContext\":{\"privileged\":false}},{\"name\":\"manage-dockerfile\",\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"command\":[\"openshift-manage-dockerfile\"],\"args\":[\"--loglevel=0\"],\"env\":[{\"name\":\"BUILD\",\"value\":\"{\\\"kind\\\":\\\"Build\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":{\\\"name\\\":\\\"my-build-config-2-1\\\",\\\"namespace\\\":\\\"my-project-2\\\",\\\"selfLink\\\":\\\"/apis/build.openshift.io/v1/namespaces/my-project-2/builds/my-build-config-2-1\\\",\\\"uid\\\":\\\"6dae9c13-deb9-11e7-a24c-461d677cd862\\\",\\\"resourceVersion\\\":\\\"8579\\\",\\\"creationTimestamp\\\":\\\"2017-12-11T21:22:44Z\\\",\\\"labels\\\":{\\\"buildconfig\\\":\\\"my-build-config-2\\\",\\\"openshift.io/build-config.name\\\":\\\"my-build-config-2\\\",\\\"openshift.io/build.start-policy\\\":\\\"Serial\\\"},\\\"annotations\\\":{\\\"openshift.io/build-config.name\\\":\\\"my-build-config-2\\\",\\\"openshift.io/build.number\\\":\\\"1\\\"},\\\"ownerReferences\\\":[{\\\"apiVersion\\\":\\\"build.openshift.io/v1\\\",\\\"kind\\\":\\\"BuildConfig\\\",\\\"name\\\":\\\"my-build-config-2\\\",\\\"uid\\\":\\\"6d55f4ec-deb9-11e7-a24c-461d677cd862\\\",\\\"controller\\\":true}]},\\\"spec\\\":{\\\"serviceAccount\\\":\\\"builder\\\",\\\"source\\\":{\\\"type\\\":\\\"Git\\\",\\\"git\\\":{\\\"uri\\\":\\\"https://github.com/openshift/ruby-hello-world\\\"}},\\\"strategy\\\":{\\\"type\\\":\\\"Source\\\",\\\"sourceStrategy\\\":{\\\"from\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"ruby-20-centos7:latest\\\"}}},\\\"output\\\":{\\\"to\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"172.30.1.1:5000/my-project-2/origin-ruby-sample:latest\\\"},\\\"pushSecret\\\":{\\\"name\\\":\\\"builder-dockercfg-wd7v4\\\"}},\\\"resources\\\":{},\\\"postCommit\\\":{\\\"script\\\":\\\"bundle exec rake test\\\"},\\\"nodeSelector\\\":null,\\\"triggeredBy\\\":[{\\\"message\\\":\\\"Manually triggered\\\"}]},\\\"status\\\":{\\\"phase\\\":\\\"New\\\",\\\"outputDockerImageReference\\\":\\\"172.30.1.1:5000/my-project-2/origin-ruby-sample:latest\\\",\\\"config\\\":{\\\"kind\\\":\\\"BuildConfig\\\",\\\"namespace\\\":\\\"my-project-2\\\",\\\"name\\\":\\\"my-build-config-2\\\"},\\\"output\\\":{}}}\\n\"},{\"name\":\"SOURCE_REPOSITORY\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"SOURCE_URI\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"ORIGIN_VERSION\",\"value\":\"v3.7.0+7ed6862\"},{\"name\":\"ALLOWED_UIDS\",\"value\":\"1-\"},{\"name\":\"DROP_CAPS\",\"value\":\"KILL,MKNOD,SETGID,SETUID\"}],\"resources\":{\"limits\":{\"cpu\":\"300m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"name\":\"buildworkdir\",\"mountPath\":\"/tmp/build\"},{\"name\":\"builder-token-dvfw8\",\"readOnly\":true,\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\"}],\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"imagePullPolicy\":\"IfNotPresent\",\"securityContext\":{\"privileged\":false}}]",
                  "pod.beta.kubernetes.io/init-container-statuses": "[{\"name\":\"git-clone\",\"state\":{\"terminated\":{\"exitCode\":0,\"reason\":\"Completed\",\"startedAt\":\"2017-12-11T21:22:46Z\",\"finishedAt\":\"2017-12-11T21:22:52Z\",\"containerID\":\"docker://19164f14a9b3dd0a46f9e58d3c02b327ad423c03563c103515cfec98c763db2e\"}},\"lastState\":{},\"ready\":true,\"restartCount\":0,\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"imageID\":\"docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529\",\"containerID\":\"docker://19164f14a9b3dd0a46f9e58d3c02b327ad423c03563c103515cfec98c763db2e\"},{\"name\":\"manage-dockerfile\",\"state\":{\"terminated\":{\"exitCode\":0,\"reason\":\"Completed\",\"startedAt\":\"2017-12-11T21:22:54Z\",\"finishedAt\":\"2017-12-11T21:22:54Z\",\"containerID\":\"docker://4f7c476935b9532ff0130c4eeb9a961f830d627d1ae84a49d2ae774096da920f\"}},\"lastState\":{},\"ready\":true,\"restartCount\":0,\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"imageID\":\"docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529\",\"containerID\":\"docker://4f7c476935b9532ff0130c4eeb9a961f830d627d1ae84a49d2ae774096da920f\"}]",
                  "pod.beta.kubernetes.io/init-containers": "[{\"name\":\"git-clone\",\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"command\":[\"openshift-git-clone\"],\"args\":[\"--loglevel=0\"],\"env\":[{\"name\":\"BUILD\",\"value\":\"{\\\"kind\\\":\\\"Build\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":{\\\"name\\\":\\\"my-build-config-2-1\\\",\\\"namespace\\\":\\\"my-project-2\\\",\\\"selfLink\\\":\\\"/apis/build.openshift.io/v1/namespaces/my-project-2/builds/my-build-config-2-1\\\",\\\"uid\\\":\\\"6dae9c13-deb9-11e7-a24c-461d677cd862\\\",\\\"resourceVersion\\\":\\\"8579\\\",\\\"creationTimestamp\\\":\\\"2017-12-11T21:22:44Z\\\",\\\"labels\\\":{\\\"buildconfig\\\":\\\"my-build-config-2\\\",\\\"openshift.io/build-config.name\\\":\\\"my-build-config-2\\\",\\\"openshift.io/build.start-policy\\\":\\\"Serial\\\"},\\\"annotations\\\":{\\\"openshift.io/build-config.name\\\":\\\"my-build-config-2\\\",\\\"openshift.io/build.number\\\":\\\"1\\\"},\\\"ownerReferences\\\":[{\\\"apiVersion\\\":\\\"build.openshift.io/v1\\\",\\\"kind\\\":\\\"BuildConfig\\\",\\\"name\\\":\\\"my-build-config-2\\\",\\\"uid\\\":\\\"6d55f4ec-deb9-11e7-a24c-461d677cd862\\\",\\\"controller\\\":true}]},\\\"spec\\\":{\\\"serviceAccount\\\":\\\"builder\\\",\\\"source\\\":{\\\"type\\\":\\\"Git\\\",\\\"git\\\":{\\\"uri\\\":\\\"https://github.com/openshift/ruby-hello-world\\\"}},\\\"strategy\\\":{\\\"type\\\":\\\"Source\\\",\\\"sourceStrategy\\\":{\\\"from\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"ruby-20-centos7:latest\\\"}}},\\\"output\\\":{\\\"to\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"172.30.1.1:5000/my-project-2/origin-ruby-sample:latest\\\"},\\\"pushSecret\\\":{\\\"name\\\":\\\"builder-dockercfg-wd7v4\\\"}},\\\"resources\\\":{},\\\"postCommit\\\":{\\\"script\\\":\\\"bundle exec rake test\\\"},\\\"nodeSelector\\\":null,\\\"triggeredBy\\\":[{\\\"message\\\":\\\"Manually triggered\\\"}]},\\\"status\\\":{\\\"phase\\\":\\\"New\\\",\\\"outputDockerImageReference\\\":\\\"172.30.1.1:5000/my-project-2/origin-ruby-sample:latest\\\",\\\"config\\\":{\\\"kind\\\":\\\"BuildConfig\\\",\\\"namespace\\\":\\\"my-project-2\\\",\\\"name\\\":\\\"my-build-config-2\\\"},\\\"output\\\":{}}}\\n\"},{\"name\":\"SOURCE_REPOSITORY\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"SOURCE_URI\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"ORIGIN_VERSION\",\"value\":\"v3.7.0+7ed6862\"},{\"name\":\"ALLOWED_UIDS\",\"value\":\"1-\"},{\"name\":\"DROP_CAPS\",\"value\":\"KILL,MKNOD,SETGID,SETUID\"}],\"resources\":{\"limits\":{\"cpu\":\"300m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"name\":\"buildworkdir\",\"mountPath\":\"/tmp/build\"},{\"name\":\"builder-token-dvfw8\",\"readOnly\":true,\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\"}],\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"imagePullPolicy\":\"IfNotPresent\",\"securityContext\":{\"privileged\":false}},{\"name\":\"manage-dockerfile\",\"image\":\"openshift/origin-sti-builder:v3.7.0\",\"command\":[\"openshift-manage-dockerfile\"],\"args\":[\"--loglevel=0\"],\"env\":[{\"name\":\"BUILD\",\"value\":\"{\\\"kind\\\":\\\"Build\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":{\\\"name\\\":\\\"my-build-config-2-1\\\",\\\"namespace\\\":\\\"my-project-2\\\",\\\"selfLink\\\":\\\"/apis/build.openshift.io/v1/namespaces/my-project-2/builds/my-build-config-2-1\\\",\\\"uid\\\":\\\"6dae9c13-deb9-11e7-a24c-461d677cd862\\\",\\\"resourceVersion\\\":\\\"8579\\\",\\\"creationTimestamp\\\":\\\"2017-12-11T21:22:44Z\\\",\\\"labels\\\":{\\\"buildconfig\\\":\\\"my-build-config-2\\\",\\\"openshift.io/build-config.name\\\":\\\"my-build-config-2\\\",\\\"openshift.io/build.start-policy\\\":\\\"Serial\\\"},\\\"annotations\\\":{\\\"openshift.io/build-config.name\\\":\\\"my-build-config-2\\\",\\\"openshift.io/build.number\\\":\\\"1\\\"},\\\"ownerReferences\\\":[{\\\"apiVersion\\\":\\\"build.openshift.io/v1\\\",\\\"kind\\\":\\\"BuildConfig\\\",\\\"name\\\":\\\"my-build-config-2\\\",\\\"uid\\\":\\\"6d55f4ec-deb9-11e7-a24c-461d677cd862\\\",\\\"controller\\\":true}]},\\\"spec\\\":{\\\"serviceAccount\\\":\\\"builder\\\",\\\"source\\\":{\\\"type\\\":\\\"Git\\\",\\\"git\\\":{\\\"uri\\\":\\\"https://github.com/openshift/ruby-hello-world\\\"}},\\\"strategy\\\":{\\\"type\\\":\\\"Source\\\",\\\"sourceStrategy\\\":{\\\"from\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"ruby-20-centos7:latest\\\"}}},\\\"output\\\":{\\\"to\\\":{\\\"kind\\\":\\\"DockerImage\\\",\\\"name\\\":\\\"172.30.1.1:5000/my-project-2/origin-ruby-sample:latest\\\"},\\\"pushSecret\\\":{\\\"name\\\":\\\"builder-dockercfg-wd7v4\\\"}},\\\"resources\\\":{},\\\"postCommit\\\":{\\\"script\\\":\\\"bundle exec rake test\\\"},\\\"nodeSelector\\\":null,\\\"triggeredBy\\\":[{\\\"message\\\":\\\"Manually triggered\\\"}]},\\\"status\\\":{\\\"phase\\\":\\\"New\\\",\\\"outputDockerImageReference\\\":\\\"172.30.1.1:5000/my-project-2/origin-ruby-sample:latest\\\",\\\"config\\\":{\\\"kind\\\":\\\"BuildConfig\\\",\\\"namespace\\\":\\\"my-project-2\\\",\\\"name\\\":\\\"my-build-config-2\\\"},\\\"output\\\":{}}}\\n\"},{\"name\":\"SOURCE_REPOSITORY\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"SOURCE_URI\",\"value\":\"https://github.com/openshift/ruby-hello-world\"},{\"name\":\"ORIGIN_VERSION\",\"value\":\"v3.7.0+7ed6862\"},{\"name\":\"ALLOWED_UIDS\",\"value\":\"1-\"},{\"name\":\"DROP_CAPS\",\"value\":\"KILL,MKNOD,SETGID,SETUID\"}],\"resources\":{\"limits\":{\"cpu\":\"300m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"name\":\"buildworkdir\",\"mountPath\":\"/tmp/build\"},{\"name\":\"builder-token-dvfw8\",\"readOnly\":true,\"mountPath\":\"/var/run/secrets/kubernetes.io/serviceaccount\"}],\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"FallbackToLogsOnError\",\"imagePullPolicy\":\"IfNotPresent\",\"securityContext\":{\"privileged\":false}}]"
                },
                "ownerReferences": [
                  {
                    "apiVersion": "build.openshift.io/v1",
                    "kind": "Build",
                    "name": "my-build-config-2-1",
                    "uid": "6dae9c13-deb9-11e7-a24c-461d677cd862",
                    "controller": true
                  }
                ]
              },
              "spec": {
                "volumes": [
                  {
                    "name": "buildworkdir",
                    "emptyDir": {}
                  },
                  {
                    "name": "docker-socket",
                    "hostPath": {
                      "path": "/var/run/docker.sock"
                    }
                  },
                  {
                    "name": "crio-socket",
                    "hostPath": {
                      "path": "/var/run/crio.sock"
                    }
                  },
                  {
                    "name": "builder-dockercfg-wd7v4-push",
                    "secret": {
                      "secretName": "builder-dockercfg-wd7v4",
                      "defaultMode": 384
                    }
                  },
                  {
                    "name": "builder-token-dvfw8",
                    "secret": {
                      "secretName": "builder-token-dvfw8",
                      "defaultMode": 420
                    }
                  }
                ],
                "initContainers": [
                  {
                    "name": "git-clone",
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "command": [
                      "openshift-git-clone"
                    ],
                    "args": [
                      "--loglevel=0"
                    ],
                    "env": [
                      {
                        "name": "BUILD",
                        "value": "{\"kind\":\"Build\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"my-build-config-2-1\",\"namespace\":\"my-project-2\",\"selfLink\":\"/apis/build.openshift.io/v1/namespaces/my-project-2/builds/my-build-config-2-1\",\"uid\":\"6dae9c13-deb9-11e7-a24c-461d677cd862\",\"resourceVersion\":\"8579\",\"creationTimestamp\":\"2017-12-11T21:22:44Z\",\"labels\":{\"buildconfig\":\"my-build-config-2\",\"openshift.io/build-config.name\":\"my-build-config-2\",\"openshift.io/build.start-policy\":\"Serial\"},\"annotations\":{\"openshift.io/build-config.name\":\"my-build-config-2\",\"openshift.io/build.number\":\"1\"},\"ownerReferences\":[{\"apiVersion\":\"build.openshift.io/v1\",\"kind\":\"BuildConfig\",\"name\":\"my-build-config-2\",\"uid\":\"6d55f4ec-deb9-11e7-a24c-461d677cd862\",\"controller\":true}]},\"spec\":{\"serviceAccount\":\"builder\",\"source\":{\"type\":\"Git\",\"git\":{\"uri\":\"https://github.com/openshift/ruby-hello-world\"}},\"strategy\":{\"type\":\"Source\",\"sourceStrategy\":{\"from\":{\"kind\":\"DockerImage\",\"name\":\"ruby-20-centos7:latest\"}}},\"output\":{\"to\":{\"kind\":\"DockerImage\",\"name\":\"172.30.1.1:5000/my-project-2/origin-ruby-sample:latest\"},\"pushSecret\":{\"name\":\"builder-dockercfg-wd7v4\"}},\"resources\":{},\"postCommit\":{\"script\":\"bundle exec rake test\"},\"nodeSelector\":null,\"triggeredBy\":[{\"message\":\"Manually triggered\"}]},\"status\":{\"phase\":\"New\",\"outputDockerImageReference\":\"172.30.1.1:5000/my-project-2/origin-ruby-sample:latest\",\"config\":{\"kind\":\"BuildConfig\",\"namespace\":\"my-project-2\",\"name\":\"my-build-config-2\"},\"output\":{}}}\n"
                      },
                      {
                        "name": "SOURCE_REPOSITORY",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "SOURCE_URI",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "ORIGIN_VERSION",
                        "value": "v3.7.0+7ed6862"
                      },
                      {
                        "name": "ALLOWED_UIDS",
                        "value": "1-"
                      },
                      {
                        "name": "DROP_CAPS",
                        "value": "KILL,MKNOD,SETGID,SETUID"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "300m",
                        "memory": "200Mi"
                      },
                      "requests": {
                        "cpu": "200m",
                        "memory": "100Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "buildworkdir",
                        "mountPath": "/tmp/build"
                      },
                      {
                        "name": "builder-token-dvfw8",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "FallbackToLogsOnError",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "privileged": false
                    }
                  },
                  {
                    "name": "manage-dockerfile",
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "command": [
                      "openshift-manage-dockerfile"
                    ],
                    "args": [
                      "--loglevel=0"
                    ],
                    "env": [
                      {
                        "name": "BUILD",
                        "value": "{\"kind\":\"Build\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"my-build-config-2-1\",\"namespace\":\"my-project-2\",\"selfLink\":\"/apis/build.openshift.io/v1/namespaces/my-project-2/builds/my-build-config-2-1\",\"uid\":\"6dae9c13-deb9-11e7-a24c-461d677cd862\",\"resourceVersion\":\"8579\",\"creationTimestamp\":\"2017-12-11T21:22:44Z\",\"labels\":{\"buildconfig\":\"my-build-config-2\",\"openshift.io/build-config.name\":\"my-build-config-2\",\"openshift.io/build.start-policy\":\"Serial\"},\"annotations\":{\"openshift.io/build-config.name\":\"my-build-config-2\",\"openshift.io/build.number\":\"1\"},\"ownerReferences\":[{\"apiVersion\":\"build.openshift.io/v1\",\"kind\":\"BuildConfig\",\"name\":\"my-build-config-2\",\"uid\":\"6d55f4ec-deb9-11e7-a24c-461d677cd862\",\"controller\":true}]},\"spec\":{\"serviceAccount\":\"builder\",\"source\":{\"type\":\"Git\",\"git\":{\"uri\":\"https://github.com/openshift/ruby-hello-world\"}},\"strategy\":{\"type\":\"Source\",\"sourceStrategy\":{\"from\":{\"kind\":\"DockerImage\",\"name\":\"ruby-20-centos7:latest\"}}},\"output\":{\"to\":{\"kind\":\"DockerImage\",\"name\":\"172.30.1.1:5000/my-project-2/origin-ruby-sample:latest\"},\"pushSecret\":{\"name\":\"builder-dockercfg-wd7v4\"}},\"resources\":{},\"postCommit\":{\"script\":\"bundle exec rake test\"},\"nodeSelector\":null,\"triggeredBy\":[{\"message\":\"Manually triggered\"}]},\"status\":{\"phase\":\"New\",\"outputDockerImageReference\":\"172.30.1.1:5000/my-project-2/origin-ruby-sample:latest\",\"config\":{\"kind\":\"BuildConfig\",\"namespace\":\"my-project-2\",\"name\":\"my-build-config-2\"},\"output\":{}}}\n"
                      },
                      {
                        "name": "SOURCE_REPOSITORY",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "SOURCE_URI",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "ORIGIN_VERSION",
                        "value": "v3.7.0+7ed6862"
                      },
                      {
                        "name": "ALLOWED_UIDS",
                        "value": "1-"
                      },
                      {
                        "name": "DROP_CAPS",
                        "value": "KILL,MKNOD,SETGID,SETUID"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "300m",
                        "memory": "200Mi"
                      },
                      "requests": {
                        "cpu": "200m",
                        "memory": "100Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "buildworkdir",
                        "mountPath": "/tmp/build"
                      },
                      {
                        "name": "builder-token-dvfw8",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "FallbackToLogsOnError",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "privileged": false
                    }
                  }
                ],
                "containers": [
                  {
                    "name": "sti-build",
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "command": [
                      "openshift-sti-build"
                    ],
                    "args": [
                      "--loglevel=0"
                    ],
                    "env": [
                      {
                        "name": "BUILD",
                        "value": "{\"kind\":\"Build\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"my-build-config-2-1\",\"namespace\":\"my-project-2\",\"selfLink\":\"/apis/build.openshift.io/v1/namespaces/my-project-2/builds/my-build-config-2-1\",\"uid\":\"6dae9c13-deb9-11e7-a24c-461d677cd862\",\"resourceVersion\":\"8579\",\"creationTimestamp\":\"2017-12-11T21:22:44Z\",\"labels\":{\"buildconfig\":\"my-build-config-2\",\"openshift.io/build-config.name\":\"my-build-config-2\",\"openshift.io/build.start-policy\":\"Serial\"},\"annotations\":{\"openshift.io/build-config.name\":\"my-build-config-2\",\"openshift.io/build.number\":\"1\"},\"ownerReferences\":[{\"apiVersion\":\"build.openshift.io/v1\",\"kind\":\"BuildConfig\",\"name\":\"my-build-config-2\",\"uid\":\"6d55f4ec-deb9-11e7-a24c-461d677cd862\",\"controller\":true}]},\"spec\":{\"serviceAccount\":\"builder\",\"source\":{\"type\":\"Git\",\"git\":{\"uri\":\"https://github.com/openshift/ruby-hello-world\"}},\"strategy\":{\"type\":\"Source\",\"sourceStrategy\":{\"from\":{\"kind\":\"DockerImage\",\"name\":\"ruby-20-centos7:latest\"}}},\"output\":{\"to\":{\"kind\":\"DockerImage\",\"name\":\"172.30.1.1:5000/my-project-2/origin-ruby-sample:latest\"},\"pushSecret\":{\"name\":\"builder-dockercfg-wd7v4\"}},\"resources\":{},\"postCommit\":{\"script\":\"bundle exec rake test\"},\"nodeSelector\":null,\"triggeredBy\":[{\"message\":\"Manually triggered\"}]},\"status\":{\"phase\":\"New\",\"outputDockerImageReference\":\"172.30.1.1:5000/my-project-2/origin-ruby-sample:latest\",\"config\":{\"kind\":\"BuildConfig\",\"namespace\":\"my-project-2\",\"name\":\"my-build-config-2\"},\"output\":{}}}\n"
                      },
                      {
                        "name": "SOURCE_REPOSITORY",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "SOURCE_URI",
                        "value": "https://github.com/openshift/ruby-hello-world"
                      },
                      {
                        "name": "ORIGIN_VERSION",
                        "value": "v3.7.0+7ed6862"
                      },
                      {
                        "name": "ALLOWED_UIDS",
                        "value": "1-"
                      },
                      {
                        "name": "DROP_CAPS",
                        "value": "KILL,MKNOD,SETGID,SETUID"
                      },
                      {
                        "name": "PUSH_DOCKERCFG_PATH",
                        "value": "/var/run/secrets/openshift.io/push"
                      }
                    ],
                    "resources": {
                      "limits": {
                        "cpu": "300m",
                        "memory": "200Mi"
                      },
                      "requests": {
                        "cpu": "200m",
                        "memory": "100Mi"
                      }
                    },
                    "volumeMounts": [
                      {
                        "name": "buildworkdir",
                        "mountPath": "/tmp/build"
                      },
                      {
                        "name": "docker-socket",
                        "mountPath": "/var/run/docker.sock"
                      },
                      {
                        "name": "crio-socket",
                        "mountPath": "/var/run/crio.sock"
                      },
                      {
                        "name": "builder-dockercfg-wd7v4-push",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/openshift.io/push"
                      },
                      {
                        "name": "builder-token-dvfw8",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "FallbackToLogsOnError",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "privileged": true
                    }
                  }
                ],
                "restartPolicy": "Never",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "builder",
                "serviceAccount": "builder",
                "nodeName": "localhost",
                "securityContext": {},
                "imagePullSecrets": [
                  {
                    "name": "builder-dockercfg-wd7v4"
                  }
                ],
                "schedulerName": "default-scheduler"
              },
              "status": {
                "phase": "Failed",
                "conditions": [
                  {
                    "type": "Initialized",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:55Z"
                  },
                  {
                    "type": "Ready",
                    "status": "False",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:23:01Z",
                    "reason": "ContainersNotReady",
                    "message": "containers with unready status: [sti-build]"
                  },
                  {
                    "type": "PodScheduled",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:44Z"
                  }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "172.17.0.8",
                "startTime": "2017-12-11T21:22:45Z",
                "initContainerStatuses": [
                  {
                    "name": "git-clone",
                    "state": {
                      "terminated": {
                        "exitCode": 0,
                        "reason": "Completed",
                        "startedAt": "2017-12-11T21:22:46Z",
                        "finishedAt": "2017-12-11T21:22:52Z",
                        "containerID": "docker://19164f14a9b3dd0a46f9e58d3c02b327ad423c03563c103515cfec98c763db2e"
                      }
                    },
                    "lastState": {},
                    "ready": true,
                    "restartCount": 0,
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529",
                    "containerID": "docker://19164f14a9b3dd0a46f9e58d3c02b327ad423c03563c103515cfec98c763db2e"
                  },
                  {
                    "name": "manage-dockerfile",
                    "state": {
                      "terminated": {
                        "exitCode": 0,
                        "reason": "Completed",
                        "startedAt": "2017-12-11T21:22:54Z",
                        "finishedAt": "2017-12-11T21:22:54Z",
                        "containerID": "docker://4f7c476935b9532ff0130c4eeb9a961f830d627d1ae84a49d2ae774096da920f"
                      }
                    },
                    "lastState": {},
                    "ready": true,
                    "restartCount": 0,
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529",
                    "containerID": "docker://4f7c476935b9532ff0130c4eeb9a961f830d627d1ae84a49d2ae774096da920f"
                  }
                ],
                "containerStatuses": [
                  {
                    "name": "sti-build",
                    "state": {
                      "terminated": {
                        "exitCode": 1,
                        "reason": "Error",
                        "message": "pulling image error : Error: image library/ruby-20-centos7:latest not found\nerror: build error: unable to get ruby-20-centos7:latest\n",
                        "startedAt": "2017-12-11T21:22:55Z",
                        "finishedAt": "2017-12-11T21:23:00Z",
                        "containerID": "docker://a1dc1ccfaa130b6a08657967633dc347b55e6f62e33d036347c6a048a2fed403"
                      }
                    },
                    "lastState": {},
                    "ready": false,
                    "restartCount": 0,
                    "image": "openshift/origin-sti-builder:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529",
                    "containerID": "docker://a1dc1ccfaa130b6a08657967633dc347b55e6f62e33d036347c6a048a2fed403"
                  }
                ],
                "qosClass": "Burstable"
              }
            },
            {
              "metadata": {
                "name": "my-pod-2",
                "namespace": "my-project-2",
                "selfLink": "/api/v1/namespaces/my-project-2/pods/my-pod-2",
                "uid": "6d42b9ad-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8616",
                "creationTimestamp": "2017-12-11T21:22:44Z",
                "labels": {
                  "key-pod-label": "value-pod-label"
                },
                "annotations": {
                  "openshift.io/scc": "privileged"
                }
              },
              "spec": {
                "volumes": [
                  {
                    "name": "default-token-rsm9w",
                    "secret": {
                      "secretName": "default-token-rsm9w",
                      "defaultMode": 420
                    }
                  }
                ],
                "containers": [
                  {
                    "name": "my-container",
                    "image": "registry.access.redhat.com/jboss-decisionserver-6/decisionserver63-openshift",
                    "ports": [
                      {
                        "containerPort": 6379,
                        "protocol": "TCP"
                      }
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "default-token-rsm9w",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "Always",
                    "securityContext": {
                      "privileged": true,
                      "seLinuxOptions": {
                        "user": "username",
                        "role": "admin",
                        "type": "default",
                        "level": "s0:c123,c456"
                      }
                    }
                  }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "localhost",
                "securityContext": {},
                "imagePullSecrets": [
                  {
                    "name": "default-dockercfg-74nkx"
                  }
                ],
                "schedulerName": "default-scheduler"
              },
              "status": {
                "phase": "Running",
                "conditions": [
                  {
                    "type": "Initialized",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:44Z"
                  },
                  {
                    "type": "Ready",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:49Z"
                  },
                  {
                    "type": "PodScheduled",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T21:22:44Z"
                  }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "172.17.0.7",
                "startTime": "2017-12-11T21:22:44Z",
                "containerStatuses": [
                  {
                    "name": "my-container",
                    "state": {
                      "running": {
                        "startedAt": "2017-12-11T21:22:49Z"
                      }
                    },
                    "lastState": {},
                    "ready": true,
                    "restartCount": 0,
                    "image": "registry.access.redhat.com/jboss-decisionserver-6/decisionserver63-openshift:latest",
                    "imageID": "docker-pullable://registry.access.redhat.com/jboss-decisionserver-6/decisionserver63-openshift@sha256:ba59492801525306d62f870ff75488e193fdd4fbc03e9171c77b0b1efdc8d1fc",
                    "containerID": "docker://16afb1987477575a1291a0fb5b38b464ae20a43271a3ad6c294930e981393879"
                  }
                ],
                "qosClass": "BestEffort"
              }
            },
            {
              "metadata": {
                "name": "recycler-for-pv0033",
                "namespace": "openshift-infra",
                "selfLink": "/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0033",
                "uid": "979c55c5-deb5-11e7-a24c-461d677cd862",
                "resourceVersion": "6090",
                "creationTimestamp": "2017-12-11T20:55:17Z",
                "annotations": {
                  "openshift.io/scc": "hostmount-anyuid"
                }
              },
              "spec": {
                "volumes": [
                  {
                    "name": "vol",
                    "hostPath": {
                      "path": "/var/lib/minishift/openshift.local.pv/pv0033"
                    }
                  },
                  {
                    "name": "pv-recycler-controller-token-qcrx8",
                    "secret": {
                      "secretName": "pv-recycler-controller-token-qcrx8",
                      "defaultMode": 420
                    }
                  }
                ],
                "containers": [
                  {
                    "name": "pv-recycler",
                    "image": "openshift/origin-recycler:v3.7.0",
                    "command": [
                      "/usr/bin/openshift-recycle"
                    ],
                    "args": [
                      "/scrub"
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "vol",
                        "mountPath": "/scrub"
                      },
                      {
                        "name": "pv-recycler-controller-token-qcrx8",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "MKNOD"
                        ]
                      },
                      "privileged": false,
                      "seLinuxOptions": {
                        "level": "s0:c7,c4"
                      },
                      "runAsUser": 0
                    }
                  }
                ],
                "restartPolicy": "Never",
                "terminationGracePeriodSeconds": 30,
                "activeDeadlineSeconds": 3000,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "pv-recycler-controller",
                "serviceAccount": "pv-recycler-controller",
                "nodeName": "localhost",
                "securityContext": {
                  "seLinuxOptions": {
                    "level": "s0:c7,c4"
                  }
                },
                "imagePullSecrets": [
                  {
                    "name": "pv-recycler-controller-dockercfg-xxfjq"
                  }
                ],
                "schedulerName": "default-scheduler"
              },
              "status": {
                "phase": "Succeeded",
                "conditions": [
                  {
                    "type": "Initialized",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T20:55:17Z",
                    "reason": "PodCompleted"
                  },
                  {
                    "type": "Ready",
                    "status": "False",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T20:55:17Z",
                    "reason": "PodCompleted"
                  },
                  {
                    "type": "PodScheduled",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T20:55:17Z"
                  }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "172.17.0.3",
                "startTime": "2017-12-11T20:55:17Z",
                "containerStatuses": [
                  {
                    "name": "pv-recycler",
                    "state": {
                      "terminated": {
                        "exitCode": 0,
                        "reason": "Completed",
                        "startedAt": "2017-12-11T20:55:19Z",
                        "finishedAt": "2017-12-11T20:55:20Z",
                        "containerID": "docker://512ba95fcede1a2d590bf1fc2af3f51bac6bc303590ffd4ef647f90de0f5af7f"
                      }
                    },
                    "lastState": {},
                    "ready": false,
                    "restartCount": 0,
                    "image": "openshift/origin-recycler:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin-recycler@sha256:3b2015361a1b4e3834e6f9d91c1ebe03eedce65e6701a67f4e94c76c0054d5dc",
                    "containerID": "docker://512ba95fcede1a2d590bf1fc2af3f51bac6bc303590ffd4ef647f90de0f5af7f"
                  }
                ],
                "qosClass": "BestEffort"
              }
            },
            {
              "metadata": {
                "name": "recycler-for-pv0073",
                "namespace": "openshift-infra",
                "selfLink": "/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0073",
                "uid": "d4a01512-de78-11e7-a24c-461d677cd862",
                "resourceVersion": "3270",
                "creationTimestamp": "2017-12-11T13:40:20Z",
                "annotations": {
                  "openshift.io/scc": "hostmount-anyuid"
                }
              },
              "spec": {
                "volumes": [
                  {
                    "name": "vol",
                    "hostPath": {
                      "path": "/var/lib/minishift/openshift.local.pv/pv0073"
                    }
                  },
                  {
                    "name": "pv-recycler-controller-token-qcrx8",
                    "secret": {
                      "secretName": "pv-recycler-controller-token-qcrx8",
                      "defaultMode": 420
                    }
                  }
                ],
                "containers": [
                  {
                    "name": "pv-recycler",
                    "image": "openshift/origin-recycler:v3.7.0",
                    "command": [
                      "/usr/bin/openshift-recycle"
                    ],
                    "args": [
                      "/scrub"
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "vol",
                        "mountPath": "/scrub"
                      },
                      {
                        "name": "pv-recycler-controller-token-qcrx8",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "MKNOD"
                        ]
                      },
                      "privileged": false,
                      "seLinuxOptions": {
                        "level": "s0:c7,c4"
                      },
                      "runAsUser": 0
                    }
                  }
                ],
                "restartPolicy": "Never",
                "terminationGracePeriodSeconds": 30,
                "activeDeadlineSeconds": 3000,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "pv-recycler-controller",
                "serviceAccount": "pv-recycler-controller",
                "nodeName": "localhost",
                "securityContext": {
                  "seLinuxOptions": {
                    "level": "s0:c7,c4"
                  }
                },
                "imagePullSecrets": [
                  {
                    "name": "pv-recycler-controller-dockercfg-xxfjq"
                  }
                ],
                "schedulerName": "default-scheduler"
              },
              "status": {
                "phase": "Succeeded",
                "conditions": [
                  {
                    "type": "Initialized",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T13:40:20Z",
                    "reason": "PodCompleted"
                  },
                  {
                    "type": "Ready",
                    "status": "False",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T13:40:20Z",
                    "reason": "PodCompleted"
                  },
                  {
                    "type": "PodScheduled",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T13:40:20Z"
                  }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "172.17.0.3",
                "startTime": "2017-12-11T13:40:20Z",
                "containerStatuses": [
                  {
                    "name": "pv-recycler",
                    "state": {
                      "terminated": {
                        "exitCode": 0,
                        "reason": "Completed",
                        "startedAt": "2017-12-11T13:40:21Z",
                        "finishedAt": "2017-12-11T13:40:22Z",
                        "containerID": "docker://f5da41abc41443483f37ea2d21392923110263fc6a84bb7f2f547d3d80784c21"
                      }
                    },
                    "lastState": {},
                    "ready": false,
                    "restartCount": 0,
                    "image": "openshift/origin-recycler:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin-recycler@sha256:3b2015361a1b4e3834e6f9d91c1ebe03eedce65e6701a67f4e94c76c0054d5dc",
                    "containerID": "docker://f5da41abc41443483f37ea2d21392923110263fc6a84bb7f2f547d3d80784c21"
                  }
                ],
                "qosClass": "BestEffort"
              }
            },
            {
              "metadata": {
                "name": "recycler-for-pv0083",
                "namespace": "openshift-infra",
                "selfLink": "/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0083",
                "uid": "eb059ef7-de79-11e7-a24c-461d677cd862",
                "resourceVersion": "4305",
                "creationTimestamp": "2017-12-11T13:48:07Z",
                "annotations": {
                  "openshift.io/scc": "hostmount-anyuid"
                }
              },
              "spec": {
                "volumes": [
                  {
                    "name": "vol",
                    "hostPath": {
                      "path": "/var/lib/minishift/openshift.local.pv/pv0083"
                    }
                  },
                  {
                    "name": "pv-recycler-controller-token-qcrx8",
                    "secret": {
                      "secretName": "pv-recycler-controller-token-qcrx8",
                      "defaultMode": 420
                    }
                  }
                ],
                "containers": [
                  {
                    "name": "pv-recycler",
                    "image": "openshift/origin-recycler:v3.7.0",
                    "command": [
                      "/usr/bin/openshift-recycle"
                    ],
                    "args": [
                      "/scrub"
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "vol",
                        "mountPath": "/scrub"
                      },
                      {
                        "name": "pv-recycler-controller-token-qcrx8",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "MKNOD"
                        ]
                      },
                      "privileged": false,
                      "seLinuxOptions": {
                        "level": "s0:c7,c4"
                      },
                      "runAsUser": 0
                    }
                  }
                ],
                "restartPolicy": "Never",
                "terminationGracePeriodSeconds": 30,
                "activeDeadlineSeconds": 3000,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "pv-recycler-controller",
                "serviceAccount": "pv-recycler-controller",
                "nodeName": "localhost",
                "securityContext": {
                  "seLinuxOptions": {
                    "level": "s0:c7,c4"
                  }
                },
                "imagePullSecrets": [
                  {
                    "name": "pv-recycler-controller-dockercfg-xxfjq"
                  }
                ],
                "schedulerName": "default-scheduler"
              },
              "status": {
                "phase": "Succeeded",
                "conditions": [
                  {
                    "type": "Initialized",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T13:48:11Z",
                    "reason": "PodCompleted"
                  },
                  {
                    "type": "Ready",
                    "status": "False",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T13:48:11Z",
                    "reason": "PodCompleted"
                  },
                  {
                    "type": "PodScheduled",
                    "status": "True",
                    "lastProbeTime": null,
                    "lastTransitionTime": "2017-12-11T13:48:07Z"
                  }
                ],
                "hostIP": "10.0.2.15",
                "podIP": "172.17.0.3",
                "startTime": "2017-12-11T13:48:11Z",
                "containerStatuses": [
                  {
                    "name": "pv-recycler",
                    "state": {
                      "terminated": {
                        "exitCode": 0,
                        "reason": "Completed",
                        "startedAt": "2017-12-11T13:48:14Z",
                        "finishedAt": "2017-12-11T13:48:15Z",
                        "containerID": "docker://ede59123d5bb41092bb00bcf7df52129455822599fa1e838c1154a95dd8a6142"
                      }
                    },
                    "lastState": {},
                    "ready": false,
                    "restartCount": 0,
                    "image": "openshift/origin-recycler:v3.7.0",
                    "imageID": "docker-pullable://openshift/origin-recycler@sha256:3b2015361a1b4e3834e6f9d91c1ebe03eedce65e6701a67f4e94c76c0054d5dc",
                    "containerID": "docker://ede59123d5bb41092bb00bcf7df52129455822599fa1e838c1154a95dd8a6142"
                  }
                ],
                "qosClass": "BestEffort"
              }
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:22 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/api/v1/services?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:22 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "ServiceList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/api/v1/services",
            "resourceVersion": "8717"
          },
          "items": [
            {
              "metadata": {
                "name": "docker-registry",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/services/docker-registry",
                "uid": "602058cf-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "311",
                "creationTimestamp": "2017-12-11T13:15:36Z",
                "labels": {
                  "docker-registry": "default"
                }
              },
              "spec": {
                "ports": [
                  {
                    "name": "5000-tcp",
                    "protocol": "TCP",
                    "port": 5000,
                    "targetPort": 5000
                  }
                ],
                "selector": {
                  "docker-registry": "default"
                },
                "clusterIP": "172.30.1.1",
                "type": "ClusterIP",
                "sessionAffinity": "ClientIP"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/services/kubernetes",
                "uid": "5eaea4b7-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "72",
                "creationTimestamp": "2017-12-11T13:15:33Z",
                "labels": {
                  "component": "apiserver",
                  "provider": "kubernetes"
                }
              },
              "spec": {
                "ports": [
                  {
                    "name": "https",
                    "protocol": "TCP",
                    "port": 443,
                    "targetPort": 8443
                  },
                  {
                    "name": "dns",
                    "protocol": "UDP",
                    "port": 53,
                    "targetPort": 8053
                  },
                  {
                    "name": "dns-tcp",
                    "protocol": "TCP",
                    "port": 53,
                    "targetPort": 8053
                  }
                ],
                "clusterIP": "172.30.0.1",
                "type": "ClusterIP",
                "sessionAffinity": "ClientIP"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "name": "router",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/services/router",
                "uid": "60b371df-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "353",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "labels": {
                  "router": "router"
                },
                "annotations": {
                  "prometheus.io/port": "1936",
                  "prometheus.io/scrape": "true",
                  "prometheus.openshift.io/password": "jrl3OWQIGD",
                  "prometheus.openshift.io/username": "admin"
                }
              },
              "spec": {
                "ports": [
                  {
                    "name": "80-tcp",
                    "protocol": "TCP",
                    "port": 80,
                    "targetPort": 80
                  },
                  {
                    "name": "443-tcp",
                    "protocol": "TCP",
                    "port": 443,
                    "targetPort": 443
                  },
                  {
                    "name": "1936-tcp",
                    "protocol": "TCP",
                    "port": 1936,
                    "targetPort": 1936
                  }
                ],
                "selector": {
                  "router": "router"
                },
                "clusterIP": "172.30.112.254",
                "type": "ClusterIP",
                "sessionAffinity": "None"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "name": "my-service-0",
                "namespace": "my-project-0",
                "selfLink": "/api/v1/namespaces/my-project-0/services/my-service-0",
                "uid": "69a0e898-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8404",
                "creationTimestamp": "2017-12-11T21:22:38Z"
              },
              "spec": {
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 5000,
                    "targetPort": 5000
                  }
                ],
                "selector": {
                  "docker-registry": "default"
                },
                "clusterIP": "172.30.182.119",
                "type": "ClusterIP",
                "sessionAffinity": "None"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "name": "my-service-1",
                "namespace": "my-project-1",
                "selfLink": "/api/v1/namespaces/my-project-1/services/my-service-1",
                "uid": "6b68576a-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8480",
                "creationTimestamp": "2017-12-11T21:22:41Z"
              },
              "spec": {
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 5000,
                    "targetPort": 5000
                  }
                ],
                "selector": {
                  "docker-registry": "default"
                },
                "clusterIP": "172.30.113.10",
                "type": "ClusterIP",
                "sessionAffinity": "None"
              },
              "status": {
                "loadBalancer": {}
              }
            },
            {
              "metadata": {
                "name": "my-service-2",
                "namespace": "my-project-2",
                "selfLink": "/api/v1/namespaces/my-project-2/services/my-service-2",
                "uid": "6d4cd897-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8562",
                "creationTimestamp": "2017-12-11T21:22:44Z"
              },
              "spec": {
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 5000,
                    "targetPort": 5000
                  }
                ],
                "selector": {
                  "docker-registry": "default"
                },
                "clusterIP": "172.30.145.27",
                "type": "ClusterIP",
                "sessionAffinity": "None"
              },
              "status": {
                "loadBalancer": {}
              }
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:22 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/api/v1/replicationcontrollers?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:22 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "ReplicationControllerList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/api/v1/replicationcontrollers",
            "resourceVersion": "8717"
          },
          "items": [
            {
              "metadata": {
                "name": "docker-registry-1",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/replicationcontrollers/docker-registry-1",
                "uid": "64fe9a25-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "4881",
                "generation": 2,
                "creationTimestamp": "2017-12-11T13:15:44Z",
                "labels": {
                  "docker-registry": "default",
                  "openshift.io/deployment-config.name": "docker-registry"
                },
                "annotations": {
                  "openshift.io/deployer-pod.completed-at": "2017-12-11 13:16:17 +0000 UTC",
                  "openshift.io/deployer-pod.created-at": "2017-12-11 13:15:44 +0000 UTC",
                  "openshift.io/deployer-pod.name": "docker-registry-1-deploy",
                  "openshift.io/deployment-config.latest-version": "1",
                  "openshift.io/deployment-config.name": "docker-registry",
                  "openshift.io/deployment.phase": "Complete",
                  "openshift.io/deployment.replicas": "1",
                  "openshift.io/deployment.status-reason": "config change",
                  "openshift.io/encoded-deployment-config": "{\"kind\":\"DeploymentConfig\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"docker-registry\",\"namespace\":\"default\",\"selfLink\":\"/apis/apps.openshift.io/v1/namespaces/default/deploymentconfigs/docker-registry\",\"uid\":\"601f30a4-de75-11e7-a24c-461d677cd862\",\"resourceVersion\":\"600\",\"generation\":1,\"creationTimestamp\":\"2017-12-11T13:15:36Z\",\"labels\":{\"docker-registry\":\"default\"}},\"spec\":{\"strategy\":{\"type\":\"Rolling\",\"rollingParams\":{\"updatePeriodSeconds\":1,\"intervalSeconds\":1,\"timeoutSeconds\":600,\"maxUnavailable\":\"25%\",\"maxSurge\":\"25%\"},\"resources\":{},\"activeDeadlineSeconds\":21600},\"triggers\":[{\"type\":\"ConfigChange\"}],\"replicas\":1,\"test\":false,\"selector\":{\"docker-registry\":\"default\"},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"docker-registry\":\"default\"}},\"spec\":{\"volumes\":[{\"name\":\"registry-storage\",\"hostPath\":{\"path\":\"/var/lib/minishift/openshift.local.pv/registry\"}}],\"containers\":[{\"name\":\"registry\",\"image\":\"openshift/origin-docker-registry:v3.7.0\",\"ports\":[{\"containerPort\":5000,\"protocol\":\"TCP\"}],\"env\":[{\"name\":\"REGISTRY_HTTP_ADDR\",\"value\":\":5000\"},{\"name\":\"REGISTRY_HTTP_NET\",\"value\":\"tcp\"},{\"name\":\"REGISTRY_HTTP_SECRET\",\"value\":\"hzyuQQzbq2P0OUX2RdODaQxc+tEaz/LHXQwUbjAMEyM=\"},{\"name\":\"REGISTRY_MIDDLEWARE_REPOSITORY_OPENSHIFT_ENFORCEQUOTA\",\"value\":\"false\"}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"256Mi\"}},\"volumeMounts\":[{\"name\":\"registry-storage\",\"mountPath\":\"/registry\"}],\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":5000,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"timeoutSeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"failureThreshold\":3},\"readinessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":5000,\"scheme\":\"HTTP\"},\"timeoutSeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"failureThreshold\":3},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"imagePullPolicy\":\"IfNotPresent\",\"securityContext\":{\"privileged\":true}}],\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":30,\"dnsPolicy\":\"ClusterFirst\",\"serviceAccountName\":\"registry\",\"serviceAccount\":\"registry\",\"securityContext\":{},\"schedulerName\":\"default-scheduler\"}}},\"status\":{\"latestVersion\":1,\"observedGeneration\":1,\"replicas\":0,\"updatedReplicas\":0,\"availableReplicas\":0,\"unavailableReplicas\":0,\"details\":{\"message\":\"config change\",\"causes\":[{\"type\":\"ConfigChange\"}]},\"conditions\":[{\"type\":\"Available\",\"status\":\"False\",\"lastUpdateTime\":\"2017-12-11T13:15:38Z\",\"lastTransitionTime\":\"2017-12-11T13:15:38Z\",\"message\":\"Deployment config does not have minimum availability.\"},{\"type\":\"Progressing\",\"status\":\"False\",\"lastUpdateTime\":\"2017-12-11T13:15:38Z\",\"lastTransitionTime\":\"2017-12-11T13:15:38Z\",\"reason\":\"ReplicationControllerCreateError\",\"message\":\"replicationcontrollers \\\"docker-registry-1\\\" is forbidden: cannot set blockOwnerDeletion in this case because cannot find RESTMapping for APIVersion apps.openshift.io/v1 Kind DeploymentConfig: allowed by openshift authorizer, no matches for apps.openshift.io/, Kind=DeploymentConfig\"}]}}\n"
                },
                "ownerReferences": [
                  {
                    "apiVersion": "apps.openshift.io/v1",
                    "kind": "DeploymentConfig",
                    "name": "docker-registry",
                    "uid": "601f30a4-de75-11e7-a24c-461d677cd862",
                    "controller": true,
                    "blockOwnerDeletion": true
                  }
                ]
              },
              "spec": {
                "replicas": 1,
                "selector": {
                  "deployment": "docker-registry-1",
                  "deploymentconfig": "docker-registry",
                  "docker-registry": "default"
                },
                "template": {
                  "metadata": {
                    "creationTimestamp": null,
                    "labels": {
                      "deployment": "docker-registry-1",
                      "deploymentconfig": "docker-registry",
                      "docker-registry": "default"
                    },
                    "annotations": {
                      "openshift.io/deployment-config.latest-version": "1",
                      "openshift.io/deployment-config.name": "docker-registry",
                      "openshift.io/deployment.name": "docker-registry-1"
                    }
                  },
                  "spec": {
                    "volumes": [
                      {
                        "name": "registry-storage",
                        "hostPath": {
                          "path": "/var/lib/minishift/openshift.local.pv/registry"
                        }
                      }
                    ],
                    "containers": [
                      {
                        "name": "registry",
                        "image": "openshift/origin-docker-registry:v3.7.0",
                        "ports": [
                          {
                            "containerPort": 5000,
                            "protocol": "TCP"
                          }
                        ],
                        "env": [
                          {
                            "name": "REGISTRY_HTTP_ADDR",
                            "value": ":5000"
                          },
                          {
                            "name": "REGISTRY_HTTP_NET",
                            "value": "tcp"
                          },
                          {
                            "name": "REGISTRY_HTTP_SECRET",
                            "value": "hzyuQQzbq2P0OUX2RdODaQxc+tEaz/LHXQwUbjAMEyM="
                          },
                          {
                            "name": "REGISTRY_MIDDLEWARE_REPOSITORY_OPENSHIFT_ENFORCEQUOTA",
                            "value": "false"
                          }
                        ],
                        "resources": {
                          "requests": {
                            "cpu": "100m",
                            "memory": "256Mi"
                          }
                        },
                        "volumeMounts": [
                          {
                            "name": "registry-storage",
                            "mountPath": "/registry"
                          }
                        ],
                        "livenessProbe": {
                          "httpGet": {
                            "path": "/healthz",
                            "port": 5000,
                            "scheme": "HTTP"
                          },
                          "initialDelaySeconds": 10,
                          "timeoutSeconds": 5,
                          "periodSeconds": 10,
                          "successThreshold": 1,
                          "failureThreshold": 3
                        },
                        "readinessProbe": {
                          "httpGet": {
                            "path": "/healthz",
                            "port": 5000,
                            "scheme": "HTTP"
                          },
                          "timeoutSeconds": 5,
                          "periodSeconds": 10,
                          "successThreshold": 1,
                          "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                          "privileged": true
                        }
                      }
                    ],
                    "restartPolicy": "Always",
                    "terminationGracePeriodSeconds": 30,
                    "dnsPolicy": "ClusterFirst",
                    "serviceAccountName": "registry",
                    "serviceAccount": "registry",
                    "securityContext": {},
                    "schedulerName": "default-scheduler"
                  }
                }
              },
              "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 2
              }
            },
            {
              "metadata": {
                "name": "router-1",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/replicationcontrollers/router-1",
                "uid": "64f27dbd-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "7431",
                "generation": 2,
                "creationTimestamp": "2017-12-11T13:15:44Z",
                "labels": {
                  "openshift.io/deployment-config.name": "router",
                  "router": "router"
                },
                "annotations": {
                  "openshift.io/deployer-pod.completed-at": "2017-12-11 13:16:40 +0000 UTC",
                  "openshift.io/deployer-pod.created-at": "2017-12-11 13:15:44 +0000 UTC",
                  "openshift.io/deployer-pod.name": "router-1-deploy",
                  "openshift.io/deployment-config.latest-version": "1",
                  "openshift.io/deployment-config.name": "router",
                  "openshift.io/deployment.phase": "Complete",
                  "openshift.io/deployment.replicas": "1",
                  "openshift.io/deployment.status-reason": "config change",
                  "openshift.io/encoded-deployment-config": "{\"kind\":\"DeploymentConfig\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"router\",\"namespace\":\"default\",\"selfLink\":\"/apis/apps.openshift.io/v1/namespaces/default/deploymentconfigs/router\",\"uid\":\"60b15e0f-de75-11e7-a24c-461d677cd862\",\"resourceVersion\":\"596\",\"generation\":1,\"creationTimestamp\":\"2017-12-11T13:15:37Z\",\"labels\":{\"router\":\"router\"}},\"spec\":{\"strategy\":{\"type\":\"Rolling\",\"rollingParams\":{\"updatePeriodSeconds\":1,\"intervalSeconds\":1,\"timeoutSeconds\":600,\"maxUnavailable\":\"25%\",\"maxSurge\":0},\"resources\":{},\"activeDeadlineSeconds\":21600},\"triggers\":[{\"type\":\"ConfigChange\"}],\"replicas\":1,\"test\":false,\"selector\":{\"router\":\"router\"},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"router\":\"router\"}},\"spec\":{\"volumes\":[{\"name\":\"server-certificate\",\"secret\":{\"secretName\":\"router-certs\",\"defaultMode\":420}}],\"containers\":[{\"name\":\"router\",\"image\":\"openshift/origin-haproxy-router:v3.7.0\",\"ports\":[{\"hostPort\":80,\"containerPort\":80,\"protocol\":\"TCP\"},{\"hostPort\":443,\"containerPort\":443,\"protocol\":\"TCP\"},{\"name\":\"stats\",\"hostPort\":1936,\"containerPort\":1936,\"protocol\":\"TCP\"}],\"env\":[{\"name\":\"DEFAULT_CERTIFICATE_DIR\",\"value\":\"/etc/pki/tls/private\"},{\"name\":\"DEFAULT_CERTIFICATE_PATH\",\"value\":\"/etc/pki/tls/private/tls.crt\"},{\"name\":\"ROUTER_CIPHERS\"},{\"name\":\"ROUTER_EXTERNAL_HOST_HOSTNAME\"},{\"name\":\"ROUTER_EXTERNAL_HOST_HTTPS_VSERVER\"},{\"name\":\"ROUTER_EXTERNAL_HOST_HTTP_VSERVER\"},{\"name\":\"ROUTER_EXTERNAL_HOST_INSECURE\",\"value\":\"false\"},{\"name\":\"ROUTER_EXTERNAL_HOST_INTERNAL_ADDRESS\"},{\"name\":\"ROUTER_EXTERNAL_HOST_PARTITION_PATH\"},{\"name\":\"ROUTER_EXTERNAL_HOST_PASSWORD\"},{\"name\":\"ROUTER_EXTERNAL_HOST_PRIVKEY\",\"value\":\"/etc/secret-volume/router.pem\"},{\"name\":\"ROUTER_EXTERNAL_HOST_USERNAME\"},{\"name\":\"ROUTER_EXTERNAL_HOST_VXLAN_GW_CIDR\"},{\"name\":\"ROUTER_LISTEN_ADDR\",\"value\":\"0.0.0.0:1936\"},{\"name\":\"ROUTER_METRICS_TYPE\",\"value\":\"haproxy\"},{\"name\":\"ROUTER_SERVICE_HTTPS_PORT\",\"value\":\"443\"},{\"name\":\"ROUTER_SERVICE_HTTP_PORT\",\"value\":\"80\"},{\"name\":\"ROUTER_SERVICE_NAME\",\"value\":\"router\"},{\"name\":\"ROUTER_SERVICE_NAMESPACE\",\"value\":\"default\"},{\"name\":\"ROUTER_SUBDOMAIN\"},{\"name\":\"STATS_PASSWORD\",\"value\":\"jrl3OWQIGD\"},{\"name\":\"STATS_PORT\",\"value\":\"1936\"},{\"name\":\"STATS_USERNAME\",\"value\":\"admin\"}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"256Mi\"}},\"volumeMounts\":[{\"name\":\"server-certificate\",\"readOnly\":true,\"mountPath\":\"/etc/pki/tls/private\"}],\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":1936,\"host\":\"localhost\",\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"timeoutSeconds\":1,\"periodSeconds\":10,\"successThreshold\":1,\"failureThreshold\":3},\"readinessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":1936,\"host\":\"localhost\",\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"timeoutSeconds\":1,\"periodSeconds\":10,\"successThreshold\":1,\"failureThreshold\":3},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\",\"imagePullPolicy\":\"IfNotPresent\"}],\"restartPolicy\":\"Always\",\"terminationGracePeriodSeconds\":30,\"dnsPolicy\":\"ClusterFirst\",\"serviceAccountName\":\"router\",\"serviceAccount\":\"router\",\"hostNetwork\":true,\"securityContext\":{},\"schedulerName\":\"default-scheduler\"}}},\"status\":{\"latestVersion\":1,\"observedGeneration\":1,\"replicas\":0,\"updatedReplicas\":0,\"availableReplicas\":0,\"unavailableReplicas\":0,\"details\":{\"message\":\"config change\",\"causes\":[{\"type\":\"ConfigChange\"}]},\"conditions\":[{\"type\":\"Available\",\"status\":\"False\",\"lastUpdateTime\":\"2017-12-11T13:15:38Z\",\"lastTransitionTime\":\"2017-12-11T13:15:38Z\",\"message\":\"Deployment config does not have minimum availability.\"},{\"type\":\"Progressing\",\"status\":\"False\",\"lastUpdateTime\":\"2017-12-11T13:15:38Z\",\"lastTransitionTime\":\"2017-12-11T13:15:38Z\",\"reason\":\"ReplicationControllerCreateError\",\"message\":\"replicationcontrollers \\\"router-1\\\" is forbidden: cannot set blockOwnerDeletion in this case because cannot find RESTMapping for APIVersion apps.openshift.io/v1 Kind DeploymentConfig: allowed by openshift authorizer, no matches for apps.openshift.io/, Kind=DeploymentConfig\"}]}}\n"
                },
                "ownerReferences": [
                  {
                    "apiVersion": "apps.openshift.io/v1",
                    "kind": "DeploymentConfig",
                    "name": "router",
                    "uid": "60b15e0f-de75-11e7-a24c-461d677cd862",
                    "controller": true,
                    "blockOwnerDeletion": true
                  }
                ]
              },
              "spec": {
                "replicas": 1,
                "selector": {
                  "deployment": "router-1",
                  "deploymentconfig": "router",
                  "router": "router"
                },
                "template": {
                  "metadata": {
                    "creationTimestamp": null,
                    "labels": {
                      "deployment": "router-1",
                      "deploymentconfig": "router",
                      "router": "router"
                    },
                    "annotations": {
                      "openshift.io/deployment-config.latest-version": "1",
                      "openshift.io/deployment-config.name": "router",
                      "openshift.io/deployment.name": "router-1"
                    }
                  },
                  "spec": {
                    "volumes": [
                      {
                        "name": "server-certificate",
                        "secret": {
                          "secretName": "router-certs",
                          "defaultMode": 420
                        }
                      }
                    ],
                    "containers": [
                      {
                        "name": "router",
                        "image": "openshift/origin-haproxy-router:v3.7.0",
                        "ports": [
                          {
                            "hostPort": 80,
                            "containerPort": 80,
                            "protocol": "TCP"
                          },
                          {
                            "hostPort": 443,
                            "containerPort": 443,
                            "protocol": "TCP"
                          },
                          {
                            "name": "stats",
                            "hostPort": 1936,
                            "containerPort": 1936,
                            "protocol": "TCP"
                          }
                        ],
                        "env": [
                          {
                            "name": "DEFAULT_CERTIFICATE_DIR",
                            "value": "/etc/pki/tls/private"
                          },
                          {
                            "name": "DEFAULT_CERTIFICATE_PATH",
                            "value": "/etc/pki/tls/private/tls.crt"
                          },
                          {
                            "name": "ROUTER_CIPHERS"
                          },
                          {
                            "name": "ROUTER_EXTERNAL_HOST_HOSTNAME"
                          },
                          {
                            "name": "ROUTER_EXTERNAL_HOST_HTTPS_VSERVER"
                          },
                          {
                            "name": "ROUTER_EXTERNAL_HOST_HTTP_VSERVER"
                          },
                          {
                            "name": "ROUTER_EXTERNAL_HOST_INSECURE",
                            "value": "false"
                          },
                          {
                            "name": "ROUTER_EXTERNAL_HOST_INTERNAL_ADDRESS"
                          },
                          {
                            "name": "ROUTER_EXTERNAL_HOST_PARTITION_PATH"
                          },
                          {
                            "name": "ROUTER_EXTERNAL_HOST_PASSWORD"
                          },
                          {
                            "name": "ROUTER_EXTERNAL_HOST_PRIVKEY",
                            "value": "/etc/secret-volume/router.pem"
                          },
                          {
                            "name": "ROUTER_EXTERNAL_HOST_USERNAME"
                          },
                          {
                            "name": "ROUTER_EXTERNAL_HOST_VXLAN_GW_CIDR"
                          },
                          {
                            "name": "ROUTER_LISTEN_ADDR",
                            "value": "0.0.0.0:1936"
                          },
                          {
                            "name": "ROUTER_METRICS_TYPE",
                            "value": "haproxy"
                          },
                          {
                            "name": "ROUTER_SERVICE_HTTPS_PORT",
                            "value": "443"
                          },
                          {
                            "name": "ROUTER_SERVICE_HTTP_PORT",
                            "value": "80"
                          },
                          {
                            "name": "ROUTER_SERVICE_NAME",
                            "value": "router"
                          },
                          {
                            "name": "ROUTER_SERVICE_NAMESPACE",
                            "value": "default"
                          },
                          {
                            "name": "ROUTER_SUBDOMAIN"
                          },
                          {
                            "name": "STATS_PASSWORD",
                            "value": "jrl3OWQIGD"
                          },
                          {
                            "name": "STATS_PORT",
                            "value": "1936"
                          },
                          {
                            "name": "STATS_USERNAME",
                            "value": "admin"
                          }
                        ],
                        "resources": {
                          "requests": {
                            "cpu": "100m",
                            "memory": "256Mi"
                          }
                        },
                        "volumeMounts": [
                          {
                            "name": "server-certificate",
                            "readOnly": true,
                            "mountPath": "/etc/pki/tls/private"
                          }
                        ],
                        "livenessProbe": {
                          "httpGet": {
                            "path": "/healthz",
                            "port": 1936,
                            "host": "localhost",
                            "scheme": "HTTP"
                          },
                          "initialDelaySeconds": 10,
                          "timeoutSeconds": 1,
                          "periodSeconds": 10,
                          "successThreshold": 1,
                          "failureThreshold": 3
                        },
                        "readinessProbe": {
                          "httpGet": {
                            "path": "/healthz",
                            "port": 1936,
                            "host": "localhost",
                            "scheme": "HTTP"
                          },
                          "initialDelaySeconds": 10,
                          "timeoutSeconds": 1,
                          "periodSeconds": 10,
                          "successThreshold": 1,
                          "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                      }
                    ],
                    "restartPolicy": "Always",
                    "terminationGracePeriodSeconds": 30,
                    "dnsPolicy": "ClusterFirst",
                    "serviceAccountName": "router",
                    "serviceAccount": "router",
                    "hostNetwork": true,
                    "securityContext": {},
                    "schedulerName": "default-scheduler"
                  }
                }
              },
              "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 2
              }
            },
            {
              "metadata": {
                "name": "my-replicationcontroller-0",
                "namespace": "my-project-0",
                "selfLink": "/api/v1/namespaces/my-project-0/replicationcontrollers/my-replicationcontroller-0",
                "uid": "69b7c83c-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8413",
                "generation": 1,
                "creationTimestamp": "2017-12-11T21:22:38Z",
                "labels": {
                  "app": "nginx"
                }
              },
              "spec": {
                "replicas": 0,
                "selector": {
                  "app": "nginx"
                },
                "template": {
                  "metadata": {
                    "name": "nginx",
                    "creationTimestamp": null,
                    "labels": {
                      "app": "nginx"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "nginx",
                        "image": "nginx",
                        "ports": [
                          {
                            "containerPort": 80,
                            "protocol": "TCP"
                          }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                      }
                    ],
                    "restartPolicy": "Always",
                    "terminationGracePeriodSeconds": 30,
                    "dnsPolicy": "ClusterFirst",
                    "securityContext": {},
                    "schedulerName": "default-scheduler"
                  }
                }
              },
              "status": {
                "replicas": 0,
                "observedGeneration": 1
              }
            },
            {
              "metadata": {
                "name": "my-replicationcontroller-1",
                "namespace": "my-project-1",
                "selfLink": "/api/v1/namespaces/my-project-1/replicationcontrollers/my-replicationcontroller-1",
                "uid": "6b8103c4-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8486",
                "generation": 1,
                "creationTimestamp": "2017-12-11T21:22:41Z",
                "labels": {
                  "app": "nginx"
                }
              },
              "spec": {
                "replicas": 0,
                "selector": {
                  "app": "nginx"
                },
                "template": {
                  "metadata": {
                    "name": "nginx",
                    "creationTimestamp": null,
                    "labels": {
                      "app": "nginx"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "nginx",
                        "image": "nginx",
                        "ports": [
                          {
                            "containerPort": 80,
                            "protocol": "TCP"
                          }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                      }
                    ],
                    "restartPolicy": "Always",
                    "terminationGracePeriodSeconds": 30,
                    "dnsPolicy": "ClusterFirst",
                    "securityContext": {},
                    "schedulerName": "default-scheduler"
                  }
                }
              },
              "status": {
                "replicas": 0,
                "observedGeneration": 1
              }
            },
            {
              "metadata": {
                "name": "my-replicationcontroller-2",
                "namespace": "my-project-2",
                "selfLink": "/api/v1/namespaces/my-project-2/replicationcontrollers/my-replicationcontroller-2",
                "uid": "6d66c933-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8568",
                "generation": 1,
                "creationTimestamp": "2017-12-11T21:22:44Z",
                "labels": {
                  "app": "nginx"
                }
              },
              "spec": {
                "replicas": 0,
                "selector": {
                  "app": "nginx"
                },
                "template": {
                  "metadata": {
                    "name": "nginx",
                    "creationTimestamp": null,
                    "labels": {
                      "app": "nginx"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "nginx",
                        "image": "nginx",
                        "ports": [
                          {
                            "containerPort": 80,
                            "protocol": "TCP"
                          }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                      }
                    ],
                    "restartPolicy": "Always",
                    "terminationGracePeriodSeconds": 30,
                    "dnsPolicy": "ClusterFirst",
                    "securityContext": {},
                    "schedulerName": "default-scheduler"
                  }
                }
              },
              "status": {
                "replicas": 0,
                "observedGeneration": 1
              }
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:22 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/api/v1/nodes?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:22 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "NodeList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/api/v1/nodes",
            "resourceVersion": "8717"
          },
          "items": [
            {
              "metadata": {
                "name": "localhost",
                "selfLink": "/api/v1/nodes/localhost",
                "uid": "5e910f91-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "8715",
                "creationTimestamp": "2017-12-11T13:15:33Z",
                "labels": {
                  "beta.kubernetes.io/arch": "amd64",
                  "beta.kubernetes.io/os": "linux",
                  "kubernetes.io/hostname": "localhost"
                },
                "annotations": {
                  "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
              },
              "spec": {
                "externalID": "localhost"
              },
              "status": {
                "capacity": {
                  "cpu": "2",
                  "memory": "2050164Ki",
                  "pods": "20"
                },
                "allocatable": {
                  "cpu": "2",
                  "memory": "1947764Ki",
                  "pods": "20"
                },
                "conditions": [
                  {
                    "type": "OutOfDisk",
                    "status": "False",
                    "lastHeartbeatTime": "2017-12-11T21:24:22Z",
                    "lastTransitionTime": "2017-12-11T20:45:08Z",
                    "reason": "KubeletHasSufficientDisk",
                    "message": "kubelet has sufficient disk space available"
                  },
                  {
                    "type": "MemoryPressure",
                    "status": "False",
                    "lastHeartbeatTime": "2017-12-11T21:24:22Z",
                    "lastTransitionTime": "2017-12-11T20:45:08Z",
                    "reason": "KubeletHasSufficientMemory",
                    "message": "kubelet has sufficient memory available"
                  },
                  {
                    "type": "DiskPressure",
                    "status": "False",
                    "lastHeartbeatTime": "2017-12-11T21:24:22Z",
                    "lastTransitionTime": "2017-12-11T20:45:08Z",
                    "reason": "KubeletHasNoDiskPressure",
                    "message": "kubelet has no disk pressure"
                  },
                  {
                    "type": "Ready",
                    "status": "True",
                    "lastHeartbeatTime": "2017-12-11T21:24:22Z",
                    "lastTransitionTime": "2017-12-11T20:45:08Z",
                    "reason": "KubeletReady",
                    "message": "kubelet is posting ready status"
                  }
                ],
                "addresses": [
                  {
                    "type": "InternalIP",
                    "address": "10.0.2.15"
                  },
                  {
                    "type": "Hostname",
                    "address": "localhost"
                  }
                ],
                "daemonEndpoints": {
                  "kubeletEndpoint": {
                    "Port": 10250
                  }
                },
                "nodeInfo": {
                  "machineID": "cbca0284fe024d23966179580c189490",
                  "systemUUID": "87635FBF-114F-4F29-BB4A-A47B8D76BCD3",
                  "bootID": "21aefe6d-f40a-43d1-86e8-1728ff605fd7",
                  "kernelVersion": "4.4.41-boot2docker",
                  "osImage": "CentOS Linux 7 (Core)",
                  "containerRuntimeVersion": "docker://1.12.6",
                  "kubeletVersion": "v1.7.6+a08f5eeb62",
                  "kubeProxyVersion": "v1.7.6+a08f5eeb62",
                  "operatingSystem": "linux",
                  "architecture": "amd64"
                },
                "images": [
                  {
                    "names": [
                      "openshift/origin-haproxy-router@sha256:9fe2b3b8916b89fbabbd0c798655da6c808156b3c1f473bb8341bf64c6c560a5",
                      "openshift/origin-haproxy-router:v3.7.0"
                    ],
                    "sizeBytes": 1121092724
                  },
                  {
                    "names": [
                      "openshift/origin-deployer@sha256:3d324bce1870047edc418041cefdec88e0a5bbb5b3b9f6fd35b43f14919a656c",
                      "openshift/origin-deployer:v3.7.0"
                    ],
                    "sizeBytes": 1098951248
                  },
                  {
                    "names": [
                      "openshift/origin-sti-builder@sha256:ecea6759ad0406cbfc39180b0a7dc771fd59d3b0f6ca1636b943dbc13e03b529",
                      "openshift/origin-sti-builder:v3.7.0"
                    ],
                    "sizeBytes": 1098951248
                  },
                  {
                    "names": [
                      "openshift/origin-recycler@sha256:3b2015361a1b4e3834e6f9d91c1ebe03eedce65e6701a67f4e94c76c0054d5dc",
                      "openshift/origin-recycler:v3.7.0"
                    ],
                    "sizeBytes": 1098951248
                  },
                  {
                    "names": [
                      "openshift/origin@sha256:33327642e9c72386e6272a2e6c37ff9b42155a2da028620ce2c28c63ba20d18e",
                      "openshift/origin:v3.7.0"
                    ],
                    "sizeBytes": 1098951248
                  },
                  {
                    "names": [
                      "registry.access.redhat.com/jboss-decisionserver-6/decisionserver63-openshift@sha256:ba59492801525306d62f870ff75488e193fdd4fbc03e9171c77b0b1efdc8d1fc",
                      "registry.access.redhat.com/jboss-decisionserver-6/decisionserver63-openshift:latest"
                    ],
                    "sizeBytes": 752781518
                  },
                  {
                    "names": [
                      "openshift/origin-docker-registry@sha256:9230bd859ce5a7fad13dc676efae72b2c86a9a0177cbd26db9b047be28620143",
                      "openshift/origin-docker-registry:v3.7.0"
                    ],
                    "sizeBytes": 500727594
                  },
                  {
                    "names": [
                      "openshift/origin-pod@sha256:2c257d83a01607b229ef5e3dca09f52c3a2a2788c09dc33f0444ec4e572a9e1d",
                      "openshift/origin-pod:v3.7.0"
                    ],
                    "sizeBytes": 218423400
                  }
                ]
              }
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:22 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/api/v1/endpoints?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:22 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "EndpointsList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/api/v1/endpoints",
            "resourceVersion": "8717"
          },
          "items": [
            {
              "metadata": {
                "name": "docker-registry",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/endpoints/docker-registry",
                "uid": "61b96687-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "4882",
                "creationTimestamp": "2017-12-11T13:15:39Z",
                "labels": {
                  "docker-registry": "default"
                }
              },
              "subsets": [
                {
                  "addresses": [
                    {
                      "ip": "172.17.0.5",
                      "nodeName": "localhost",
                      "targetRef": {
                        "kind": "Pod",
                        "namespace": "default",
                        "name": "docker-registry-1-bpltr",
                        "uid": "6cb44bb8-de75-11e7-a24c-461d677cd862",
                        "resourceVersion": "4880"
                      }
                    }
                  ],
                  "ports": [
                    {
                      "name": "5000-tcp",
                      "port": 5000,
                      "protocol": "TCP"
                    }
                  ]
                }
              ]
            },
            {
              "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/endpoints/kubernetes",
                "uid": "5eb891e1-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "100",
                "creationTimestamp": "2017-12-11T13:15:33Z"
              },
              "subsets": [
                {
                  "addresses": [
                    {
                      "ip": "10.0.2.15"
                    }
                  ],
                  "ports": [
                    {
                      "name": "https",
                      "port": 8443,
                      "protocol": "TCP"
                    },
                    {
                      "name": "dns-tcp",
                      "port": 8053,
                      "protocol": "TCP"
                    },
                    {
                      "name": "dns",
                      "port": 8053,
                      "protocol": "UDP"
                    }
                  ]
                }
              ]
            },
            {
              "metadata": {
                "name": "router",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/endpoints/router",
                "uid": "61b9afae-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "7430",
                "creationTimestamp": "2017-12-11T13:15:39Z",
                "labels": {
                  "router": "router"
                }
              },
              "subsets": [
                {
                  "addresses": [
                    {
                      "ip": "10.0.2.15",
                      "nodeName": "localhost",
                      "targetRef": {
                        "kind": "Pod",
                        "namespace": "default",
                        "name": "router-1-hk8t6",
                        "uid": "6e3dd60b-de75-11e7-a24c-461d677cd862",
                        "resourceVersion": "7429"
                      }
                    }
                  ],
                  "ports": [
                    {
                      "name": "443-tcp",
                      "port": 443,
                      "protocol": "TCP"
                    },
                    {
                      "name": "1936-tcp",
                      "port": 1936,
                      "protocol": "TCP"
                    },
                    {
                      "name": "80-tcp",
                      "port": 80,
                      "protocol": "TCP"
                    }
                  ]
                }
              ]
            },
            {
              "metadata": {
                "name": "my-service-0",
                "namespace": "my-project-0",
                "selfLink": "/api/v1/namespaces/my-project-0/endpoints/my-service-0",
                "uid": "69a63532-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8406",
                "creationTimestamp": "2017-12-11T21:22:38Z"
              },
              "subsets": null
            },
            {
              "metadata": {
                "name": "my-service-1",
                "namespace": "my-project-1",
                "selfLink": "/api/v1/namespaces/my-project-1/endpoints/my-service-1",
                "uid": "6b6ed14e-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8481",
                "creationTimestamp": "2017-12-11T21:22:41Z"
              },
              "subsets": null
            },
            {
              "metadata": {
                "name": "my-service-2",
                "namespace": "my-project-2",
                "selfLink": "/api/v1/namespaces/my-project-2/endpoints/my-service-2",
                "uid": "6d52dc0f-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8563",
                "creationTimestamp": "2017-12-11T21:22:44Z"
              },
              "subsets": null
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:22 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/api/v1/namespaces?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:22 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "NamespaceList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/api/v1/namespaces",
            "resourceVersion": "8717"
          },
          "items": [
            {
              "metadata": {
                "name": "default",
                "selfLink": "/api/v1/namespaces/default",
                "uid": "5e838730-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "614",
                "creationTimestamp": "2017-12-11T13:15:33Z",
                "annotations": {
                  "openshift.io/sa.initialized-roles": "true",
                  "openshift.io/sa.scc.mcs": "s0:c1,c0",
                  "openshift.io/sa.scc.supplemental-groups": "1000000000/10000",
                  "openshift.io/sa.scc.uid-range": "1000000000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "kubernetes",
                  "openshift.io/origin"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "kube-public",
                "selfLink": "/api/v1/namespaces/kube-public",
                "uid": "5ec4ce19-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "634",
                "creationTimestamp": "2017-12-11T13:15:34Z",
                "annotations": {
                  "openshift.io/sa.scc.mcs": "s0:c3,c2",
                  "openshift.io/sa.scc.supplemental-groups": "1000010000/10000",
                  "openshift.io/sa.scc.uid-range": "1000010000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system",
                "uid": "5e83ab88-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "648",
                "creationTimestamp": "2017-12-11T13:15:33Z",
                "annotations": {
                  "openshift.io/sa.scc.mcs": "s0:c5,c0",
                  "openshift.io/sa.scc.supplemental-groups": "1000020000/10000",
                  "openshift.io/sa.scc.uid-range": "1000020000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "kubernetes",
                  "openshift.io/origin"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "management-infra",
                "selfLink": "/api/v1/namespaces/management-infra",
                "uid": "631fc05a-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "803",
                "creationTimestamp": "2017-12-11T13:15:41Z",
                "annotations": {
                  "openshift.io/description": "\"Management-Infrastructure\"",
                  "openshift.io/display-name": "",
                  "openshift.io/sa.scc.mcs": "s0:c8,c7",
                  "openshift.io/sa.scc.supplemental-groups": "1000070000/10000",
                  "openshift.io/sa.scc.uid-range": "1000070000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "openshift.io/origin",
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "my-project-0",
                "selfLink": "/api/v1/namespaces/my-project-0",
                "uid": "688ff249-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8360",
                "creationTimestamp": "2017-12-11T21:22:36Z",
                "annotations": {
                  "openshift.io/description": "",
                  "openshift.io/display-name": "",
                  "openshift.io/requester": "system:admin",
                  "openshift.io/sa.scc.mcs": "s0:c16,c5",
                  "openshift.io/sa.scc.supplemental-groups": "1000250000/10000",
                  "openshift.io/sa.scc.uid-range": "1000250000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "openshift.io/origin",
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "my-project-1",
                "selfLink": "/api/v1/namespaces/my-project-1",
                "uid": "6a4d37e1-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8434",
                "creationTimestamp": "2017-12-11T21:22:39Z",
                "annotations": {
                  "openshift.io/description": "",
                  "openshift.io/display-name": "",
                  "openshift.io/requester": "system:admin",
                  "openshift.io/sa.scc.mcs": "s0:c16,c10",
                  "openshift.io/sa.scc.supplemental-groups": "1000260000/10000",
                  "openshift.io/sa.scc.uid-range": "1000260000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "openshift.io/origin",
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "my-project-2",
                "selfLink": "/api/v1/namespaces/my-project-2",
                "uid": "6bfde6af-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8513",
                "creationTimestamp": "2017-12-11T21:22:42Z",
                "annotations": {
                  "openshift.io/description": "",
                  "openshift.io/display-name": "",
                  "openshift.io/requester": "system:admin",
                  "openshift.io/sa.scc.mcs": "s0:c16,c15",
                  "openshift.io/sa.scc.supplemental-groups": "1000270000/10000",
                  "openshift.io/sa.scc.uid-range": "1000270000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "openshift.io/origin",
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "myproject",
                "selfLink": "/api/v1/namespaces/myproject",
                "uid": "61a25427-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "659",
                "creationTimestamp": "2017-12-11T13:15:38Z",
                "annotations": {
                  "openshift.io/description": "Initial developer project",
                  "openshift.io/display-name": "My Project",
                  "openshift.io/requester": "developer",
                  "openshift.io/sa.scc.mcs": "s0:c6,c0",
                  "openshift.io/sa.scc.supplemental-groups": "1000030000/10000",
                  "openshift.io/sa.scc.uid-range": "1000030000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "openshift.io/origin",
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "openshift",
                "selfLink": "/api/v1/namespaces/openshift",
                "uid": "5e7efd2d-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "673",
                "creationTimestamp": "2017-12-11T13:15:33Z",
                "annotations": {
                  "openshift.io/sa.initialized-roles": "true",
                  "openshift.io/sa.scc.mcs": "s0:c6,c5",
                  "openshift.io/sa.scc.supplemental-groups": "1000040000/10000",
                  "openshift.io/sa.scc.uid-range": "1000040000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "kubernetes",
                  "openshift.io/origin"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "openshift-infra",
                "selfLink": "/api/v1/namespaces/openshift-infra",
                "uid": "5e83c326-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "696",
                "creationTimestamp": "2017-12-11T13:15:33Z",
                "annotations": {
                  "openshift.io/sa.initialized-roles": "true",
                  "openshift.io/sa.scc.mcs": "s0:c7,c4",
                  "openshift.io/sa.scc.supplemental-groups": "1000050000/10000",
                  "openshift.io/sa.scc.uid-range": "1000050000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "openshift-node",
                "selfLink": "/api/v1/namespaces/openshift-node",
                "uid": "5f580bbc-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "715",
                "creationTimestamp": "2017-12-11T13:15:35Z",
                "annotations": {
                  "openshift.io/sa.scc.mcs": "s0:c8,c2",
                  "openshift.io/sa.scc.supplemental-groups": "1000060000/10000",
                  "openshift.io/sa.scc.uid-range": "1000060000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:22 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/api/v1/resourcequotas?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:22 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "ResourceQuotaList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/api/v1/resourcequotas",
            "resourceVersion": "8717"
          },
          "items": [
            {
              "metadata": {
                "name": "my-resource-quota-0",
                "namespace": "my-project-0",
                "selfLink": "/api/v1/namespaces/my-project-0/resourcequotas/my-resource-quota-0",
                "uid": "69c63121-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8417",
                "creationTimestamp": "2017-12-11T21:22:38Z"
              },
              "spec": {
                "hard": {
                  "configmaps": "10",
                  "persistentvolumeclaims": "4",
                  "replicationcontrollers": "20",
                  "secrets": "10",
                  "services": "10"
                }
              },
              "status": {
                "hard": {
                  "configmaps": "10",
                  "persistentvolumeclaims": "4",
                  "replicationcontrollers": "20",
                  "secrets": "10",
                  "services": "10"
                },
                "used": {
                  "configmaps": "0",
                  "persistentvolumeclaims": "1",
                  "replicationcontrollers": "1",
                  "secrets": "9",
                  "services": "1"
                }
              }
            },
            {
              "metadata": {
                "name": "my-resource-quota-1",
                "namespace": "my-project-1",
                "selfLink": "/api/v1/namespaces/my-project-1/resourcequotas/my-resource-quota-1",
                "uid": "6b8fa9b8-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8492",
                "creationTimestamp": "2017-12-11T21:22:41Z"
              },
              "spec": {
                "hard": {
                  "configmaps": "10",
                  "persistentvolumeclaims": "4",
                  "replicationcontrollers": "20",
                  "secrets": "10",
                  "services": "10"
                }
              },
              "status": {
                "hard": {
                  "configmaps": "10",
                  "persistentvolumeclaims": "4",
                  "replicationcontrollers": "20",
                  "secrets": "10",
                  "services": "10"
                },
                "used": {
                  "configmaps": "0",
                  "persistentvolumeclaims": "1",
                  "replicationcontrollers": "1",
                  "secrets": "9",
                  "services": "1"
                }
              }
            },
            {
              "metadata": {
                "name": "my-resource-quota-2",
                "namespace": "my-project-2",
                "selfLink": "/api/v1/namespaces/my-project-2/resourcequotas/my-resource-quota-2",
                "uid": "6d7cf368-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8575",
                "creationTimestamp": "2017-12-11T21:22:44Z"
              },
              "spec": {
                "hard": {
                  "configmaps": "10",
                  "persistentvolumeclaims": "4",
                  "replicationcontrollers": "20",
                  "secrets": "10",
                  "services": "10"
                }
              },
              "status": {
                "hard": {
                  "configmaps": "10",
                  "persistentvolumeclaims": "4",
                  "replicationcontrollers": "20",
                  "secrets": "10",
                  "services": "10"
                },
                "used": {
                  "configmaps": "0",
                  "persistentvolumeclaims": "1",
                  "replicationcontrollers": "1",
                  "secrets": "9",
                  "services": "1"
                }
              }
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:22 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/api/v1/limitranges?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:22 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "LimitRangeList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/api/v1/limitranges",
            "resourceVersion": "8717"
          },
          "items": [
            {
              "metadata": {
                "name": "my-limit-range-0",
                "namespace": "my-project-0",
                "selfLink": "/api/v1/namespaces/my-project-0/limitranges/my-limit-range-0",
                "uid": "69b1672f-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8409",
                "creationTimestamp": "2017-12-11T21:22:38Z"
              },
              "spec": {
                "limits": [
                  {
                    "type": "Pod",
                    "max": {
                      "cpu": "2",
                      "memory": "1Gi"
                    },
                    "min": {
                      "cpu": "200m",
                      "memory": "6Mi"
                    }
                  },
                  {
                    "type": "Container",
                    "max": {
                      "cpu": "2",
                      "memory": "1Gi"
                    },
                    "min": {
                      "cpu": "100m",
                      "memory": "4Mi"
                    },
                    "default": {
                      "cpu": "300m",
                      "memory": "200Mi"
                    },
                    "defaultRequest": {
                      "cpu": "200m",
                      "memory": "100Mi"
                    },
                    "maxLimitRequestRatio": {
                      "cpu": "10"
                    }
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "my-limit-range-1",
                "namespace": "my-project-1",
                "selfLink": "/api/v1/namespaces/my-project-1/limitranges/my-limit-range-1",
                "uid": "6b79ead0-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8484",
                "creationTimestamp": "2017-12-11T21:22:41Z"
              },
              "spec": {
                "limits": [
                  {
                    "type": "Pod",
                    "max": {
                      "cpu": "2",
                      "memory": "1Gi"
                    },
                    "min": {
                      "cpu": "200m",
                      "memory": "6Mi"
                    }
                  },
                  {
                    "type": "Container",
                    "max": {
                      "cpu": "2",
                      "memory": "1Gi"
                    },
                    "min": {
                      "cpu": "100m",
                      "memory": "4Mi"
                    },
                    "default": {
                      "cpu": "300m",
                      "memory": "200Mi"
                    },
                    "defaultRequest": {
                      "cpu": "200m",
                      "memory": "100Mi"
                    },
                    "maxLimitRequestRatio": {
                      "cpu": "10"
                    }
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "my-limit-range-2",
                "namespace": "my-project-2",
                "selfLink": "/api/v1/namespaces/my-project-2/limitranges/my-limit-range-2",
                "uid": "6d5c16f7-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8566",
                "creationTimestamp": "2017-12-11T21:22:44Z"
              },
              "spec": {
                "limits": [
                  {
                    "type": "Pod",
                    "max": {
                      "cpu": "2",
                      "memory": "1Gi"
                    },
                    "min": {
                      "cpu": "200m",
                      "memory": "6Mi"
                    }
                  },
                  {
                    "type": "Container",
                    "max": {
                      "cpu": "2",
                      "memory": "1Gi"
                    },
                    "min": {
                      "cpu": "100m",
                      "memory": "4Mi"
                    },
                    "default": {
                      "cpu": "300m",
                      "memory": "200Mi"
                    },
                    "defaultRequest": {
                      "cpu": "200m",
                      "memory": "100Mi"
                    },
                    "maxLimitRequestRatio": {
                      "cpu": "10"
                    }
                  }
                ]
              }
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:22 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/api/v1/persistentvolumes?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:22 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "PersistentVolumeList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/api/v1/persistentvolumes",
            "resourceVersion": "8717"
          },
          "items": [
            {
              "metadata": {
                "name": "pv0001",
                "selfLink": "/api/v1/persistentvolumes/pv0001",
                "uid": "6a862528-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1052",
                "creationTimestamp": "2017-12-11T13:15:53Z",
                "labels": {
                  "volume": "pv0001"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0001"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0002",
                "selfLink": "/api/v1/persistentvolumes/pv0002",
                "uid": "6ad7d876-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1057",
                "creationTimestamp": "2017-12-11T13:15:54Z",
                "labels": {
                  "volume": "pv0002"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0002"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0003",
                "selfLink": "/api/v1/persistentvolumes/pv0003",
                "uid": "6b3ca2ea-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1059",
                "creationTimestamp": "2017-12-11T13:15:54Z",
                "labels": {
                  "volume": "pv0003"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0003"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0004",
                "selfLink": "/api/v1/persistentvolumes/pv0004",
                "uid": "6b8b5954-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1067",
                "creationTimestamp": "2017-12-11T13:15:55Z",
                "labels": {
                  "volume": "pv0004"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0004"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0005",
                "selfLink": "/api/v1/persistentvolumes/pv0005",
                "uid": "6bc877f6-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1069",
                "creationTimestamp": "2017-12-11T13:15:55Z",
                "labels": {
                  "volume": "pv0005"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0005"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0006",
                "selfLink": "/api/v1/persistentvolumes/pv0006",
                "uid": "6c15eddd-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1077",
                "creationTimestamp": "2017-12-11T13:15:56Z",
                "labels": {
                  "volume": "pv0006"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0006"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0007",
                "selfLink": "/api/v1/persistentvolumes/pv0007",
                "uid": "6c5608ae-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1079",
                "creationTimestamp": "2017-12-11T13:15:56Z",
                "labels": {
                  "volume": "pv0007"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0007"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0008",
                "selfLink": "/api/v1/persistentvolumes/pv0008",
                "uid": "6cbb02de-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1095",
                "creationTimestamp": "2017-12-11T13:15:57Z",
                "labels": {
                  "volume": "pv0008"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0008"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0009",
                "selfLink": "/api/v1/persistentvolumes/pv0009",
                "uid": "6d01da29-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1100",
                "creationTimestamp": "2017-12-11T13:15:57Z",
                "labels": {
                  "volume": "pv0009"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0009"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0010",
                "selfLink": "/api/v1/persistentvolumes/pv0010",
                "uid": "6d55fbdc-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1105",
                "creationTimestamp": "2017-12-11T13:15:58Z",
                "labels": {
                  "volume": "pv0010"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0010"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0011",
                "selfLink": "/api/v1/persistentvolumes/pv0011",
                "uid": "6d9f5a18-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1107",
                "creationTimestamp": "2017-12-11T13:15:58Z",
                "labels": {
                  "volume": "pv0011"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0011"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0012",
                "selfLink": "/api/v1/persistentvolumes/pv0012",
                "uid": "6ddc04a2-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1109",
                "creationTimestamp": "2017-12-11T13:15:59Z",
                "labels": {
                  "volume": "pv0012"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0012"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0013",
                "selfLink": "/api/v1/persistentvolumes/pv0013",
                "uid": "6e40bd04-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1123",
                "creationTimestamp": "2017-12-11T13:16:00Z",
                "labels": {
                  "volume": "pv0013"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0013"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0014",
                "selfLink": "/api/v1/persistentvolumes/pv0014",
                "uid": "6e86fc7a-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1132",
                "creationTimestamp": "2017-12-11T13:16:00Z",
                "labels": {
                  "volume": "pv0014"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0014"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0015",
                "selfLink": "/api/v1/persistentvolumes/pv0015",
                "uid": "6ee08256-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "8573",
                "creationTimestamp": "2017-12-11T13:16:01Z",
                "labels": {
                  "volume": "pv0015"
                },
                "annotations": {
                  "pv.kubernetes.io/bound-by-controller": "yes"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0015"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "claimRef": {
                  "kind": "PersistentVolumeClaim",
                  "namespace": "my-project-2",
                  "name": "my-persistentvolumeclaim-2",
                  "uid": "6d783d00-deb9-11e7-a24c-461d677cd862",
                  "apiVersion": "v1",
                  "resourceVersion": "8570"
                },
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Bound"
              }
            },
            {
              "metadata": {
                "name": "pv0016",
                "selfLink": "/api/v1/persistentvolumes/pv0016",
                "uid": "6f22609a-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1138",
                "creationTimestamp": "2017-12-11T13:16:01Z",
                "labels": {
                  "volume": "pv0016"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0016"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0017",
                "selfLink": "/api/v1/persistentvolumes/pv0017",
                "uid": "6f6047b0-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1140",
                "creationTimestamp": "2017-12-11T13:16:01Z",
                "labels": {
                  "volume": "pv0017"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0017"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0018",
                "selfLink": "/api/v1/persistentvolumes/pv0018",
                "uid": "6fa9a4b6-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1143",
                "creationTimestamp": "2017-12-11T13:16:02Z",
                "labels": {
                  "volume": "pv0018"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0018"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0019",
                "selfLink": "/api/v1/persistentvolumes/pv0019",
                "uid": "6fefec8c-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1145",
                "creationTimestamp": "2017-12-11T13:16:02Z",
                "labels": {
                  "volume": "pv0019"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0019"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0020",
                "selfLink": "/api/v1/persistentvolumes/pv0020",
                "uid": "70344b31-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1147",
                "creationTimestamp": "2017-12-11T13:16:03Z",
                "labels": {
                  "volume": "pv0020"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0020"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0021",
                "selfLink": "/api/v1/persistentvolumes/pv0021",
                "uid": "70793a87-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1149",
                "creationTimestamp": "2017-12-11T13:16:03Z",
                "labels": {
                  "volume": "pv0021"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0021"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0022",
                "selfLink": "/api/v1/persistentvolumes/pv0022",
                "uid": "70c624f4-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1155",
                "creationTimestamp": "2017-12-11T13:16:04Z",
                "labels": {
                  "volume": "pv0022"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0022"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0023",
                "selfLink": "/api/v1/persistentvolumes/pv0023",
                "uid": "710d2cb3-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1157",
                "creationTimestamp": "2017-12-11T13:16:04Z",
                "labels": {
                  "volume": "pv0023"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0023"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0024",
                "selfLink": "/api/v1/persistentvolumes/pv0024",
                "uid": "71539e2a-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1159",
                "creationTimestamp": "2017-12-11T13:16:05Z",
                "labels": {
                  "volume": "pv0024"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0024"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0025",
                "selfLink": "/api/v1/persistentvolumes/pv0025",
                "uid": "7199fdb4-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1161",
                "creationTimestamp": "2017-12-11T13:16:05Z",
                "labels": {
                  "volume": "pv0025"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0025"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0026",
                "selfLink": "/api/v1/persistentvolumes/pv0026",
                "uid": "71e33511-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1164",
                "creationTimestamp": "2017-12-11T13:16:06Z",
                "labels": {
                  "volume": "pv0026"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0026"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0027",
                "selfLink": "/api/v1/persistentvolumes/pv0027",
                "uid": "72322ff1-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1166",
                "creationTimestamp": "2017-12-11T13:16:06Z",
                "labels": {
                  "volume": "pv0027"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0027"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0028",
                "selfLink": "/api/v1/persistentvolumes/pv0028",
                "uid": "72895f12-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1169",
                "creationTimestamp": "2017-12-11T13:16:07Z",
                "labels": {
                  "volume": "pv0028"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0028"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0029",
                "selfLink": "/api/v1/persistentvolumes/pv0029",
                "uid": "72dd1741-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1171",
                "creationTimestamp": "2017-12-11T13:16:07Z",
                "labels": {
                  "volume": "pv0029"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0029"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0030",
                "selfLink": "/api/v1/persistentvolumes/pv0030",
                "uid": "733362f1-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1174",
                "creationTimestamp": "2017-12-11T13:16:08Z",
                "labels": {
                  "volume": "pv0030"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0030"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0031",
                "selfLink": "/api/v1/persistentvolumes/pv0031",
                "uid": "7379128d-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1176",
                "creationTimestamp": "2017-12-11T13:16:08Z",
                "labels": {
                  "volume": "pv0031"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0031"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0032",
                "selfLink": "/api/v1/persistentvolumes/pv0032",
                "uid": "73c5114d-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1178",
                "creationTimestamp": "2017-12-11T13:16:09Z",
                "labels": {
                  "volume": "pv0032"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0032"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0033",
                "selfLink": "/api/v1/persistentvolumes/pv0033",
                "uid": "7421ecf1-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "6093",
                "creationTimestamp": "2017-12-11T13:16:09Z",
                "labels": {
                  "volume": "pv0033"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0033"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0034",
                "selfLink": "/api/v1/persistentvolumes/pv0034",
                "uid": "74932a91-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1184",
                "creationTimestamp": "2017-12-11T13:16:10Z",
                "labels": {
                  "volume": "pv0034"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0034"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0035",
                "selfLink": "/api/v1/persistentvolumes/pv0035",
                "uid": "7530e386-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1188",
                "creationTimestamp": "2017-12-11T13:16:11Z",
                "labels": {
                  "volume": "pv0035"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0035"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0036",
                "selfLink": "/api/v1/persistentvolumes/pv0036",
                "uid": "75923649-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1191",
                "creationTimestamp": "2017-12-11T13:16:12Z",
                "labels": {
                  "volume": "pv0036"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0036"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0037",
                "selfLink": "/api/v1/persistentvolumes/pv0037",
                "uid": "75d4f6a7-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1194",
                "creationTimestamp": "2017-12-11T13:16:12Z",
                "labels": {
                  "volume": "pv0037"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0037"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0038",
                "selfLink": "/api/v1/persistentvolumes/pv0038",
                "uid": "761a7aae-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1198",
                "creationTimestamp": "2017-12-11T13:16:13Z",
                "labels": {
                  "volume": "pv0038"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0038"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0039",
                "selfLink": "/api/v1/persistentvolumes/pv0039",
                "uid": "76643306-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1201",
                "creationTimestamp": "2017-12-11T13:16:13Z",
                "labels": {
                  "volume": "pv0039"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0039"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0040",
                "selfLink": "/api/v1/persistentvolumes/pv0040",
                "uid": "76a106ec-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1204",
                "creationTimestamp": "2017-12-11T13:16:14Z",
                "labels": {
                  "volume": "pv0040"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0040"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0041",
                "selfLink": "/api/v1/persistentvolumes/pv0041",
                "uid": "76e1d6e4-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "4390",
                "creationTimestamp": "2017-12-11T13:16:14Z",
                "labels": {
                  "volume": "pv0041"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0041"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0042",
                "selfLink": "/api/v1/persistentvolumes/pv0042",
                "uid": "772439cf-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1210",
                "creationTimestamp": "2017-12-11T13:16:14Z",
                "labels": {
                  "volume": "pv0042"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0042"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0043",
                "selfLink": "/api/v1/persistentvolumes/pv0043",
                "uid": "77643b1e-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1212",
                "creationTimestamp": "2017-12-11T13:16:15Z",
                "labels": {
                  "volume": "pv0043"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0043"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0044",
                "selfLink": "/api/v1/persistentvolumes/pv0044",
                "uid": "77acac96-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1214",
                "creationTimestamp": "2017-12-11T13:16:15Z",
                "labels": {
                  "volume": "pv0044"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0044"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0045",
                "selfLink": "/api/v1/persistentvolumes/pv0045",
                "uid": "77fe4286-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1216",
                "creationTimestamp": "2017-12-11T13:16:16Z",
                "labels": {
                  "volume": "pv0045"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0045"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0046",
                "selfLink": "/api/v1/persistentvolumes/pv0046",
                "uid": "78478577-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1220",
                "creationTimestamp": "2017-12-11T13:16:16Z",
                "labels": {
                  "volume": "pv0046"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0046"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0047",
                "selfLink": "/api/v1/persistentvolumes/pv0047",
                "uid": "78906f9c-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1222",
                "creationTimestamp": "2017-12-11T13:16:17Z",
                "labels": {
                  "volume": "pv0047"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0047"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0048",
                "selfLink": "/api/v1/persistentvolumes/pv0048",
                "uid": "78ee646e-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1228",
                "creationTimestamp": "2017-12-11T13:16:17Z",
                "labels": {
                  "volume": "pv0048"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0048"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0049",
                "selfLink": "/api/v1/persistentvolumes/pv0049",
                "uid": "7933c1f6-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1236",
                "creationTimestamp": "2017-12-11T13:16:18Z",
                "labels": {
                  "volume": "pv0049"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0049"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0050",
                "selfLink": "/api/v1/persistentvolumes/pv0050",
                "uid": "797d28fe-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1239",
                "creationTimestamp": "2017-12-11T13:16:18Z",
                "labels": {
                  "volume": "pv0050"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0050"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0051",
                "selfLink": "/api/v1/persistentvolumes/pv0051",
                "uid": "79caf9f2-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1241",
                "creationTimestamp": "2017-12-11T13:16:19Z",
                "labels": {
                  "volume": "pv0051"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0051"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0052",
                "selfLink": "/api/v1/persistentvolumes/pv0052",
                "uid": "7a0ea948-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1244",
                "creationTimestamp": "2017-12-11T13:16:19Z",
                "labels": {
                  "volume": "pv0052"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0052"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0053",
                "selfLink": "/api/v1/persistentvolumes/pv0053",
                "uid": "7a561f7b-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1246",
                "creationTimestamp": "2017-12-11T13:16:20Z",
                "labels": {
                  "volume": "pv0053"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0053"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0054",
                "selfLink": "/api/v1/persistentvolumes/pv0054",
                "uid": "7aa256de-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1249",
                "creationTimestamp": "2017-12-11T13:16:20Z",
                "labels": {
                  "volume": "pv0054"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0054"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0055",
                "selfLink": "/api/v1/persistentvolumes/pv0055",
                "uid": "7ae7915c-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1251",
                "creationTimestamp": "2017-12-11T13:16:21Z",
                "labels": {
                  "volume": "pv0055"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0055"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0056",
                "selfLink": "/api/v1/persistentvolumes/pv0056",
                "uid": "7b292edf-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1253",
                "creationTimestamp": "2017-12-11T13:16:21Z",
                "labels": {
                  "volume": "pv0056"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0056"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0057",
                "selfLink": "/api/v1/persistentvolumes/pv0057",
                "uid": "7b6bb484-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1255",
                "creationTimestamp": "2017-12-11T13:16:22Z",
                "labels": {
                  "volume": "pv0057"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0057"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0058",
                "selfLink": "/api/v1/persistentvolumes/pv0058",
                "uid": "7bb57496-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1259",
                "creationTimestamp": "2017-12-11T13:16:22Z",
                "labels": {
                  "volume": "pv0058"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0058"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0059",
                "selfLink": "/api/v1/persistentvolumes/pv0059",
                "uid": "7bfe8118-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1261",
                "creationTimestamp": "2017-12-11T13:16:23Z",
                "labels": {
                  "volume": "pv0059"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0059"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0060",
                "selfLink": "/api/v1/persistentvolumes/pv0060",
                "uid": "7c46639b-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "7597",
                "creationTimestamp": "2017-12-11T13:16:23Z",
                "labels": {
                  "volume": "pv0060"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0060"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0061",
                "selfLink": "/api/v1/persistentvolumes/pv0061",
                "uid": "7c914b7a-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1266",
                "creationTimestamp": "2017-12-11T13:16:24Z",
                "labels": {
                  "volume": "pv0061"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0061"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0062",
                "selfLink": "/api/v1/persistentvolumes/pv0062",
                "uid": "7ce3e48f-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1270",
                "creationTimestamp": "2017-12-11T13:16:24Z",
                "labels": {
                  "volume": "pv0062"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0062"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0063",
                "selfLink": "/api/v1/persistentvolumes/pv0063",
                "uid": "7d3f8aaa-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1275",
                "creationTimestamp": "2017-12-11T13:16:25Z",
                "labels": {
                  "volume": "pv0063"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0063"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0064",
                "selfLink": "/api/v1/persistentvolumes/pv0064",
                "uid": "7d9e4922-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1279",
                "creationTimestamp": "2017-12-11T13:16:25Z",
                "labels": {
                  "volume": "pv0064"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0064"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0065",
                "selfLink": "/api/v1/persistentvolumes/pv0065",
                "uid": "7de25ca0-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1281",
                "creationTimestamp": "2017-12-11T13:16:26Z",
                "labels": {
                  "volume": "pv0065"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0065"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0066",
                "selfLink": "/api/v1/persistentvolumes/pv0066",
                "uid": "7e227d75-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "8493",
                "creationTimestamp": "2017-12-11T13:16:26Z",
                "labels": {
                  "volume": "pv0066"
                },
                "annotations": {
                  "pv.kubernetes.io/bound-by-controller": "yes"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0066"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "claimRef": {
                  "kind": "PersistentVolumeClaim",
                  "namespace": "my-project-1",
                  "name": "my-persistentvolumeclaim-1",
                  "uid": "6b885a0c-deb9-11e7-a24c-461d677cd862",
                  "apiVersion": "v1",
                  "resourceVersion": "8489"
                },
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Bound"
              }
            },
            {
              "metadata": {
                "name": "pv0067",
                "selfLink": "/api/v1/persistentvolumes/pv0067",
                "uid": "7e5f23c3-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1286",
                "creationTimestamp": "2017-12-11T13:16:27Z",
                "labels": {
                  "volume": "pv0067"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0067"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0068",
                "selfLink": "/api/v1/persistentvolumes/pv0068",
                "uid": "7e9ea05e-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1288",
                "creationTimestamp": "2017-12-11T13:16:27Z",
                "labels": {
                  "volume": "pv0068"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0068"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0069",
                "selfLink": "/api/v1/persistentvolumes/pv0069",
                "uid": "7ed65c18-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1290",
                "creationTimestamp": "2017-12-11T13:16:27Z",
                "labels": {
                  "volume": "pv0069"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0069"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0070",
                "selfLink": "/api/v1/persistentvolumes/pv0070",
                "uid": "7f197d7f-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1292",
                "creationTimestamp": "2017-12-11T13:16:28Z",
                "labels": {
                  "volume": "pv0070"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0070"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0071",
                "selfLink": "/api/v1/persistentvolumes/pv0071",
                "uid": "7f760e42-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1296",
                "creationTimestamp": "2017-12-11T13:16:28Z",
                "labels": {
                  "volume": "pv0071"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0071"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0072",
                "selfLink": "/api/v1/persistentvolumes/pv0072",
                "uid": "7fb1aca5-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "6087",
                "creationTimestamp": "2017-12-11T13:16:29Z",
                "labels": {
                  "volume": "pv0072"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0072"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0073",
                "selfLink": "/api/v1/persistentvolumes/pv0073",
                "uid": "7fee5aa4-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "3276",
                "creationTimestamp": "2017-12-11T13:16:29Z",
                "labels": {
                  "volume": "pv0073"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0073"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0074",
                "selfLink": "/api/v1/persistentvolumes/pv0074",
                "uid": "8029d88f-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "8396",
                "creationTimestamp": "2017-12-11T13:16:30Z",
                "labels": {
                  "volume": "pv0074"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0074"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0075",
                "selfLink": "/api/v1/persistentvolumes/pv0075",
                "uid": "8062fab4-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1913",
                "creationTimestamp": "2017-12-11T13:16:30Z",
                "labels": {
                  "volume": "pv0075"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0075"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0076",
                "selfLink": "/api/v1/persistentvolumes/pv0076",
                "uid": "80a01082-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1307",
                "creationTimestamp": "2017-12-11T13:16:30Z",
                "labels": {
                  "volume": "pv0076"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0076"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0077",
                "selfLink": "/api/v1/persistentvolumes/pv0077",
                "uid": "80dce936-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "3752",
                "creationTimestamp": "2017-12-11T13:16:31Z",
                "labels": {
                  "volume": "pv0077"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0077"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0078",
                "selfLink": "/api/v1/persistentvolumes/pv0078",
                "uid": "811c846d-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1312",
                "creationTimestamp": "2017-12-11T13:16:31Z",
                "labels": {
                  "volume": "pv0078"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0078"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0079",
                "selfLink": "/api/v1/persistentvolumes/pv0079",
                "uid": "81562ca6-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1314",
                "creationTimestamp": "2017-12-11T13:16:32Z",
                "labels": {
                  "volume": "pv0079"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0079"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0080",
                "selfLink": "/api/v1/persistentvolumes/pv0080",
                "uid": "8195b980-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "7524",
                "creationTimestamp": "2017-12-11T13:16:32Z",
                "labels": {
                  "volume": "pv0080"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0080"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0081",
                "selfLink": "/api/v1/persistentvolumes/pv0081",
                "uid": "81e3d3b8-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1319",
                "creationTimestamp": "2017-12-11T13:16:32Z",
                "labels": {
                  "volume": "pv0081"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0081"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0082",
                "selfLink": "/api/v1/persistentvolumes/pv0082",
                "uid": "823ec30b-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "8416",
                "creationTimestamp": "2017-12-11T13:16:33Z",
                "labels": {
                  "volume": "pv0082"
                },
                "annotations": {
                  "pv.kubernetes.io/bound-by-controller": "yes"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0082"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "claimRef": {
                  "kind": "PersistentVolumeClaim",
                  "namespace": "my-project-0",
                  "name": "my-persistentvolumeclaim-0",
                  "uid": "69bcb1c7-deb9-11e7-a24c-461d677cd862",
                  "apiVersion": "v1",
                  "resourceVersion": "8412"
                },
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Bound"
              }
            },
            {
              "metadata": {
                "name": "pv0083",
                "selfLink": "/api/v1/persistentvolumes/pv0083",
                "uid": "82a4f40c-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "4309",
                "creationTimestamp": "2017-12-11T13:16:34Z",
                "labels": {
                  "volume": "pv0083"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0083"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0084",
                "selfLink": "/api/v1/persistentvolumes/pv0084",
                "uid": "82e88a05-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1329",
                "creationTimestamp": "2017-12-11T13:16:34Z",
                "labels": {
                  "volume": "pv0084"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0084"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0085",
                "selfLink": "/api/v1/persistentvolumes/pv0085",
                "uid": "832c49b3-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1331",
                "creationTimestamp": "2017-12-11T13:16:35Z",
                "labels": {
                  "volume": "pv0085"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0085"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0086",
                "selfLink": "/api/v1/persistentvolumes/pv0086",
                "uid": "8377f3b1-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1333",
                "creationTimestamp": "2017-12-11T13:16:35Z",
                "labels": {
                  "volume": "pv0086"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0086"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0087",
                "selfLink": "/api/v1/persistentvolumes/pv0087",
                "uid": "83bcf965-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1335",
                "creationTimestamp": "2017-12-11T13:16:36Z",
                "labels": {
                  "volume": "pv0087"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0087"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0088",
                "selfLink": "/api/v1/persistentvolumes/pv0088",
                "uid": "83fb596f-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1337",
                "creationTimestamp": "2017-12-11T13:16:36Z",
                "labels": {
                  "volume": "pv0088"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0088"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0089",
                "selfLink": "/api/v1/persistentvolumes/pv0089",
                "uid": "843617c1-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1340",
                "creationTimestamp": "2017-12-11T13:16:36Z",
                "labels": {
                  "volume": "pv0089"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0089"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0090",
                "selfLink": "/api/v1/persistentvolumes/pv0090",
                "uid": "84776487-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1342",
                "creationTimestamp": "2017-12-11T13:16:37Z",
                "labels": {
                  "volume": "pv0090"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0090"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0091",
                "selfLink": "/api/v1/persistentvolumes/pv0091",
                "uid": "84c6e326-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "5684",
                "creationTimestamp": "2017-12-11T13:16:37Z",
                "labels": {
                  "volume": "pv0091"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0091"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0092",
                "selfLink": "/api/v1/persistentvolumes/pv0092",
                "uid": "851d8170-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1347",
                "creationTimestamp": "2017-12-11T13:16:38Z",
                "labels": {
                  "volume": "pv0092"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0092"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0093",
                "selfLink": "/api/v1/persistentvolumes/pv0093",
                "uid": "85713c4b-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1350",
                "creationTimestamp": "2017-12-11T13:16:38Z",
                "labels": {
                  "volume": "pv0093"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0093"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0094",
                "selfLink": "/api/v1/persistentvolumes/pv0094",
                "uid": "85b6bd5e-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1352",
                "creationTimestamp": "2017-12-11T13:16:39Z",
                "labels": {
                  "volume": "pv0094"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0094"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0095",
                "selfLink": "/api/v1/persistentvolumes/pv0095",
                "uid": "860450b7-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "3286",
                "creationTimestamp": "2017-12-11T13:16:39Z",
                "labels": {
                  "volume": "pv0095"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0095"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0096",
                "selfLink": "/api/v1/persistentvolumes/pv0096",
                "uid": "866a4345-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1365",
                "creationTimestamp": "2017-12-11T13:16:40Z",
                "labels": {
                  "volume": "pv0096"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0096"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0097",
                "selfLink": "/api/v1/persistentvolumes/pv0097",
                "uid": "86cacc2e-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1369",
                "creationTimestamp": "2017-12-11T13:16:41Z",
                "labels": {
                  "volume": "pv0097"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0097"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0098",
                "selfLink": "/api/v1/persistentvolumes/pv0098",
                "uid": "870a1d7d-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1371",
                "creationTimestamp": "2017-12-11T13:16:41Z",
                "labels": {
                  "volume": "pv0098"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0098"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0099",
                "selfLink": "/api/v1/persistentvolumes/pv0099",
                "uid": "87485cfa-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1373",
                "creationTimestamp": "2017-12-11T13:16:42Z",
                "labels": {
                  "volume": "pv0099"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0099"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            },
            {
              "metadata": {
                "name": "pv0100",
                "selfLink": "/api/v1/persistentvolumes/pv0100",
                "uid": "8787ceaa-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1375",
                "creationTimestamp": "2017-12-11T13:16:42Z",
                "labels": {
                  "volume": "pv0100"
                }
              },
              "spec": {
                "capacity": {
                  "storage": "100Gi"
                },
                "hostPath": {
                  "path": "/var/lib/minishift/openshift.local.pv/pv0100"
                },
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "persistentVolumeReclaimPolicy": "Recycle"
              },
              "status": {
                "phase": "Available"
              }
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:23 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/api/v1/persistentvolumeclaims?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:23 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "PersistentVolumeClaimList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/api/v1/persistentvolumeclaims",
            "resourceVersion": "8717"
          },
          "items": [
            {
              "metadata": {
                "name": "my-persistentvolumeclaim-0",
                "namespace": "my-project-0",
                "selfLink": "/api/v1/namespaces/my-project-0/persistentvolumeclaims/my-persistentvolumeclaim-0",
                "uid": "69bcb1c7-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8420",
                "creationTimestamp": "2017-12-11T21:22:38Z",
                "annotations": {
                  "pv.kubernetes.io/bind-completed": "yes",
                  "pv.kubernetes.io/bound-by-controller": "yes"
                }
              },
              "spec": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "resources": {
                  "requests": {
                    "storage": "8Gi"
                  }
                },
                "volumeName": "pv0082"
              },
              "status": {
                "phase": "Bound",
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "capacity": {
                  "storage": "100Gi"
                }
              }
            },
            {
              "metadata": {
                "name": "my-persistentvolumeclaim-1",
                "namespace": "my-project-1",
                "selfLink": "/api/v1/namespaces/my-project-1/persistentvolumeclaims/my-persistentvolumeclaim-1",
                "uid": "6b885a0c-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8496",
                "creationTimestamp": "2017-12-11T21:22:41Z",
                "annotations": {
                  "pv.kubernetes.io/bind-completed": "yes",
                  "pv.kubernetes.io/bound-by-controller": "yes"
                }
              },
              "spec": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "resources": {
                  "requests": {
                    "storage": "8Gi"
                  }
                },
                "volumeName": "pv0066"
              },
              "status": {
                "phase": "Bound",
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "capacity": {
                  "storage": "100Gi"
                }
              }
            },
            {
              "metadata": {
                "name": "my-persistentvolumeclaim-2",
                "namespace": "my-project-2",
                "selfLink": "/api/v1/namespaces/my-project-2/persistentvolumeclaims/my-persistentvolumeclaim-2",
                "uid": "6d783d00-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8577",
                "creationTimestamp": "2017-12-11T21:22:44Z",
                "annotations": {
                  "pv.kubernetes.io/bind-completed": "yes",
                  "pv.kubernetes.io/bound-by-controller": "yes"
                }
              },
              "spec": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "resources": {
                  "requests": {
                    "storage": "8Gi"
                  }
                },
                "volumeName": "pv0015"
              },
              "status": {
                "phase": "Bound",
                "accessModes": [
                  "ReadWriteOnce",
                  "ReadWriteMany",
                  "ReadOnlyMany"
                ],
                "capacity": {
                  "storage": "100Gi"
                }
              }
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:23 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/oapi/v1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:23 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"kind":"APIResourceList","groupVersion":"v1","resources":[{"name":"appliedclusterresourcequotas","singularName":"","namespaced":true,"kind":"AppliedClusterResourceQuota","verbs":["get","list"]},{"name":"buildconfigs","singularName":"","namespaced":true,"kind":"BuildConfig","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["bc"],"categories":["all"]},{"name":"buildconfigs/instantiate","singularName":"","namespaced":true,"kind":"BuildRequest","verbs":["create"]},{"name":"buildconfigs/instantiatebinary","singularName":"","namespaced":true,"kind":"BinaryBuildRequestOptions","verbs":[]},{"name":"buildconfigs/webhooks","singularName":"","namespaced":true,"kind":"Build","verbs":[]},{"name":"builds","singularName":"","namespaced":true,"kind":"Build","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"categories":["all"]},{"name":"builds/clone","singularName":"","namespaced":true,"kind":"BuildRequest","verbs":["create"]},{"name":"builds/details","singularName":"","namespaced":true,"kind":"Build","verbs":["update"]},{"name":"builds/log","singularName":"","namespaced":true,"kind":"BuildLog","verbs":["get"]},{"name":"clusternetworks","singularName":"","namespaced":false,"kind":"ClusterNetwork","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"clusterresourcequotas","singularName":"","namespaced":false,"kind":"ClusterResourceQuota","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["clusterquota"]},{"name":"clusterresourcequotas/status","singularName":"","namespaced":false,"kind":"ClusterResourceQuota","verbs":["get","patch","update"]},{"name":"clusterrolebindings","singularName":"","namespaced":false,"kind":"ClusterRoleBinding","verbs":["create","delete","get","list","patch","update"]},{"name":"clusterroles","singularName":"","namespaced":false,"kind":"ClusterRole","verbs":["create","delete","get","list","patch","update"]},{"name":"deploymentconfigrollbacks","singularName":"","namespaced":true,"kind":"DeploymentConfigRollback","verbs":["create"]},{"name":"deploymentconfigs","singularName":"","namespaced":true,"kind":"DeploymentConfig","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["dc"],"categories":["all"]},{"name":"deploymentconfigs/instantiate","singularName":"","namespaced":true,"kind":"DeploymentRequest","verbs":["create"]},{"name":"deploymentconfigs/log","singularName":"","namespaced":true,"kind":"DeploymentLog","verbs":["get"]},{"name":"deploymentconfigs/rollback","singularName":"","namespaced":true,"kind":"DeploymentConfigRollback","verbs":["create"]},{"name":"deploymentconfigs/scale","singularName":"","namespaced":true,"kind":"Scale","verbs":["get","patch","update"]},{"name":"deploymentconfigs/status","singularName":"","namespaced":true,"kind":"DeploymentConfig","verbs":["get","patch","update"]},{"name":"egressnetworkpolicies","singularName":"","namespaced":true,"kind":"EgressNetworkPolicy","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"groups","singularName":"","namespaced":false,"kind":"Group","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"hostsubnets","singularName":"","namespaced":false,"kind":"HostSubnet","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"identities","singularName":"","namespaced":false,"kind":"Identity","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"images","singularName":"","namespaced":false,"kind":"Image","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"imagesignatures","singularName":"","namespaced":false,"kind":"ImageSignature","verbs":["create","delete"]},{"name":"imagestreamimages","singularName":"","namespaced":true,"kind":"ImageStreamImage","verbs":["get"],"shortNames":["isimage"]},{"name":"imagestreamimports","singularName":"","namespaced":true,"kind":"ImageStreamImport","verbs":["create"]},{"name":"imagestreammappings","singularName":"","namespaced":true,"kind":"ImageStreamMapping","verbs":["create"]},{"name":"imagestreams","singularName":"","namespaced":true,"kind":"ImageStream","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["is"],"categories":["all"]},{"name":"imagestreams/secrets","singularName":"","namespaced":true,"kind":"SecretList","verbs":["get"]},{"name":"imagestreams/status","singularName":"","namespaced":true,"kind":"ImageStream","verbs":["get","patch","update"]},{"name":"imagestreamtags","singularName":"","namespaced":true,"kind":"ImageStreamTag","verbs":["create","delete","get","list","patch","update"],"shortNames":["istag"]},{"name":"localresourceaccessreviews","singularName":"","namespaced":true,"kind":"LocalResourceAccessReview","verbs":["create"]},{"name":"localsubjectaccessreviews","singularName":"","namespaced":true,"kind":"LocalSubjectAccessReview","verbs":["create"]},{"name":"netnamespaces","singularName":"","namespaced":false,"kind":"NetNamespace","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"oauthaccesstokens","singularName":"","namespaced":false,"kind":"OAuthAccessToken","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"oauthauthorizetokens","singularName":"","namespaced":false,"kind":"OAuthAuthorizeToken","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"oauthclientauthorizations","singularName":"","namespaced":false,"kind":"OAuthClientAuthorization","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"oauthclients","singularName":"","namespaced":false,"kind":"OAuthClient","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"podsecuritypolicyreviews","singularName":"","namespaced":true,"kind":"PodSecurityPolicyReview","verbs":["create"]},{"name":"podsecuritypolicyselfsubjectreviews","singularName":"","namespaced":true,"kind":"PodSecurityPolicySelfSubjectReview","verbs":["create"]},{"name":"podsecuritypolicysubjectreviews","singularName":"","namespaced":true,"kind":"PodSecurityPolicySubjectReview","verbs":["create"]},{"name":"processedtemplates","singularName":"","namespaced":true,"kind":"Template","verbs":["create"]},{"name":"projectrequests","singularName":"","namespaced":false,"kind":"ProjectRequest","verbs":["create","list"]},{"name":"projects","singularName":"","namespaced":false,"kind":"Project","verbs":["create","delete","get","list","patch","update","watch"]},{"name":"resourceaccessreviews","singularName":"","namespaced":true,"kind":"ResourceAccessReview","verbs":["create"]},{"name":"rolebindingrestrictions","singularName":"","namespaced":true,"kind":"RoleBindingRestriction","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"rolebindings","singularName":"","namespaced":true,"kind":"RoleBinding","verbs":["create","delete","get","list","patch","update"]},{"name":"roles","singularName":"","namespaced":true,"kind":"Role","verbs":["create","delete","get","list","patch","update"]},{"name":"routes","singularName":"","namespaced":true,"kind":"Route","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"categories":["all"]},{"name":"routes/status","singularName":"","namespaced":true,"kind":"Route","verbs":["get","patch","update"]},{"name":"selfsubjectrulesreviews","singularName":"","namespaced":true,"kind":"SelfSubjectRulesReview","verbs":["create"]},{"name":"subjectaccessreviews","singularName":"","namespaced":true,"kind":"SubjectAccessReview","verbs":["create"]},{"name":"subjectrulesreviews","singularName":"","namespaced":true,"kind":"SubjectRulesReview","verbs":["create"]},{"name":"templates","singularName":"","namespaced":true,"kind":"Template","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"useridentitymappings","singularName":"","namespaced":false,"kind":"UserIdentityMapping","verbs":["create","delete","get","patch","update"]},{"name":"users","singularName":"","namespaced":false,"kind":"User","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]}]}

'
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:23 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/oapi/v1/routes?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:23 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "RouteList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/oapi/v1/routes",
            "resourceVersion": "8717"
          },
          "items": [
            {
              "metadata": {
                "name": "my-route-0",
                "namespace": "my-project-0",
                "selfLink": "/oapi/v1/namespaces/my-project-0/routes/my-route-0",
                "uid": "699d0001-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8405",
                "creationTimestamp": "2017-12-11T21:22:38Z",
                "labels": {
                  "key-route-label": "value-route-label"
                },
                "annotations": {
                  "openshift.io/host.generated": "true"
                }
              },
              "spec": {
                "host": "my-route-0-my-project-0.192.168.99.100.nip.io",
                "to": {
                  "kind": "Service",
                  "name": "service-name",
                  "weight": 100
                },
                "wildcardPolicy": "None"
              },
              "status": {
                "ingress": [
                  {
                    "host": "my-route-0-my-project-0.192.168.99.100.nip.io",
                    "routerName": "router",
                    "conditions": [
                      {
                        "type": "Admitted",
                        "status": "True",
                        "lastTransitionTime": "2017-12-11T21:22:38Z"
                      }
                    ],
                    "wildcardPolicy": "None"
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "my-route-1",
                "namespace": "my-project-1",
                "selfLink": "/oapi/v1/namespaces/my-project-1/routes/my-route-1",
                "uid": "6b645266-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8477",
                "creationTimestamp": "2017-12-11T21:22:41Z",
                "labels": {
                  "key-route-label": "value-route-label"
                },
                "annotations": {
                  "openshift.io/host.generated": "true"
                }
              },
              "spec": {
                "host": "my-route-1-my-project-1.192.168.99.100.nip.io",
                "to": {
                  "kind": "Service",
                  "name": "service-name",
                  "weight": 100
                },
                "wildcardPolicy": "None"
              },
              "status": {
                "ingress": [
                  {
                    "host": "my-route-1-my-project-1.192.168.99.100.nip.io",
                    "routerName": "router",
                    "conditions": [
                      {
                        "type": "Admitted",
                        "status": "True",
                        "lastTransitionTime": "2017-12-11T21:22:41Z"
                      }
                    ],
                    "wildcardPolicy": "None"
                  }
                ]
              }
            },
            {
              "metadata": {
                "name": "my-route-2",
                "namespace": "my-project-2",
                "selfLink": "/oapi/v1/namespaces/my-project-2/routes/my-route-2",
                "uid": "6d47d6cd-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8561",
                "creationTimestamp": "2017-12-11T21:22:44Z",
                "labels": {
                  "key-route-label": "value-route-label"
                },
                "annotations": {
                  "openshift.io/host.generated": "true"
                }
              },
              "spec": {
                "host": "my-route-2-my-project-2.192.168.99.100.nip.io",
                "to": {
                  "kind": "Service",
                  "name": "service-name",
                  "weight": 100
                },
                "wildcardPolicy": "None"
              },
              "status": {
                "ingress": [
                  {
                    "host": "my-route-2-my-project-2.192.168.99.100.nip.io",
                    "routerName": "router",
                    "conditions": [
                      {
                        "type": "Admitted",
                        "status": "True",
                        "lastTransitionTime": "2017-12-11T21:22:44Z"
                      }
                    ],
                    "wildcardPolicy": "None"
                  }
                ]
              }
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:23 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/oapi/v1/projects?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:27 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "ProjectList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/oapi/v1/projects"
          },
          "items": [
            {
              "metadata": {
                "name": "default",
                "selfLink": "/oapi/v1/projects/default",
                "uid": "5e838730-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "614",
                "creationTimestamp": "2017-12-11T13:15:33Z",
                "annotations": {
                  "openshift.io/sa.initialized-roles": "true",
                  "openshift.io/sa.scc.mcs": "s0:c1,c0",
                  "openshift.io/sa.scc.supplemental-groups": "1000000000/10000",
                  "openshift.io/sa.scc.uid-range": "1000000000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "kubernetes",
                  "openshift.io/origin"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "kube-public",
                "selfLink": "/oapi/v1/projects/kube-public",
                "uid": "5ec4ce19-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "634",
                "creationTimestamp": "2017-12-11T13:15:34Z",
                "annotations": {
                  "openshift.io/sa.scc.mcs": "s0:c3,c2",
                  "openshift.io/sa.scc.supplemental-groups": "1000010000/10000",
                  "openshift.io/sa.scc.uid-range": "1000010000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "kube-system",
                "selfLink": "/oapi/v1/projects/kube-system",
                "uid": "5e83ab88-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "648",
                "creationTimestamp": "2017-12-11T13:15:33Z",
                "annotations": {
                  "openshift.io/sa.scc.mcs": "s0:c5,c0",
                  "openshift.io/sa.scc.supplemental-groups": "1000020000/10000",
                  "openshift.io/sa.scc.uid-range": "1000020000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "kubernetes",
                  "openshift.io/origin"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "management-infra",
                "selfLink": "/oapi/v1/projects/management-infra",
                "uid": "631fc05a-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "803",
                "creationTimestamp": "2017-12-11T13:15:41Z",
                "annotations": {
                  "openshift.io/description": "\"Management-Infrastructure\"",
                  "openshift.io/display-name": "",
                  "openshift.io/sa.scc.mcs": "s0:c8,c7",
                  "openshift.io/sa.scc.supplemental-groups": "1000070000/10000",
                  "openshift.io/sa.scc.uid-range": "1000070000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "openshift.io/origin",
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "my-project-0",
                "selfLink": "/oapi/v1/projects/my-project-0",
                "uid": "688ff249-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8360",
                "creationTimestamp": "2017-12-11T21:22:36Z",
                "annotations": {
                  "openshift.io/description": "",
                  "openshift.io/display-name": "",
                  "openshift.io/requester": "system:admin",
                  "openshift.io/sa.scc.mcs": "s0:c16,c5",
                  "openshift.io/sa.scc.supplemental-groups": "1000250000/10000",
                  "openshift.io/sa.scc.uid-range": "1000250000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "openshift.io/origin",
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "my-project-1",
                "selfLink": "/oapi/v1/projects/my-project-1",
                "uid": "6a4d37e1-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8434",
                "creationTimestamp": "2017-12-11T21:22:39Z",
                "annotations": {
                  "openshift.io/description": "",
                  "openshift.io/display-name": "",
                  "openshift.io/requester": "system:admin",
                  "openshift.io/sa.scc.mcs": "s0:c16,c10",
                  "openshift.io/sa.scc.supplemental-groups": "1000260000/10000",
                  "openshift.io/sa.scc.uid-range": "1000260000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "openshift.io/origin",
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "my-project-2",
                "selfLink": "/oapi/v1/projects/my-project-2",
                "uid": "6bfde6af-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8513",
                "creationTimestamp": "2017-12-11T21:22:42Z",
                "annotations": {
                  "openshift.io/description": "",
                  "openshift.io/display-name": "",
                  "openshift.io/requester": "system:admin",
                  "openshift.io/sa.scc.mcs": "s0:c16,c15",
                  "openshift.io/sa.scc.supplemental-groups": "1000270000/10000",
                  "openshift.io/sa.scc.uid-range": "1000270000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "openshift.io/origin",
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "myproject",
                "selfLink": "/oapi/v1/projects/myproject",
                "uid": "61a25427-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "659",
                "creationTimestamp": "2017-12-11T13:15:38Z",
                "annotations": {
                  "openshift.io/description": "Initial developer project",
                  "openshift.io/display-name": "My Project",
                  "openshift.io/requester": "developer",
                  "openshift.io/sa.scc.mcs": "s0:c6,c0",
                  "openshift.io/sa.scc.supplemental-groups": "1000030000/10000",
                  "openshift.io/sa.scc.uid-range": "1000030000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "openshift.io/origin",
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "openshift",
                "selfLink": "/oapi/v1/projects/openshift",
                "uid": "5e7efd2d-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "673",
                "creationTimestamp": "2017-12-11T13:15:33Z",
                "annotations": {
                  "openshift.io/sa.initialized-roles": "true",
                  "openshift.io/sa.scc.mcs": "s0:c6,c5",
                  "openshift.io/sa.scc.supplemental-groups": "1000040000/10000",
                  "openshift.io/sa.scc.uid-range": "1000040000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "kubernetes",
                  "openshift.io/origin"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "openshift-infra",
                "selfLink": "/oapi/v1/projects/openshift-infra",
                "uid": "5e83c326-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "696",
                "creationTimestamp": "2017-12-11T13:15:33Z",
                "annotations": {
                  "openshift.io/sa.initialized-roles": "true",
                  "openshift.io/sa.scc.mcs": "s0:c7,c4",
                  "openshift.io/sa.scc.supplemental-groups": "1000050000/10000",
                  "openshift.io/sa.scc.uid-range": "1000050000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            },
            {
              "metadata": {
                "name": "openshift-node",
                "selfLink": "/oapi/v1/projects/openshift-node",
                "uid": "5f580bbc-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "715",
                "creationTimestamp": "2017-12-11T13:15:35Z",
                "annotations": {
                  "openshift.io/sa.scc.mcs": "s0:c8,c2",
                  "openshift.io/sa.scc.supplemental-groups": "1000060000/10000",
                  "openshift.io/sa.scc.uid-range": "1000060000/10000"
                }
              },
              "spec": {
                "finalizers": [
                  "kubernetes"
                ]
              },
              "status": {
                "phase": "Active"
              }
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:27 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/oapi/v1/buildconfigs?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:27 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "BuildConfigList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/oapi/v1/buildconfigs",
            "resourceVersion": "8718"
          },
          "items": [
            {
              "metadata": {
                "name": "my-build-config-0",
                "namespace": "my-project-0",
                "selfLink": "/oapi/v1/namespaces/my-project-0/buildconfigs/my-build-config-0",
                "uid": "69a7ee58-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8421",
                "creationTimestamp": "2017-12-11T21:22:38Z"
              },
              "spec": {
                "triggers": [
                  {
                    "type": "GitHub",
                    "github": {
                      "secret": "secret101"
                    }
                  },
                  {
                    "type": "Generic",
                    "generic": {
                      "secret": "secret101"
                    }
                  }
                ],
                "runPolicy": "Serial",
                "source": {
                  "type": "Git",
                  "git": {
                    "uri": "https://github.com/openshift/ruby-hello-world"
                  }
                },
                "strategy": {
                  "type": "Source",
                  "sourceStrategy": {
                    "from": {
                      "kind": "DockerImage",
                      "name": "ruby-20-centos7:latest"
                    }
                  }
                },
                "output": {
                  "to": {
                    "kind": "ImageStreamTag",
                    "name": "origin-ruby-sample:latest"
                  }
                },
                "resources": {},
                "postCommit": {
                  "script": "bundle exec rake test"
                },
                "nodeSelector": null
              },
              "status": {
                "lastVersion": 1
              }
            },
            {
              "metadata": {
                "name": "my-build-config-1",
                "namespace": "my-project-1",
                "selfLink": "/oapi/v1/namespaces/my-project-1/buildconfigs/my-build-config-1",
                "uid": "6b731636-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8498",
                "creationTimestamp": "2017-12-11T21:22:41Z"
              },
              "spec": {
                "triggers": [
                  {
                    "type": "GitHub",
                    "github": {
                      "secret": "secret101"
                    }
                  },
                  {
                    "type": "Generic",
                    "generic": {
                      "secret": "secret101"
                    }
                  }
                ],
                "runPolicy": "Serial",
                "source": {
                  "type": "Git",
                  "git": {
                    "uri": "https://github.com/openshift/ruby-hello-world"
                  }
                },
                "strategy": {
                  "type": "Source",
                  "sourceStrategy": {
                    "from": {
                      "kind": "DockerImage",
                      "name": "ruby-20-centos7:latest"
                    }
                  }
                },
                "output": {
                  "to": {
                    "kind": "ImageStreamTag",
                    "name": "origin-ruby-sample:latest"
                  }
                },
                "resources": {},
                "postCommit": {
                  "script": "bundle exec rake test"
                },
                "nodeSelector": null
              },
              "status": {
                "lastVersion": 1
              }
            },
            {
              "metadata": {
                "name": "my-build-config-2",
                "namespace": "my-project-2",
                "selfLink": "/oapi/v1/namespaces/my-project-2/buildconfigs/my-build-config-2",
                "uid": "6d55f4ec-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8578",
                "creationTimestamp": "2017-12-11T21:22:44Z"
              },
              "spec": {
                "triggers": [
                  {
                    "type": "GitHub",
                    "github": {
                      "secret": "secret101"
                    }
                  },
                  {
                    "type": "Generic",
                    "generic": {
                      "secret": "secret101"
                    }
                  }
                ],
                "runPolicy": "Serial",
                "source": {
                  "type": "Git",
                  "git": {
                    "uri": "https://github.com/openshift/ruby-hello-world"
                  }
                },
                "strategy": {
                  "type": "Source",
                  "sourceStrategy": {
                    "from": {
                      "kind": "DockerImage",
                      "name": "ruby-20-centos7:latest"
                    }
                  }
                },
                "output": {
                  "to": {
                    "kind": "ImageStreamTag",
                    "name": "origin-ruby-sample:latest"
                  }
                },
                "resources": {},
                "postCommit": {
                  "script": "bundle exec rake test"
                },
                "nodeSelector": null
              },
              "status": {
                "lastVersion": 1
              }
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:27 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/oapi/v1/builds?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:28 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "BuildList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/oapi/v1/builds",
            "resourceVersion": "8719"
          },
          "items": [
            {
              "metadata": {
                "name": "my-build-config-0-1",
                "namespace": "my-project-0",
                "selfLink": "/oapi/v1/namespaces/my-project-0/builds/my-build-config-0-1",
                "uid": "69f4271f-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8653",
                "creationTimestamp": "2017-12-11T21:22:38Z",
                "labels": {
                  "buildconfig": "my-build-config-0",
                  "openshift.io/build-config.name": "my-build-config-0",
                  "openshift.io/build.start-policy": "Serial"
                },
                "annotations": {
                  "openshift.io/build-config.name": "my-build-config-0",
                  "openshift.io/build.number": "1",
                  "openshift.io/build.pod-name": "my-build-config-0-1-build"
                },
                "ownerReferences": [
                  {
                    "apiVersion": "build.openshift.io/v1",
                    "kind": "BuildConfig",
                    "name": "my-build-config-0",
                    "uid": "69a7ee58-deb9-11e7-a24c-461d677cd862",
                    "controller": true
                  }
                ]
              },
              "spec": {
                "serviceAccount": "builder",
                "source": {
                  "type": "Git",
                  "git": {
                    "uri": "https://github.com/openshift/ruby-hello-world"
                  }
                },
                "revision": {
                  "type": "Git",
                  "git": {
                    "commit": "022d87e4160c00274b63cdad7c238b5c6a299265",
                    "author": {
                      "name": "Ben Parees",
                      "email": "bparees@users.noreply.github.com"
                    },
                    "committer": {
                      "name": "GitHub",
                      "email": "noreply@github.com"
                    },
                    "message": "Merge pull request #58 from junaruga/feature/fix-for-ruby24"
                  }
                },
                "strategy": {
                  "type": "Source",
                  "sourceStrategy": {
                    "from": {
                      "kind": "DockerImage",
                      "name": "ruby-20-centos7:latest"
                    }
                  }
                },
                "output": {
                  "to": {
                    "kind": "ImageStreamTag",
                    "name": "origin-ruby-sample:latest"
                  },
                  "pushSecret": {
                    "name": "builder-dockercfg-kkbkb"
                  }
                },
                "resources": {},
                "postCommit": {
                  "script": "bundle exec rake test"
                },
                "nodeSelector": null,
                "triggeredBy": [
                  {
                    "message": "Manually triggered"
                  }
                ]
              },
              "status": {
                "phase": "Failed",
                "reason": "PullBuilderImageFailed",
                "message": "Failed to pull builder image.",
                "startTimestamp": "2017-12-11T21:22:39Z",
                "completionTimestamp": "2017-12-11T21:22:55Z",
                "duration": 16000000000,
                "outputDockerImageReference": "172.30.1.1:5000/my-project-0/origin-ruby-sample:latest",
                "config": {
                  "kind": "BuildConfig",
                  "namespace": "my-project-0",
                  "name": "my-build-config-0"
                },
                "output": {},
                "stages": [
                  {
                    "name": "FetchInputs",
                    "startTime": "2017-12-11T21:22:42Z",
                    "durationMilliseconds": 3209,
                    "steps": [
                      {
                        "name": "FetchGitSource",
                        "startTime": "2017-12-11T21:22:42Z",
                        "durationMilliseconds": 3209
                      }
                    ]
                  }
                ],
                "logSnippet": "pulling image error : Error: image library/ruby-20-centos7:latest not found\nerror: build error: unable to get ruby-20-centos7:latest"
              }
            },
            {
              "metadata": {
                "name": "my-build-config-1-1",
                "namespace": "my-project-1",
                "selfLink": "/oapi/v1/namespaces/my-project-1/builds/my-build-config-1-1",
                "uid": "6bbcb5cc-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8659",
                "creationTimestamp": "2017-12-11T21:22:41Z",
                "labels": {
                  "buildconfig": "my-build-config-1",
                  "openshift.io/build-config.name": "my-build-config-1",
                  "openshift.io/build.start-policy": "Serial"
                },
                "annotations": {
                  "openshift.io/build-config.name": "my-build-config-1",
                  "openshift.io/build.number": "1",
                  "openshift.io/build.pod-name": "my-build-config-1-1-build"
                },
                "ownerReferences": [
                  {
                    "apiVersion": "build.openshift.io/v1",
                    "kind": "BuildConfig",
                    "name": "my-build-config-1",
                    "uid": "6b731636-deb9-11e7-a24c-461d677cd862",
                    "controller": true
                  }
                ]
              },
              "spec": {
                "serviceAccount": "builder",
                "source": {
                  "type": "Git",
                  "git": {
                    "uri": "https://github.com/openshift/ruby-hello-world"
                  }
                },
                "revision": {
                  "type": "Git",
                  "git": {
                    "commit": "022d87e4160c00274b63cdad7c238b5c6a299265",
                    "author": {
                      "name": "Ben Parees",
                      "email": "bparees@users.noreply.github.com"
                    },
                    "committer": {
                      "name": "GitHub",
                      "email": "noreply@github.com"
                    },
                    "message": "Merge pull request #58 from junaruga/feature/fix-for-ruby24"
                  }
                },
                "strategy": {
                  "type": "Source",
                  "sourceStrategy": {
                    "from": {
                      "kind": "DockerImage",
                      "name": "ruby-20-centos7:latest"
                    }
                  }
                },
                "output": {
                  "to": {
                    "kind": "ImageStreamTag",
                    "name": "origin-ruby-sample:latest"
                  },
                  "pushSecret": {
                    "name": "builder-dockercfg-rlz4n"
                  }
                },
                "resources": {},
                "postCommit": {
                  "script": "bundle exec rake test"
                },
                "nodeSelector": null,
                "triggeredBy": [
                  {
                    "message": "Manually triggered"
                  }
                ]
              },
              "status": {
                "phase": "Failed",
                "reason": "PullBuilderImageFailed",
                "message": "Failed to pull builder image.",
                "startTimestamp": "2017-12-11T21:22:41Z",
                "completionTimestamp": "2017-12-11T21:22:57Z",
                "duration": 16000000000,
                "outputDockerImageReference": "172.30.1.1:5000/my-project-1/origin-ruby-sample:latest",
                "config": {
                  "kind": "BuildConfig",
                  "namespace": "my-project-1",
                  "name": "my-build-config-1"
                },
                "output": {},
                "stages": [
                  {
                    "name": "FetchInputs",
                    "startTime": "2017-12-11T21:22:45Z",
                    "durationMilliseconds": 3139,
                    "steps": [
                      {
                        "name": "FetchGitSource",
                        "startTime": "2017-12-11T21:22:45Z",
                        "durationMilliseconds": 3139
                      }
                    ]
                  }
                ],
                "logSnippet": "pulling image error : Error: image library/ruby-20-centos7:latest not found\nerror: build error: unable to get ruby-20-centos7:latest"
              }
            },
            {
              "metadata": {
                "name": "my-build-config-2-1",
                "namespace": "my-project-2",
                "selfLink": "/oapi/v1/namespaces/my-project-2/builds/my-build-config-2-1",
                "uid": "6dae9c13-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8666",
                "creationTimestamp": "2017-12-11T21:22:44Z",
                "labels": {
                  "buildconfig": "my-build-config-2",
                  "openshift.io/build-config.name": "my-build-config-2",
                  "openshift.io/build.start-policy": "Serial"
                },
                "annotations": {
                  "openshift.io/build-config.name": "my-build-config-2",
                  "openshift.io/build.number": "1",
                  "openshift.io/build.pod-name": "my-build-config-2-1-build"
                },
                "ownerReferences": [
                  {
                    "apiVersion": "build.openshift.io/v1",
                    "kind": "BuildConfig",
                    "name": "my-build-config-2",
                    "uid": "6d55f4ec-deb9-11e7-a24c-461d677cd862",
                    "controller": true
                  }
                ]
              },
              "spec": {
                "serviceAccount": "builder",
                "source": {
                  "type": "Git",
                  "git": {
                    "uri": "https://github.com/openshift/ruby-hello-world"
                  }
                },
                "revision": {
                  "type": "Git",
                  "git": {
                    "commit": "022d87e4160c00274b63cdad7c238b5c6a299265",
                    "author": {
                      "name": "Ben Parees",
                      "email": "bparees@users.noreply.github.com"
                    },
                    "committer": {
                      "name": "GitHub",
                      "email": "noreply@github.com"
                    },
                    "message": "Merge pull request #58 from junaruga/feature/fix-for-ruby24"
                  }
                },
                "strategy": {
                  "type": "Source",
                  "sourceStrategy": {
                    "from": {
                      "kind": "DockerImage",
                      "name": "ruby-20-centos7:latest"
                    }
                  }
                },
                "output": {
                  "to": {
                    "kind": "ImageStreamTag",
                    "name": "origin-ruby-sample:latest"
                  },
                  "pushSecret": {
                    "name": "builder-dockercfg-wd7v4"
                  }
                },
                "resources": {},
                "postCommit": {
                  "script": "bundle exec rake test"
                },
                "nodeSelector": null,
                "triggeredBy": [
                  {
                    "message": "Manually triggered"
                  }
                ]
              },
              "status": {
                "phase": "Failed",
                "reason": "PullBuilderImageFailed",
                "message": "Failed to pull builder image.",
                "startTimestamp": "2017-12-11T21:22:45Z",
                "completionTimestamp": "2017-12-11T21:23:00Z",
                "duration": 15000000000,
                "outputDockerImageReference": "172.30.1.1:5000/my-project-2/origin-ruby-sample:latest",
                "config": {
                  "kind": "BuildConfig",
                  "namespace": "my-project-2",
                  "name": "my-build-config-2"
                },
                "output": {},
                "stages": [
                  {
                    "name": "FetchInputs",
                    "startTime": "2017-12-11T21:22:48Z",
                    "durationMilliseconds": 3131,
                    "steps": [
                      {
                        "name": "FetchGitSource",
                        "startTime": "2017-12-11T21:22:48Z",
                        "durationMilliseconds": 3131
                      }
                    ]
                  }
                ],
                "logSnippet": "pulling image error : Error: image library/ruby-20-centos7:latest not found\nerror: build error: unable to get ruby-20-centos7:latest"
              }
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:28 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/oapi/v1/templates?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:28 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "TemplateList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/oapi/v1/templates",
            "resourceVersion": "8719"
          },
          "items": [
            {
              "metadata": {
                "name": "heapster-standalone",
                "namespace": "kube-system",
                "selfLink": "/oapi/v1/namespaces/kube-system/templates/heapster-standalone",
                "uid": "6109371a-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "411",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "labels": {
                  "metrics-infra": "heapster"
                },
                "annotations": {
                  "description": "A simple metrics solution for an OpenShift cluster. Expects to be installed in the 'kube-system' namespace.\n",
                  "iconClass": "icon-cogs",
                  "openshift.io/display-name": "Heapster Metrics (Standalone)",
                  "tags": "metrics,monitoring,heapster"
                }
              },
              "objects": [
                {
                  "apiVersion": "v1",
                  "kind": "ServiceAccount",
                  "metadata": {
                    "labels": {
                      "metrics-infra": "support"
                    },
                    "name": "heapster",
                    "namespace": "${NAMESPACE}"
                  },
                  "secrets": [
                    {
                      "name": "heapster-secrets"
                    }
                  ]
                },
                {
                  "apiVersion": "v1",
                  "kind": "ClusterRoleBinding",
                  "metadata": {
                    "name": "heapster-cluster-reader"
                  },
                  "roleRef": {
                    "name": "cluster-reader"
                  },
                  "subjects": [
                    {
                      "kind": "ServiceAccount",
                      "name": "heapster",
                      "namespace": "${NAMESPACE}"
                    }
                  ]
                },
                {
                  "apiVersion": "v1",
                  "kind": "Service",
                  "metadata": {
                    "annotations": {
                      "service.alpha.openshift.io/serving-cert-secret-name": "heapster-secrets"
                    },
                    "labels": {
                      "metrics-infra": "heapster",
                      "name": "heapster"
                    },
                    "name": "heapster",
                    "namespace": "${NAMESPACE}"
                  },
                  "spec": {
                    "ports": [
                      {
                        "port": 443,
                        "targetPort": "https"
                      }
                    ],
                    "selector": {
                      "name": "heapster"
                    }
                  }
                },
                {
                  "apiVersion": "v1",
                  "kind": "ReplicationController",
                  "metadata": {
                    "labels": {
                      "metrics-infra": "heapster",
                      "name": "heapster"
                    },
                    "name": "heapster",
                    "namespace": "${NAMESPACE}"
                  },
                  "spec": {
                    "replicas": 1,
                    "selector": {
                      "name": "heapster"
                    },
                    "template": {
                      "metadata": {
                        "labels": {
                          "metrics-infra": "heapster",
                          "name": "heapster"
                        }
                      },
                      "spec": {
                        "containers": [
                          {
                            "command": [
                              "heapster-wrapper.sh",
                              "--source=kubernetes:${MASTER_URL}?useServiceAccount=true\u0026kubeletHttps=true\u0026kubeletPort=10250",
                              "--tls_cert=/secrets/tls.crt",
                              "--tls_key=/secrets/tls.key",
                              "--tls_client_ca=/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt",
                              "--allowed_users=system:master-proxy",
                              "--metric_resolution=${METRIC_RESOLUTION}"
                            ],
                            "env": [
                              {
                                "name": "STARTUP_TIMEOUT",
                                "value": "${STARTUP_TIMEOUT}"
                              }
                            ],
                            "image": "${IMAGE_PREFIX}metrics-heapster:${IMAGE_VERSION}",
                            "name": "heapster",
                            "ports": [
                              {
                                "containerPort": 8082,
                                "name": "https"
                              }
                            ],
                            "volumeMounts": [
                              {
                                "mountPath": "/secrets",
                                "name": "heapster-secrets"
                              }
                            ]
                          }
                        ],
                        "serviceAccount": "heapster",
                        "volumes": [
                          {
                            "name": "heapster-secrets",
                            "secret": {
                              "secretName": "heapster-secrets"
                            }
                          }
                        ]
                      },
                      "version": "v1"
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "name": "MASTER_URL",
                  "description": "Internal URL for the master, for authentication retrieval",
                  "value": "https://kubernetes.default.svc"
                },
                {
                  "name": "IMAGE_PREFIX",
                  "description": "Specify prefix for metrics components; e.g. for \"openshift/origin-metrics-deployer:v1.1\", set prefix \"openshift/origin-\"",
                  "value": "openshift/origin-"
                },
                {
                  "name": "IMAGE_VERSION",
                  "description": "Specify version for metrics components; e.g. for \"openshift/origin-metrics-deployer:v1.1\", set version \"v1.1\"",
                  "value": "latest"
                },
                {
                  "name": "METRIC_RESOLUTION",
                  "description": "How often metrics should be gathered. Defaults value of '15s' for 15 seconds",
                  "value": "15s"
                },
                {
                  "name": "STARTUP_TIMEOUT",
                  "description": "How long in seconds we should wait until Heapster starts up before attempting a restart",
                  "value": "500"
                },
                {
                  "name": "NAMESPACE",
                  "description": "The namespace to instantiate heapster under. Defaults to 'kube-system'.",
                  "value": "kube-system"
                }
              ]
            },
            {
              "metadata": {
                "name": "prometheus",
                "namespace": "kube-system",
                "selfLink": "/oapi/v1/namespaces/kube-system/templates/prometheus",
                "uid": "61071a15-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "410",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "annotations": {
                  "description": "A monitoring solution for an OpenShift cluster - collect and gather metrics and alerts from nodes, services, and the infrastructure. This is a tech preview feature.\n",
                  "iconClass": "icon-cogs",
                  "openshift.io/display-name": "Prometheus",
                  "tags": "monitoring,prometheus, alertmanager,time-series"
                }
              },
              "objects": [
                {
                  "apiVersion": "v1",
                  "kind": "ServiceAccount",
                  "metadata": {
                    "annotations": {
                      "serviceaccounts.openshift.io/oauth-redirectreference.alerts": "{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"alerts\"}}",
                      "serviceaccounts.openshift.io/oauth-redirectreference.prom": "{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"prometheus\"}}"
                    },
                    "name": "prometheus",
                    "namespace": "${NAMESPACE}"
                  }
                },
                {
                  "apiVersion": "authorization.openshift.io/v1",
                  "kind": "ClusterRoleBinding",
                  "metadata": {
                    "name": "prometheus-cluster-reader"
                  },
                  "roleRef": {
                    "name": "cluster-reader"
                  },
                  "subjects": [
                    {
                      "kind": "ServiceAccount",
                      "name": "prometheus",
                      "namespace": "${NAMESPACE}"
                    }
                  ]
                },
                {
                  "apiVersion": "route.openshift.io/v1",
                  "kind": "Route",
                  "metadata": {
                    "name": "prometheus",
                    "namespace": "${NAMESPACE}"
                  },
                  "spec": {
                    "tls": {
                      "insecureEdgeTerminationPolicy": "Redirect",
                      "termination": "Reencrypt"
                    },
                    "to": {
                      "name": "prometheus"
                    }
                  }
                },
                {
                  "apiVersion": "v1",
                  "kind": "Service",
                  "metadata": {
                    "annotations": {
                      "prometheus.io/scheme": "https",
                      "prometheus.io/scrape": "true",
                      "service.alpha.openshift.io/serving-cert-secret-name": "prometheus-tls"
                    },
                    "labels": {
                      "name": "prometheus"
                    },
                    "name": "prometheus",
                    "namespace": "${NAMESPACE}"
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "prometheus",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": 8443
                      }
                    ],
                    "selector": {
                      "app": "prometheus"
                    }
                  }
                },
                {
                  "apiVersion": "v1",
                  "kind": "Secret",
                  "metadata": {
                    "name": "prometheus-proxy",
                    "namespace": "${NAMESPACE}"
                  },
                  "stringData": {
                    "session_secret": "${SESSION_SECRET}="
                  }
                },
                {
                  "apiVersion": "apps/v1beta1",
                  "kind": "StatefulSet",
                  "metadata": {
                    "labels": {
                      "app": "prometheus"
                    },
                    "name": "prometheus",
                    "namespace": "${NAMESPACE}"
                  },
                  "spec": {
                    "podManagementPolicy": "Parallel",
                    "selector": {
                      "matchLabels": {
                        "app": "prometheus"
                      }
                    },
                    "template": {
                      "metadata": {
                        "labels": {
                          "app": "prometheus"
                        },
                        "name": "prometheus"
                      },
                      "spec": {
                        "containers": [
                          {
                            "args": [
                              "-provider=openshift",
                              "-https-address=:8443",
                              "-http-address=",
                              "-email-domain=*",
                              "-upstream=http://localhost:9090",
                              "-client-id=system:serviceaccount:${NAMESPACE}:prometheus",
                              "-openshift-ca=/etc/pki/tls/cert.pem",
                              "-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                              "-openshift-sar={\"resource\": \"namespaces\", \"verb\": \"get\", \"resourceName\": \"${NAMESPACE}\", \"namespace\": \"${NAMESPACE}\"}",
                              "-openshift-delegate-urls={\"/\": {\"resource\": \"namespaces\", \"verb\": \"get\", \"resourceName\": \"${NAMESPACE}\", \"namespace\": \"${NAMESPACE}\"}}",
                              "-tls-cert=/etc/tls/private/tls.crt",
                              "-tls-key=/etc/tls/private/tls.key",
                              "-client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token",
                              "-cookie-secret-file=/etc/proxy/secrets/session_secret",
                              "-skip-auth-regex=^/metrics"
                            ],
                            "image": "${IMAGE_PROXY}",
                            "imagePullPolicy": "IfNotPresent",
                            "name": "prom-proxy",
                            "ports": [
                              {
                                "containerPort": 8443,
                                "name": "web"
                              }
                            ],
                            "volumeMounts": [
                              {
                                "mountPath": "/etc/tls/private",
                                "name": "prometheus-tls"
                              },
                              {
                                "mountPath": "/etc/proxy/secrets",
                                "name": "prometheus-secrets"
                              },
                              {
                                "mountPath": "/prometheus",
                                "name": "prometheus-data"
                              }
                            ]
                          },
                          {
                            "args": [
                              "--storage.tsdb.retention=6h",
                              "--storage.tsdb.min-block-duration=2m",
                              "--config.file=/etc/prometheus/prometheus.yml",
                              "--web.listen-address=localhost:9090"
                            ],
                            "image": "${IMAGE_PROMETHEUS}",
                            "imagePullPolicy": "IfNotPresent",
                            "name": "prometheus",
                            "volumeMounts": [
                              {
                                "mountPath": "/etc/prometheus",
                                "name": "prometheus-config"
                              },
                              {
                                "mountPath": "/prometheus",
                                "name": "prometheus-data"
                              }
                            ]
                          },
                          {
                            "args": [
                              "-provider=openshift",
                              "-https-address=:9443",
                              "-http-address=",
                              "-email-domain=*",
                              "-upstream=http://localhost:9099",
                              "-client-id=system:serviceaccount:${NAMESPACE}:prometheus",
                              "-openshift-ca=/etc/pki/tls/cert.pem",
                              "-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                              "-openshift-sar={\"resource\": \"namespaces\", \"verb\": \"get\", \"resourceName\": \"${NAMESPACE}\", \"namespace\": \"${NAMESPACE}\"}",
                              "-openshift-delegate-urls={\"/\": {\"resource\": \"namespaces\", \"verb\": \"get\", \"resourceName\": \"${NAMESPACE}\", \"namespace\": \"${NAMESPACE}\"}}",
                              "-tls-cert=/etc/tls/private/tls.crt",
                              "-tls-key=/etc/tls/private/tls.key",
                              "-client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token",
                              "-cookie-secret-file=/etc/proxy/secrets/session_secret"
                            ],
                            "image": "${IMAGE_PROXY}",
                            "imagePullPolicy": "IfNotPresent",
                            "name": "alerts-proxy",
                            "ports": [
                              {
                                "containerPort": 9443,
                                "name": "web"
                              }
                            ],
                            "volumeMounts": [
                              {
                                "mountPath": "/etc/tls/private",
                                "name": "alerts-tls"
                              },
                              {
                                "mountPath": "/etc/proxy/secrets",
                                "name": "alerts-secrets"
                              }
                            ]
                          },
                          {
                            "args": [
                              "--storage-path=/alert-buffer/messages.db"
                            ],
                            "image": "${IMAGE_ALERT_BUFFER}",
                            "imagePullPolicy": "IfNotPresent",
                            "name": "alert-buffer",
                            "ports": [
                              {
                                "containerPort": 9099,
                                "name": "alert-buf"
                              }
                            ],
                            "volumeMounts": [
                              {
                                "mountPath": "/alert-buffer",
                                "name": "alert-buffer-data"
                              }
                            ]
                          },
                          {
                            "args": [
                              "-config.file=/etc/alertmanager/alertmanager.yml"
                            ],
                            "image": "${IMAGE_ALERTMANAGER}",
                            "imagePullPolicy": "IfNotPresent",
                            "name": "alertmanager",
                            "ports": [
                              {
                                "containerPort": 9093,
                                "name": "web"
                              }
                            ],
                            "volumeMounts": [
                              {
                                "mountPath": "/etc/alertmanager",
                                "name": "alertmanager-config"
                              },
                              {
                                "mountPath": "/alertmanager",
                                "name": "alertmanager-data"
                              }
                            ]
                          }
                        ],
                        "restartPolicy": "Always",
                        "serviceAccountName": "prometheus",
                        "volumes": [
                          {
                            "configMap": {
                              "defaultMode": 420,
                              "name": "prometheus"
                            },
                            "name": "prometheus-config"
                          },
                          {
                            "name": "prometheus-secrets",
                            "secret": {
                              "secretName": "prometheus-proxy"
                            }
                          },
                          {
                            "name": "prometheus-tls",
                            "secret": {
                              "secretName": "prometheus-tls"
                            }
                          },
                          {
                            "emptyDir": {},
                            "name": "prometheus-data"
                          },
                          {
                            "configMap": {
                              "defaultMode": 420,
                              "name": "prometheus-alerts"
                            },
                            "name": "alertmanager-config"
                          },
                          {
                            "name": "alerts-secrets",
                            "secret": {
                              "secretName": "alerts-proxy"
                            }
                          },
                          {
                            "name": "alerts-tls",
                            "secret": {
                              "secretName": "prometheus-alerts-tls"
                            }
                          },
                          {
                            "emptyDir": {},
                            "name": "alertmanager-data"
                          },
                          {
                            "emptyDir": {},
                            "name": "alert-buffer-data"
                          }
                        ]
                      }
                    },
                    "updateStrategy": {
                      "type": "RollingUpdate"
                    }
                  }
                },
                {
                  "apiVersion": "v1",
                  "data": {
                    "prometheus.rules": "groups:\n- name: example-rules\n  interval: 30s # defaults to global interval\n  rules:\n  - alert: Node Down\n    expr: up{job=\"kubernetes-nodes\"} == 0\n    annotations:\n      miqTarget: \"ContainerNode\"\n      severity: \"HIGH\"\n      message: \"{{$labels.instance}} is down\"\n",
                    "prometheus.yml": "rule_files:\n  - 'prometheus.rules'\n\n# A scrape configuration for running Prometheus on a Kubernetes cluster.\n# This uses separate scrape configs for cluster components (i.e. API server, node)\n# and services to allow each to use different authentication configs.\n#\n# Kubernetes labels will be added as Prometheus labels on metrics via the\n# `labelmap` relabeling action.\n\n# Scrape config for API servers.\n#\n# Kubernetes exposes API servers as endpoints to the default/kubernetes\n# service so this uses `endpoints` role and uses relabelling to only keep\n# the endpoints associated with the default/kubernetes service using the\n# default named port `https`. This works for single API server deployments as\n# well as HA API server deployments.\nscrape_configs:\n- job_name: 'kubernetes-apiservers'\n\n  kubernetes_sd_configs:\n  - role: endpoints\n\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n  # Keep only the default/kubernetes service endpoints for the https port. This\n  # will add targets for each API server which Kubernetes adds an endpoint to\n  # the default/kubernetes service.\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n\n# Scrape config for nodes.\n#\n# Each node exposes a /metrics endpoint that contains operational metrics for\n# the Kubelet and other components.\n- job_name: 'kubernetes-nodes'\n\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n  kubernetes_sd_configs:\n  - role: node\n\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n\n# Scrape config for controllers.\n#\n# Each master node exposes a /metrics endpoint on :8444 that contains operational metrics for\n# the controllers.\n#\n# TODO: move this to a pure endpoints based metrics gatherer when controllers are exposed via\n#       endpoints.\n- job_name: 'kubernetes-controllers'\n\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n  kubernetes_sd_configs:\n  - role: endpoints\n\n  # Keep only the default/kubernetes service endpoints for the https port, and then\n  # set the port to 8444. This is the default configuration for the controllers on OpenShift\n  # masters.\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n  - source_labels: [__address__]\n    action: replace\n    target_label: __address__\n    regex: (.+)(?::\\d+)\n    replacement: $1:8444\n\n# Scrape config for cAdvisor.\n#\n# Beginning in Kube 1.7, each node exposes a /metrics/cadvisor endpoint that\n# reports container metrics for each running pod. Scrape those by default.\n- job_name: 'kubernetes-cadvisor'\n\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n  metrics_path: /metrics/cadvisor\n\n  kubernetes_sd_configs:\n  - role: node\n\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n\n# Scrape config for service endpoints.\n#\n# The relabeling allows the actual service scrape endpoint to be configured\n# via the following annotations:\n#\n# * `prometheus.io/scrape`: Only scrape services that have a value of `true`\n# * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need\n# to set this to `https` \u0026 most likely set the `tls_config` of the scrape config.\n# * `prometheus.io/path`: If the metrics path is not `/metrics` override this.\n# * `prometheus.io/port`: If the metrics are exposed on a different port to the\n# service then set this appropriately.\n- job_name: 'kubernetes-service-endpoints'\n\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    # TODO: this should be per target\n    insecure_skip_verify: true\n\n  kubernetes_sd_configs:\n  - role: endpoints\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n    action: replace\n    target_label: __address__\n    regex: (.+)(?::\\d+);(\\d+)\n    replacement: $1:$2\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_username]\n    action: replace\n    target_label: __basic_auth_username__\n    regex: (.+)\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_password]\n    action: replace\n    target_label: __basic_auth_password__\n    regex: (.+)\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n    action: replace\n    target_label: kubernetes_name\n\n- job_name: 'openshift-template-service-broker'\n\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt\n    server_name: apiserver.openshift-template-service-broker.svc\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n  kubernetes_sd_configs:\n  - role: endpoints\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: openshift-template-service-broker;apiserver;https\n\nalerting:\n  alertmanagers:\n  - scheme: http\n    static_configs:\n    - targets:\n      - \"localhost:9093\"\n"
                  },
                  "kind": "ConfigMap",
                  "metadata": {
                    "name": "prometheus",
                    "namespace": "${NAMESPACE}"
                  }
                },
                {
                  "apiVersion": "route.openshift.io/v1",
                  "kind": "Route",
                  "metadata": {
                    "name": "alerts",
                    "namespace": "${NAMESPACE}"
                  },
                  "spec": {
                    "tls": {
                      "insecureEdgeTerminationPolicy": "Redirect",
                      "termination": "Reencrypt"
                    },
                    "to": {
                      "name": "alerts"
                    }
                  }
                },
                {
                  "apiVersion": "v1",
                  "kind": "Service",
                  "metadata": {
                    "annotations": {
                      "service.alpha.openshift.io/serving-cert-secret-name": "prometheus-alerts-tls"
                    },
                    "labels": {
                      "name": "alerts"
                    },
                    "name": "alerts",
                    "namespace": "${NAMESPACE}"
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "alerts",
                        "port": 443,
                        "protocol": "TCP",
                        "targetPort": 9443
                      }
                    ],
                    "selector": {
                      "app": "prometheus"
                    }
                  }
                },
                {
                  "apiVersion": "v1",
                  "kind": "Secret",
                  "metadata": {
                    "name": "alerts-proxy",
                    "namespace": "${NAMESPACE}"
                  },
                  "stringData": {
                    "session_secret": "${SESSION_SECRET}="
                  }
                },
                {
                  "apiVersion": "v1",
                  "data": {
                    "alertmanager.yml": "global:\n\n# The root route on which each incoming alert enters.\nroute:\n  # default route if none match\n  receiver: alert-buffer-wh\n\n  # The labels by which incoming alerts are grouped together. For example,\n  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would\n  # be batched into a single group.\n  # TODO:\n  group_by: []\n\n  # All the above attributes are inherited by all child routes and can\n  # overwritten on each.\n\nreceivers:\n- name: alert-buffer-wh\n  webhook_configs:\n  - url: http://localhost:9099/topics/alerts\n"
                  },
                  "kind": "ConfigMap",
                  "metadata": {
                    "name": "prometheus-alerts",
                    "namespace": "${NAMESPACE}"
                  }
                }
              ],
              "parameters": [
                {
                  "name": "NAMESPACE",
                  "description": "The namespace to instantiate prometheus under. Defaults to 'kube-system'.",
                  "value": "kube-system"
                },
                {
                  "name": "IMAGE_PROXY",
                  "description": "The location of the proxy image",
                  "value": "openshift/oauth-proxy:v1.0.0"
                },
                {
                  "name": "IMAGE_PROMETHEUS",
                  "description": "The location of the prometheus image",
                  "value": "openshift/prometheus:v2.0.0-dev.3"
                },
                {
                  "name": "IMAGE_ALERTMANAGER",
                  "description": "The location of the alertmanager image",
                  "value": "openshift/prometheus-alertmanager:v0.9.1"
                },
                {
                  "name": "IMAGE_ALERT_BUFFER",
                  "description": "The location of alert-buffer image",
                  "value": "openshift/prometheus-alert-buffer:v0.0.2"
                },
                {
                  "name": "SESSION_SECRET",
                  "description": "The session secret for the proxy",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{43}"
                }
              ]
            },
            {
              "metadata": {
                "name": "my-template-0",
                "namespace": "my-project-0",
                "selfLink": "/oapi/v1/namespaces/my-project-0/templates/my-template-0",
                "uid": "69ba882a-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8411",
                "creationTimestamp": "2017-12-11T21:22:38Z",
                "annotations": {
                  "description": "Description",
                  "iconClass": "icon",
                  "tags": "database,nosql"
                }
              },
              "objects": [
                {
                  "apiVersion": "v1",
                  "kind": "PersistentVolumeClaim",
                  "metadata": {
                    "name": "my-persistentvolumeclaim"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "8Gi"
                      }
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "name": "MYPARAM",
                  "value": "my-value"
                }
              ]
            },
            {
              "metadata": {
                "name": "my-template-1",
                "namespace": "my-project-1",
                "selfLink": "/oapi/v1/namespaces/my-project-1/templates/my-template-1",
                "uid": "6b863025-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8487",
                "creationTimestamp": "2017-12-11T21:22:41Z",
                "annotations": {
                  "description": "Description",
                  "iconClass": "icon",
                  "tags": "database,nosql"
                }
              },
              "objects": [
                {
                  "apiVersion": "v1",
                  "kind": "PersistentVolumeClaim",
                  "metadata": {
                    "name": "my-persistentvolumeclaim"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "8Gi"
                      }
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "name": "MYPARAM",
                  "value": "my-value"
                }
              ]
            },
            {
              "metadata": {
                "name": "my-template-2",
                "namespace": "my-project-2",
                "selfLink": "/oapi/v1/namespaces/my-project-2/templates/my-template-2",
                "uid": "6d700501-deb9-11e7-a24c-461d677cd862",
                "resourceVersion": "8569",
                "creationTimestamp": "2017-12-11T21:22:44Z",
                "annotations": {
                  "description": "Description",
                  "iconClass": "icon",
                  "tags": "database,nosql"
                }
              },
              "objects": [
                {
                  "apiVersion": "v1",
                  "kind": "PersistentVolumeClaim",
                  "metadata": {
                    "name": "my-persistentvolumeclaim"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "8Gi"
                      }
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "name": "MYPARAM",
                  "value": "my-value"
                }
              ]
            },
            {
              "metadata": {
                "name": "cakephp-mysql-persistent",
                "namespace": "openshift",
                "selfLink": "/oapi/v1/namespaces/openshift/templates/cakephp-mysql-persistent",
                "uid": "60e4fafc-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "384",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "annotations": {
                  "description": "An example CakePHP application with a MySQL database. For more information about using this template, including OpenShift considerations, see https://github.com/openshift/cakephp-ex/blob/master/README.md.",
                  "iconClass": "icon-php",
                  "openshift.io/display-name": "CakePHP + MySQL",
                  "openshift.io/documentation-url": "https://github.com/openshift/cakephp-ex",
                  "openshift.io/long-description": "This template defines resources needed to develop a CakePHP application, including a build configuration, application deployment configuration, and database deployment configuration.",
                  "openshift.io/provider-display-name": "Red Hat, Inc.",
                  "openshift.io/support-url": "https://access.redhat.com",
                  "tags": "quickstart,php,cakephp",
                  "template.openshift.io/bindable": "false"
                }
              },
              "message": "The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/openshift/cake-ex/blob/master/README.md.",
              "objects": [
                {
                  "kind": "Secret",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}"
                  },
                  "stringData": {
                    "database-user": "${DATABASE_USER}",
                    "database-password": "${DATABASE_PASSWORD}",
                    "cakephp-secret-token": "${CAKEPHP_SECRET_TOKEN}",
                    "cakephp-security-salt": "${CAKEPHP_SECURITY_SALT}",
                    "cakephp-security-cipher-seed": "${CAKEPHP_SECURITY_CIPHER_SEED}"
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Exposes and load balances the application pods",
                      "service.alpha.openshift.io/dependencies": "[{\"name\": \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "web",
                        "port": 8080,
                        "targetPort": 8080
                      }
                    ],
                    "selector": {
                      "name": "${NAME}"
                    }
                  }
                },
                {
                  "kind": "Route",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}"
                  },
                  "spec": {
                    "host": "${APPLICATION_DOMAIN}",
                    "to": {
                      "kind": "Service",
                      "name": "${NAME}"
                    }
                  }
                },
                {
                  "kind": "ImageStream",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Keeps track of changes in the application image"
                    }
                  }
                },
                {
                  "kind": "BuildConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Defines how to build the application",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "source": {
                      "type": "Git",
                      "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                      },
                      "contextDir": "${CONTEXT_DIR}"
                    },
                    "strategy": {
                      "type": "Source",
                      "sourceStrategy": {
                        "from": {
                          "kind": "ImageStreamTag",
                          "namespace": "${NAMESPACE}",
                          "name": "php:7.0"
                        },
                        "env": [
                          {
                            "name": "COMPOSER_MIRROR",
                            "value": "${COMPOSER_MIRROR}"
                          }
                        ]
                      }
                    },
                    "output": {
                      "to": {
                        "kind": "ImageStreamTag",
                        "name": "${NAME}:latest"
                      }
                    },
                    "triggers": [
                      {
                        "type": "ImageChange"
                      },
                      {
                        "type": "ConfigChange"
                      },
                      {
                        "type": "GitHub",
                        "github": {
                          "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                      }
                    ],
                    "postCommit": {
                      "script": "./lib/Cake/Console/cake test app AllTests"
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Defines how to deploy the application server",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate",
                      "recreateParams": {
                        "pre": {
                          "failurePolicy": "Retry",
                          "execNewPod": {
                            "command": [
                              "./migrate-database.sh"
                            ],
                            "containerName": "cakephp-mysql-persistent"
                          }
                        }
                      }
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "cakephp-mysql-persistent"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "name": "${NAME}:latest"
                          }
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${NAME}"
                    },
                    "template": {
                      "metadata": {
                        "name": "${NAME}",
                        "labels": {
                          "name": "${NAME}"
                        }
                      },
                      "spec": {
                        "containers": [
                          {
                            "name": "cakephp-mysql-persistent",
                            "image": " ",
                            "ports": [
                              {
                                "containerPort": 8080
                              }
                            ],
                            "readinessProbe": {
                              "timeoutSeconds": 3,
                              "initialDelaySeconds": 3,
                              "httpGet": {
                                "path": "/health.php",
                                "port": 8080
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 3,
                              "initialDelaySeconds": 30,
                              "httpGet": {
                                "path": "/health.php",
                                "port": 8080
                              }
                            },
                            "env": [
                              {
                                "name": "DATABASE_SERVICE_NAME",
                                "value": "${DATABASE_SERVICE_NAME}"
                              },
                              {
                                "name": "DATABASE_ENGINE",
                                "value": "${DATABASE_ENGINE}"
                              },
                              {
                                "name": "DATABASE_NAME",
                                "value": "${DATABASE_NAME}"
                              },
                              {
                                "name": "DATABASE_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-user"
                                  }
                                }
                              },
                              {
                                "name": "DATABASE_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-password"
                                  }
                                }
                              },
                              {
                                "name": "CAKEPHP_SECRET_TOKEN",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "cakephp-secret-token"
                                  }
                                }
                              },
                              {
                                "name": "CAKEPHP_SECURITY_SALT",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "cakephp-security-salt"
                                  }
                                }
                              },
                              {
                                "name": "CAKEPHP_SECURITY_CIPHER_SEED",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "cakephp-security-cipher-seed"
                                  }
                                }
                              },
                              {
                                "name": "OPCACHE_REVALIDATE_FREQ",
                                "value": "${OPCACHE_REVALIDATE_FREQ}"
                              }
                            ],
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_LIMIT}"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "kind": "PersistentVolumeClaim",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                      }
                    }
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "description": "Exposes the database server"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "mysql",
                        "port": 3306,
                        "targetPort": 3306
                      }
                    ],
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "description": "Defines how to deploy the database",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate"
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "mysql"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${NAMESPACE}",
                            "name": "mysql:5.7"
                          }
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    },
                    "template": {
                      "metadata": {
                        "name": "${DATABASE_SERVICE_NAME}",
                        "labels": {
                          "name": "${DATABASE_SERVICE_NAME}"
                        }
                      },
                      "spec": {
                        "volumes": [
                          {
                            "name": "${DATABASE_SERVICE_NAME}-data",
                            "persistentVolumeClaim": {
                              "claimName": "${DATABASE_SERVICE_NAME}"
                            }
                          }
                        ],
                        "containers": [
                          {
                            "name": "mysql",
                            "image": " ",
                            "ports": [
                              {
                                "containerPort": 3306
                              }
                            ],
                            "volumeMounts": [
                              {
                                "name": "${DATABASE_SERVICE_NAME}-data",
                                "mountPath": "/var/lib/mysql/data"
                              }
                            ],
                            "readinessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 5,
                              "exec": {
                                "command": [
                                  "/bin/sh",
                                  "-i",
                                  "-c",
                                  "MYSQL_PWD='${DATABASE_PASSWORD}' mysql -h 127.0.0.1 -u ${DATABASE_USER} -D ${DATABASE_NAME} -e 'SELECT 1'"
                                ]
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 30,
                              "tcpSocket": {
                                "port": 3306
                              }
                            },
                            "env": [
                              {
                                "name": "MYSQL_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-user"
                                  }
                                }
                              },
                              {
                                "name": "MYSQL_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-password"
                                  }
                                }
                              },
                              {
                                "name": "MYSQL_DATABASE",
                                "value": "${DATABASE_NAME}"
                              }
                            ],
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_MYSQL_LIMIT}"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "name": "NAME",
                  "displayName": "Name",
                  "description": "The name assigned to all of the frontend objects defined in this template.",
                  "value": "cakephp-mysql-persistent",
                  "required": true
                },
                {
                  "name": "NAMESPACE",
                  "displayName": "Namespace",
                  "description": "The OpenShift Namespace where the ImageStream resides.",
                  "value": "openshift",
                  "required": true
                },
                {
                  "name": "MEMORY_LIMIT",
                  "displayName": "Memory Limit",
                  "description": "Maximum amount of memory the CakePHP container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "MEMORY_MYSQL_LIMIT",
                  "displayName": "Memory Limit (MySQL)",
                  "description": "Maximum amount of memory the MySQL container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "VOLUME_CAPACITY",
                  "displayName": "Volume Capacity",
                  "description": "Volume space available for data, e.g. 512Mi, 2Gi",
                  "value": "1Gi",
                  "required": true
                },
                {
                  "name": "SOURCE_REPOSITORY_URL",
                  "displayName": "Git Repository URL",
                  "description": "The URL of the repository with your application source code.",
                  "value": "https://github.com/openshift/cakephp-ex.git",
                  "required": true
                },
                {
                  "name": "SOURCE_REPOSITORY_REF",
                  "displayName": "Git Reference",
                  "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
                },
                {
                  "name": "CONTEXT_DIR",
                  "displayName": "Context Directory",
                  "description": "Set this to the relative path to your project if it is not in the root of your repository."
                },
                {
                  "name": "APPLICATION_DOMAIN",
                  "displayName": "Application Hostname",
                  "description": "The exposed hostname that will route to the CakePHP service, if left blank a value will be defaulted."
                },
                {
                  "name": "GITHUB_WEBHOOK_SECRET",
                  "displayName": "GitHub Webhook Secret",
                  "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{40}"
                },
                {
                  "name": "DATABASE_SERVICE_NAME",
                  "displayName": "Database Service Name",
                  "value": "mysql",
                  "required": true
                },
                {
                  "name": "DATABASE_ENGINE",
                  "displayName": "Database Engine",
                  "description": "Database engine: postgresql, mysql or sqlite (default).",
                  "value": "mysql",
                  "required": true
                },
                {
                  "name": "DATABASE_NAME",
                  "displayName": "Database Name",
                  "value": "default",
                  "required": true
                },
                {
                  "name": "DATABASE_USER",
                  "displayName": "Database User",
                  "value": "cakephp",
                  "required": true
                },
                {
                  "name": "DATABASE_PASSWORD",
                  "displayName": "Database Password",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{16}"
                },
                {
                  "name": "CAKEPHP_SECRET_TOKEN",
                  "displayName": "CakePHP secret token",
                  "description": "Set this to a long random string.",
                  "generate": "expression",
                  "from": "[\\w]{50}"
                },
                {
                  "name": "CAKEPHP_SECURITY_SALT",
                  "displayName": "CakePHP Security Salt",
                  "description": "Security salt for session hash.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{40}"
                },
                {
                  "name": "CAKEPHP_SECURITY_CIPHER_SEED",
                  "displayName": "CakePHP Security Cipher Seed",
                  "description": "Security cipher seed for session hash.",
                  "generate": "expression",
                  "from": "[0-9]{30}"
                },
                {
                  "name": "OPCACHE_REVALIDATE_FREQ",
                  "displayName": "OPcache Revalidation Frequency",
                  "description": "How often to check script timestamps for updates, in seconds. 0 will result in OPcache checking for updates on every request.",
                  "value": "2"
                },
                {
                  "name": "COMPOSER_MIRROR",
                  "displayName": "Custom Composer Mirror URL",
                  "description": "The custom Composer mirror URL"
                }
              ],
              "labels": {
                "app": "cakephp-mysql-persistent",
                "template": "cakephp-mysql-persistent"
              }
            },
            {
              "metadata": {
                "name": "dancer-mysql-persistent",
                "namespace": "openshift",
                "selfLink": "/oapi/v1/namespaces/openshift/templates/dancer-mysql-persistent",
                "uid": "60e86ba6-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "385",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "annotations": {
                  "description": "An example Dancer application with a MySQL database. For more information about using this template, including OpenShift considerations, see https://github.com/openshift/dancer-ex/blob/master/README.md.",
                  "iconClass": "icon-perl",
                  "openshift.io/display-name": "Dancer + MySQL",
                  "openshift.io/documentation-url": "https://github.com/openshift/dancer-ex",
                  "openshift.io/long-description": "This template defines resources needed to develop a Dancer based application, including a build configuration, application deployment configuration, and database deployment configuration.",
                  "openshift.io/provider-display-name": "Red Hat, Inc.",
                  "openshift.io/support-url": "https://access.redhat.com",
                  "tags": "quickstart,perl,dancer",
                  "template.openshift.io/bindable": "false"
                }
              },
              "message": "The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/openshift/dancer-ex/blob/master/README.md.",
              "objects": [
                {
                  "kind": "Secret",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}"
                  },
                  "stringData": {
                    "database-user": "${DATABASE_USER}",
                    "database-password": "${DATABASE_PASSWORD}",
                    "keybase": "${SECRET_KEY_BASE}"
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Exposes and load balances the application pods",
                      "service.alpha.openshift.io/dependencies": "[{\"name\": \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "web",
                        "port": 8080,
                        "targetPort": 8080
                      }
                    ],
                    "selector": {
                      "name": "${NAME}"
                    }
                  }
                },
                {
                  "kind": "Route",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}"
                  },
                  "spec": {
                    "host": "${APPLICATION_DOMAIN}",
                    "to": {
                      "kind": "Service",
                      "name": "${NAME}"
                    }
                  }
                },
                {
                  "kind": "ImageStream",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Keeps track of changes in the application image"
                    }
                  }
                },
                {
                  "kind": "BuildConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Defines how to build the application",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "source": {
                      "type": "Git",
                      "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                      },
                      "contextDir": "${CONTEXT_DIR}"
                    },
                    "strategy": {
                      "type": "Source",
                      "sourceStrategy": {
                        "from": {
                          "kind": "ImageStreamTag",
                          "namespace": "${NAMESPACE}",
                          "name": "perl:5.24"
                        },
                        "env": [
                          {
                            "name": "CPAN_MIRROR",
                            "value": "${CPAN_MIRROR}"
                          }
                        ]
                      }
                    },
                    "output": {
                      "to": {
                        "kind": "ImageStreamTag",
                        "name": "${NAME}:latest"
                      }
                    },
                    "triggers": [
                      {
                        "type": "ImageChange"
                      },
                      {
                        "type": "ConfigChange"
                      },
                      {
                        "type": "GitHub",
                        "github": {
                          "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                      }
                    ],
                    "postCommit": {
                      "script": "perl -I extlib/lib/perl5 -I lib t/*"
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Defines how to deploy the application server",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate"
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "dancer-mysql-persistent"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "name": "${NAME}:latest"
                          }
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${NAME}"
                    },
                    "template": {
                      "metadata": {
                        "name": "${NAME}",
                        "labels": {
                          "name": "${NAME}"
                        }
                      },
                      "spec": {
                        "containers": [
                          {
                            "name": "dancer-mysql-persistent",
                            "image": " ",
                            "ports": [
                              {
                                "containerPort": 8080
                              }
                            ],
                            "readinessProbe": {
                              "timeoutSeconds": 3,
                              "initialDelaySeconds": 3,
                              "httpGet": {
                                "path": "/health",
                                "port": 8080
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 3,
                              "initialDelaySeconds": 30,
                              "httpGet": {
                                "path": "/health",
                                "port": 8080
                              }
                            },
                            "env": [
                              {
                                "name": "DATABASE_SERVICE_NAME",
                                "value": "${DATABASE_SERVICE_NAME}"
                              },
                              {
                                "name": "MYSQL_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-user"
                                  }
                                }
                              },
                              {
                                "name": "MYSQL_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-password"
                                  }
                                }
                              },
                              {
                                "name": "MYSQL_DATABASE",
                                "value": "${DATABASE_NAME}"
                              },
                              {
                                "name": "SECRET_KEY_BASE",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "keybase"
                                  }
                                }
                              },
                              {
                                "name": "PERL_APACHE2_RELOAD",
                                "value": "${PERL_APACHE2_RELOAD}"
                              }
                            ],
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_LIMIT}"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "kind": "PersistentVolumeClaim",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                      }
                    }
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "description": "Exposes the database server"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "mysql",
                        "port": 3306,
                        "targetPort": 3306
                      }
                    ],
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "description": "Defines how to deploy the database",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate"
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "mysql"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${NAMESPACE}",
                            "name": "mysql:5.7"
                          }
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    },
                    "template": {
                      "metadata": {
                        "name": "${DATABASE_SERVICE_NAME}",
                        "labels": {
                          "name": "${DATABASE_SERVICE_NAME}"
                        }
                      },
                      "spec": {
                        "volumes": [
                          {
                            "name": "${DATABASE_SERVICE_NAME}-data",
                            "persistentVolumeClaim": {
                              "claimName": "${DATABASE_SERVICE_NAME}"
                            }
                          }
                        ],
                        "containers": [
                          {
                            "name": "mysql",
                            "image": " ",
                            "ports": [
                              {
                                "containerPort": 3306
                              }
                            ],
                            "volumeMounts": [
                              {
                                "name": "${DATABASE_SERVICE_NAME}-data",
                                "mountPath": "/var/lib/mysql/data"
                              }
                            ],
                            "readinessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 5,
                              "exec": {
                                "command": [
                                  "/bin/sh",
                                  "-i",
                                  "-c",
                                  "MYSQL_PWD='${DATABASE_PASSWORD}' mysql -h 127.0.0.1 -u ${DATABASE_USER} -D ${DATABASE_NAME} -e 'SELECT 1'"
                                ]
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 30,
                              "tcpSocket": {
                                "port": 3306
                              }
                            },
                            "env": [
                              {
                                "name": "MYSQL_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-user"
                                  }
                                }
                              },
                              {
                                "name": "MYSQL_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-password"
                                  }
                                }
                              },
                              {
                                "name": "MYSQL_DATABASE",
                                "value": "${DATABASE_NAME}"
                              }
                            ],
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_MYSQL_LIMIT}"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "name": "NAME",
                  "displayName": "Name",
                  "description": "The name assigned to all of the frontend objects defined in this template.",
                  "value": "dancer-mysql-persistent",
                  "required": true
                },
                {
                  "name": "NAMESPACE",
                  "displayName": "Namespace",
                  "description": "The OpenShift Namespace where the ImageStream resides.",
                  "value": "openshift",
                  "required": true
                },
                {
                  "name": "MEMORY_LIMIT",
                  "displayName": "Memory Limit",
                  "description": "Maximum amount of memory the Perl Dancer container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "MEMORY_MYSQL_LIMIT",
                  "displayName": "Memory Limit (MySQL)",
                  "description": "Maximum amount of memory the MySQL container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "VOLUME_CAPACITY",
                  "displayName": "Volume Capacity",
                  "description": "Volume space available for data, e.g. 512Mi, 2Gi",
                  "value": "1Gi",
                  "required": true
                },
                {
                  "name": "SOURCE_REPOSITORY_URL",
                  "displayName": "Git Repository URL",
                  "description": "The URL of the repository with your application source code.",
                  "value": "https://github.com/openshift/dancer-ex.git",
                  "required": true
                },
                {
                  "name": "SOURCE_REPOSITORY_REF",
                  "displayName": "Git Reference",
                  "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
                },
                {
                  "name": "CONTEXT_DIR",
                  "displayName": "Context Directory",
                  "description": "Set this to the relative path to your project if it is not in the root of your repository."
                },
                {
                  "name": "APPLICATION_DOMAIN",
                  "displayName": "Application Hostname",
                  "description": "The exposed hostname that will route to the Dancer service, if left blank a value will be defaulted."
                },
                {
                  "name": "GITHUB_WEBHOOK_SECRET",
                  "displayName": "GitHub Webhook Secret",
                  "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{40}"
                },
                {
                  "name": "DATABASE_SERVICE_NAME",
                  "displayName": "Database Service Name",
                  "value": "database",
                  "required": true
                },
                {
                  "name": "DATABASE_USER",
                  "displayName": "Database Username",
                  "generate": "expression",
                  "from": "user[A-Z0-9]{3}"
                },
                {
                  "name": "DATABASE_PASSWORD",
                  "displayName": "Database Password",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{8}"
                },
                {
                  "name": "DATABASE_NAME",
                  "displayName": "Database Name",
                  "value": "sampledb",
                  "required": true
                },
                {
                  "name": "PERL_APACHE2_RELOAD",
                  "displayName": "Perl Module Reload",
                  "description": "Set this to \"true\" to enable automatic reloading of modified Perl modules."
                },
                {
                  "name": "SECRET_KEY_BASE",
                  "displayName": "Secret Key",
                  "description": "Your secret key for verifying the integrity of signed cookies.",
                  "generate": "expression",
                  "from": "[a-z0-9]{127}"
                },
                {
                  "name": "CPAN_MIRROR",
                  "displayName": "Custom CPAN Mirror URL",
                  "description": "The custom CPAN mirror URL"
                }
              ],
              "labels": {
                "app": "dancer-mysql-persistent",
                "template": "dancer-mysql-persistent"
              }
            },
            {
              "metadata": {
                "name": "django-psql-persistent",
                "namespace": "openshift",
                "selfLink": "/oapi/v1/namespaces/openshift/templates/django-psql-persistent",
                "uid": "60fee1c8-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "404",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "annotations": {
                  "description": "An example Django application with a PostgreSQL database. For more information about using this template, including OpenShift considerations, see https://github.com/openshift/django-ex/blob/master/README.md.",
                  "iconClass": "icon-python",
                  "openshift.io/display-name": "Django + PostgreSQL",
                  "openshift.io/documentation-url": "https://github.com/openshift/django-ex",
                  "openshift.io/long-description": "This template defines resources needed to develop a Django based application, including a build configuration, application deployment configuration, and database deployment configuration.",
                  "openshift.io/provider-display-name": "Red Hat, Inc.",
                  "openshift.io/support-url": "https://access.redhat.com",
                  "tags": "quickstart,python,django",
                  "template.openshift.io/bindable": "false"
                }
              },
              "message": "The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/openshift/django-ex/blob/master/README.md.",
              "objects": [
                {
                  "kind": "Secret",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}"
                  },
                  "stringData": {
                    "database-user": "${DATABASE_USER}",
                    "database-password": "${DATABASE_PASSWORD}",
                    "django-secret-key": "${DJANGO_SECRET_KEY}"
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Exposes and load balances the application pods",
                      "service.alpha.openshift.io/dependencies": "[{\"name\": \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "web",
                        "port": 8080,
                        "targetPort": 8080
                      }
                    ],
                    "selector": {
                      "name": "${NAME}"
                    }
                  }
                },
                {
                  "kind": "Route",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}"
                  },
                  "spec": {
                    "host": "${APPLICATION_DOMAIN}",
                    "to": {
                      "kind": "Service",
                      "name": "${NAME}"
                    }
                  }
                },
                {
                  "kind": "ImageStream",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Keeps track of changes in the application image"
                    }
                  }
                },
                {
                  "kind": "BuildConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Defines how to build the application",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "source": {
                      "type": "Git",
                      "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                      },
                      "contextDir": "${CONTEXT_DIR}"
                    },
                    "strategy": {
                      "type": "Source",
                      "sourceStrategy": {
                        "from": {
                          "kind": "ImageStreamTag",
                          "namespace": "${NAMESPACE}",
                          "name": "python:3.5"
                        },
                        "env": [
                          {
                            "name": "PIP_INDEX_URL",
                            "value": "${PIP_INDEX_URL}"
                          }
                        ]
                      }
                    },
                    "output": {
                      "to": {
                        "kind": "ImageStreamTag",
                        "name": "${NAME}:latest"
                      }
                    },
                    "triggers": [
                      {
                        "type": "ImageChange"
                      },
                      {
                        "type": "ConfigChange"
                      },
                      {
                        "type": "GitHub",
                        "github": {
                          "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                      }
                    ],
                    "postCommit": {
                      "script": "./manage.py test"
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Defines how to deploy the application server",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate"
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "django-psql-persistent"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "name": "${NAME}:latest"
                          }
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${NAME}"
                    },
                    "template": {
                      "metadata": {
                        "name": "${NAME}",
                        "labels": {
                          "name": "${NAME}"
                        }
                      },
                      "spec": {
                        "containers": [
                          {
                            "name": "django-psql-persistent",
                            "image": " ",
                            "ports": [
                              {
                                "containerPort": 8080
                              }
                            ],
                            "readinessProbe": {
                              "timeoutSeconds": 3,
                              "initialDelaySeconds": 3,
                              "httpGet": {
                                "path": "/health",
                                "port": 8080
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 3,
                              "initialDelaySeconds": 30,
                              "httpGet": {
                                "path": "/health",
                                "port": 8080
                              }
                            },
                            "env": [
                              {
                                "name": "DATABASE_SERVICE_NAME",
                                "value": "${DATABASE_SERVICE_NAME}"
                              },
                              {
                                "name": "DATABASE_ENGINE",
                                "value": "${DATABASE_ENGINE}"
                              },
                              {
                                "name": "DATABASE_NAME",
                                "value": "${DATABASE_NAME}"
                              },
                              {
                                "name": "DATABASE_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-user"
                                  }
                                }
                              },
                              {
                                "name": "DATABASE_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-password"
                                  }
                                }
                              },
                              {
                                "name": "APP_CONFIG",
                                "value": "${APP_CONFIG}"
                              },
                              {
                                "name": "DJANGO_SECRET_KEY",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "django-secret-key"
                                  }
                                }
                              }
                            ],
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_LIMIT}"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "kind": "PersistentVolumeClaim",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                      }
                    }
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "description": "Exposes the database server"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "postgresql",
                        "port": 5432,
                        "targetPort": 5432
                      }
                    ],
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "description": "Defines how to deploy the database",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate"
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "postgresql"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${NAMESPACE}",
                            "name": "postgresql:9.5"
                          }
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    },
                    "template": {
                      "metadata": {
                        "name": "${DATABASE_SERVICE_NAME}",
                        "labels": {
                          "name": "${DATABASE_SERVICE_NAME}"
                        }
                      },
                      "spec": {
                        "volumes": [
                          {
                            "name": "${DATABASE_SERVICE_NAME}-data",
                            "persistentVolumeClaim": {
                              "claimName": "${DATABASE_SERVICE_NAME}"
                            }
                          }
                        ],
                        "containers": [
                          {
                            "name": "postgresql",
                            "image": " ",
                            "ports": [
                              {
                                "containerPort": 5432
                              }
                            ],
                            "env": [
                              {
                                "name": "POSTGRESQL_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-user"
                                  }
                                }
                              },
                              {
                                "name": "POSTGRESQL_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-password"
                                  }
                                }
                              },
                              {
                                "name": "POSTGRESQL_DATABASE",
                                "value": "${DATABASE_NAME}"
                              }
                            ],
                            "volumeMounts": [
                              {
                                "name": "${DATABASE_SERVICE_NAME}-data",
                                "mountPath": "/var/lib/pgsql/data"
                              }
                            ],
                            "readinessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 5,
                              "exec": {
                                "command": [
                                  "/bin/sh",
                                  "-i",
                                  "-c",
                                  "psql -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c 'SELECT 1'"
                                ]
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 30,
                              "tcpSocket": {
                                "port": 5432
                              }
                            },
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_POSTGRESQL_LIMIT}"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "name": "NAME",
                  "displayName": "Name",
                  "description": "The name assigned to all of the frontend objects defined in this template.",
                  "value": "django-psql-persistent",
                  "required": true
                },
                {
                  "name": "NAMESPACE",
                  "displayName": "Namespace",
                  "description": "The OpenShift Namespace where the ImageStream resides.",
                  "value": "openshift",
                  "required": true
                },
                {
                  "name": "MEMORY_LIMIT",
                  "displayName": "Memory Limit",
                  "description": "Maximum amount of memory the Django container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "MEMORY_POSTGRESQL_LIMIT",
                  "displayName": "Memory Limit (PostgreSQL)",
                  "description": "Maximum amount of memory the PostgreSQL container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "VOLUME_CAPACITY",
                  "displayName": "Volume Capacity",
                  "description": "Volume space available for data, e.g. 512Mi, 2Gi",
                  "value": "1Gi",
                  "required": true
                },
                {
                  "name": "SOURCE_REPOSITORY_URL",
                  "displayName": "Git Repository URL",
                  "description": "The URL of the repository with your application source code.",
                  "value": "https://github.com/openshift/django-ex.git",
                  "required": true
                },
                {
                  "name": "SOURCE_REPOSITORY_REF",
                  "displayName": "Git Reference",
                  "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
                },
                {
                  "name": "CONTEXT_DIR",
                  "displayName": "Context Directory",
                  "description": "Set this to the relative path to your project if it is not in the root of your repository."
                },
                {
                  "name": "APPLICATION_DOMAIN",
                  "displayName": "Application Hostname",
                  "description": "The exposed hostname that will route to the Django service, if left blank a value will be defaulted."
                },
                {
                  "name": "GITHUB_WEBHOOK_SECRET",
                  "displayName": "GitHub Webhook Secret",
                  "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{40}"
                },
                {
                  "name": "DATABASE_SERVICE_NAME",
                  "displayName": "Database Service Name",
                  "value": "postgresql",
                  "required": true
                },
                {
                  "name": "DATABASE_ENGINE",
                  "displayName": "Database Engine",
                  "description": "Database engine: postgresql, mysql or sqlite (default).",
                  "value": "postgresql",
                  "required": true
                },
                {
                  "name": "DATABASE_NAME",
                  "displayName": "Database Name",
                  "value": "default",
                  "required": true
                },
                {
                  "name": "DATABASE_USER",
                  "displayName": "Database Username",
                  "value": "django",
                  "required": true
                },
                {
                  "name": "DATABASE_PASSWORD",
                  "displayName": "Database User Password",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{16}"
                },
                {
                  "name": "APP_CONFIG",
                  "displayName": "Application Configuration File Path",
                  "description": "Relative path to Gunicorn configuration file (optional)."
                },
                {
                  "name": "DJANGO_SECRET_KEY",
                  "displayName": "Django Secret Key",
                  "description": "Set this to a long random string.",
                  "generate": "expression",
                  "from": "[\\w]{50}"
                },
                {
                  "name": "PIP_INDEX_URL",
                  "displayName": "Custom PyPi Index URL",
                  "description": "The custom PyPi index URL"
                }
              ],
              "labels": {
                "app": "django-psql-persistent",
                "template": "django-psql-persistent"
              }
            },
            {
              "metadata": {
                "name": "jenkins-ephemeral",
                "namespace": "openshift",
                "selfLink": "/oapi/v1/namespaces/openshift/templates/jenkins-ephemeral",
                "uid": "60ec3b51-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "387",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "annotations": {
                  "description": "Jenkins service, without persistent storage.\n\nWARNING: Any data stored will be lost upon pod destruction. Only use this template for testing.",
                  "iconClass": "icon-jenkins",
                  "openshift.io/display-name": "Jenkins (Ephemeral)",
                  "openshift.io/documentation-url": "https://docs.openshift.org/latest/using_images/other_images/jenkins.html",
                  "openshift.io/long-description": "This template deploys a Jenkins server capable of managing OpenShift Pipeline builds and supporting OpenShift-based oauth login.  The Jenkins configuration is stored in non-persistent storage, so this configuration should be used for experimental purposes only.",
                  "openshift.io/provider-display-name": "Red Hat, Inc.",
                  "openshift.io/support-url": "https://access.redhat.com",
                  "tags": "instant-app,jenkins"
                }
              },
              "message": "A Jenkins service has been created in your project.  Log into Jenkins with your OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md contains more information about using this template.",
              "objects": [
                {
                  "kind": "Route",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${JENKINS_SERVICE_NAME}",
                    "annotations": {
                      "template.openshift.io/expose-uri": "http://{.spec.host}{.spec.path}"
                    }
                  },
                  "spec": {
                    "to": {
                      "kind": "Service",
                      "name": "${JENKINS_SERVICE_NAME}"
                    },
                    "tls": {
                      "termination": "edge",
                      "insecureEdgeTerminationPolicy": "Redirect"
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${JENKINS_SERVICE_NAME}",
                    "annotations": {
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate"
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "jenkins"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "name": "${JENKINS_IMAGE_STREAM_TAG}",
                            "namespace": "${NAMESPACE}"
                          },
                          "lastTriggeredImage": ""
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${JENKINS_SERVICE_NAME}"
                    },
                    "template": {
                      "metadata": {
                        "labels": {
                          "name": "${JENKINS_SERVICE_NAME}"
                        }
                      },
                      "spec": {
                        "serviceAccountName": "${JENKINS_SERVICE_NAME}",
                        "containers": [
                          {
                            "name": "jenkins",
                            "image": " ",
                            "readinessProbe": {
                              "timeoutSeconds": 3,
                              "initialDelaySeconds": 3,
                              "httpGet": {
                                "path": "/login",
                                "port": 8080
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 3,
                              "initialDelaySeconds": 420,
                              "failureThreshold": 30,
                              "httpGet": {
                                "path": "/login",
                                "port": 8080
                              }
                            },
                            "env": [
                              {
                                "name": "OPENSHIFT_ENABLE_OAUTH",
                                "value": "${ENABLE_OAUTH}"
                              },
                              {
                                "name": "OPENSHIFT_ENABLE_REDIRECT_PROMPT",
                                "value": "true"
                              },
                              {
                                "name": "KUBERNETES_MASTER",
                                "value": "https://kubernetes.default:443"
                              },
                              {
                                "name": "KUBERNETES_TRUST_CERTIFICATES",
                                "value": "true"
                              },
                              {
                                "name": "JENKINS_SERVICE_NAME",
                                "value": "${JENKINS_SERVICE_NAME}"
                              },
                              {
                                "name": "JNLP_SERVICE_NAME",
                                "value": "${JNLP_SERVICE_NAME}"
                              }
                            ],
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_LIMIT}"
                              }
                            },
                            "volumeMounts": [
                              {
                                "name": "${JENKINS_SERVICE_NAME}-data",
                                "mountPath": "/var/lib/jenkins"
                              }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "imagePullPolicy": "IfNotPresent",
                            "capabilities": {},
                            "securityContext": {
                              "capabilities": {},
                              "privileged": false
                            }
                          }
                        ],
                        "volumes": [
                          {
                            "name": "${JENKINS_SERVICE_NAME}-data",
                            "emptyDir": {
                              "medium": ""
                            }
                          }
                        ],
                        "restartPolicy": "Always",
                        "dnsPolicy": "ClusterFirst"
                      }
                    }
                  }
                },
                {
                  "kind": "ServiceAccount",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${JENKINS_SERVICE_NAME}",
                    "annotations": {
                      "serviceaccounts.openshift.io/oauth-redirectreference.jenkins": "{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"${JENKINS_SERVICE_NAME}\"}}"
                    }
                  }
                },
                {
                  "kind": "RoleBinding",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${JENKINS_SERVICE_NAME}_edit"
                  },
                  "groupNames": null,
                  "subjects": [
                    {
                      "kind": "ServiceAccount",
                      "name": "${JENKINS_SERVICE_NAME}"
                    }
                  ],
                  "roleRef": {
                    "name": "edit"
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${JNLP_SERVICE_NAME}"
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "agent",
                        "protocol": "TCP",
                        "port": 50000,
                        "targetPort": 50000,
                        "nodePort": 0
                      }
                    ],
                    "selector": {
                      "name": "${JENKINS_SERVICE_NAME}"
                    },
                    "type": "ClusterIP",
                    "sessionAffinity": "None"
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${JENKINS_SERVICE_NAME}",
                    "annotations": {
                      "service.alpha.openshift.io/dependencies": "[{\"name\": \"${JNLP_SERVICE_NAME}\", \"namespace\": \"\", \"kind\": \"Service\"}]",
                      "service.openshift.io/infrastructure": "true"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "web",
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": 8080,
                        "nodePort": 0
                      }
                    ],
                    "selector": {
                      "name": "${JENKINS_SERVICE_NAME}"
                    },
                    "type": "ClusterIP",
                    "sessionAffinity": "None"
                  }
                }
              ],
              "parameters": [
                {
                  "name": "JENKINS_SERVICE_NAME",
                  "displayName": "Jenkins Service Name",
                  "description": "The name of the OpenShift Service exposed for the Jenkins container.",
                  "value": "jenkins"
                },
                {
                  "name": "JNLP_SERVICE_NAME",
                  "displayName": "Jenkins JNLP Service Name",
                  "description": "The name of the service used for master/slave communication.",
                  "value": "jenkins-jnlp"
                },
                {
                  "name": "ENABLE_OAUTH",
                  "displayName": "Enable OAuth in Jenkins",
                  "description": "Whether to enable OAuth OpenShift integration. If false, the static account 'admin' will be initialized with the password 'password'.",
                  "value": "true"
                },
                {
                  "name": "MEMORY_LIMIT",
                  "displayName": "Memory Limit",
                  "description": "Maximum amount of memory the container can use.",
                  "value": "512Mi"
                },
                {
                  "name": "NAMESPACE",
                  "displayName": "Jenkins ImageStream Namespace",
                  "description": "The OpenShift Namespace where the Jenkins ImageStream resides.",
                  "value": "openshift"
                },
                {
                  "name": "JENKINS_IMAGE_STREAM_TAG",
                  "displayName": "Jenkins ImageStreamTag",
                  "description": "Name of the ImageStreamTag to be used for the Jenkins image.",
                  "value": "jenkins:latest"
                }
              ],
              "labels": {
                "app": "jenkins-ephemeral",
                "template": "jenkins-ephemeral-template"
              }
            },
            {
              "metadata": {
                "name": "jenkins-persistent",
                "namespace": "openshift",
                "selfLink": "/oapi/v1/namespaces/openshift/templates/jenkins-persistent",
                "uid": "6103c347-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "408",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "annotations": {
                  "description": "Jenkins service, with persistent storage.\n\nNOTE: You must have persistent volumes available in your cluster to use this template.",
                  "iconClass": "icon-jenkins",
                  "openshift.io/display-name": "Jenkins",
                  "openshift.io/documentation-url": "https://docs.openshift.org/latest/using_images/other_images/jenkins.html",
                  "openshift.io/long-description": "This template deploys a Jenkins server capable of managing OpenShift Pipeline builds and supporting OpenShift-based oauth login.",
                  "openshift.io/provider-display-name": "Red Hat, Inc.",
                  "openshift.io/support-url": "https://access.redhat.com",
                  "tags": "instant-app,jenkins"
                }
              },
              "message": "A Jenkins service has been created in your project.  Log into Jenkins with your OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md contains more information about using this template.",
              "objects": [
                {
                  "kind": "Route",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${JENKINS_SERVICE_NAME}",
                    "annotations": {
                      "template.openshift.io/expose-uri": "http://{.spec.host}{.spec.path}"
                    }
                  },
                  "spec": {
                    "to": {
                      "kind": "Service",
                      "name": "${JENKINS_SERVICE_NAME}"
                    },
                    "tls": {
                      "termination": "edge",
                      "insecureEdgeTerminationPolicy": "Redirect"
                    }
                  }
                },
                {
                  "kind": "PersistentVolumeClaim",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${JENKINS_SERVICE_NAME}"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                      }
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${JENKINS_SERVICE_NAME}",
                    "annotations": {
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate"
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "jenkins"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "name": "${JENKINS_IMAGE_STREAM_TAG}",
                            "namespace": "${NAMESPACE}"
                          },
                          "lastTriggeredImage": ""
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${JENKINS_SERVICE_NAME}"
                    },
                    "template": {
                      "metadata": {
                        "labels": {
                          "name": "${JENKINS_SERVICE_NAME}"
                        }
                      },
                      "spec": {
                        "serviceAccountName": "${JENKINS_SERVICE_NAME}",
                        "containers": [
                          {
                            "name": "jenkins",
                            "image": " ",
                            "readinessProbe": {
                              "timeoutSeconds": 3,
                              "initialDelaySeconds": 3,
                              "httpGet": {
                                "path": "/login",
                                "port": 8080
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 3,
                              "initialDelaySeconds": 420,
                              "failureThreshold": 30,
                              "httpGet": {
                                "path": "/login",
                                "port": 8080
                              }
                            },
                            "env": [
                              {
                                "name": "OPENSHIFT_ENABLE_OAUTH",
                                "value": "${ENABLE_OAUTH}"
                              },
                              {
                                "name": "OPENSHIFT_ENABLE_REDIRECT_PROMPT",
                                "value": "true"
                              },
                              {
                                "name": "KUBERNETES_MASTER",
                                "value": "https://kubernetes.default:443"
                              },
                              {
                                "name": "KUBERNETES_TRUST_CERTIFICATES",
                                "value": "true"
                              },
                              {
                                "name": "JENKINS_SERVICE_NAME",
                                "value": "${JENKINS_SERVICE_NAME}"
                              },
                              {
                                "name": "JNLP_SERVICE_NAME",
                                "value": "${JNLP_SERVICE_NAME}"
                              }
                            ],
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_LIMIT}"
                              }
                            },
                            "volumeMounts": [
                              {
                                "name": "${JENKINS_SERVICE_NAME}-data",
                                "mountPath": "/var/lib/jenkins"
                              }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "imagePullPolicy": "IfNotPresent",
                            "capabilities": {},
                            "securityContext": {
                              "capabilities": {},
                              "privileged": false
                            }
                          }
                        ],
                        "volumes": [
                          {
                            "name": "${JENKINS_SERVICE_NAME}-data",
                            "persistentVolumeClaim": {
                              "claimName": "${JENKINS_SERVICE_NAME}"
                            }
                          }
                        ],
                        "restartPolicy": "Always",
                        "dnsPolicy": "ClusterFirst"
                      }
                    }
                  }
                },
                {
                  "kind": "ServiceAccount",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${JENKINS_SERVICE_NAME}",
                    "annotations": {
                      "serviceaccounts.openshift.io/oauth-redirectreference.jenkins": "{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"${JENKINS_SERVICE_NAME}\"}}"
                    }
                  }
                },
                {
                  "kind": "RoleBinding",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${JENKINS_SERVICE_NAME}_edit"
                  },
                  "groupNames": null,
                  "subjects": [
                    {
                      "kind": "ServiceAccount",
                      "name": "${JENKINS_SERVICE_NAME}"
                    }
                  ],
                  "roleRef": {
                    "name": "edit"
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${JNLP_SERVICE_NAME}"
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "agent",
                        "protocol": "TCP",
                        "port": 50000,
                        "targetPort": 50000,
                        "nodePort": 0
                      }
                    ],
                    "selector": {
                      "name": "${JENKINS_SERVICE_NAME}"
                    },
                    "type": "ClusterIP",
                    "sessionAffinity": "None"
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${JENKINS_SERVICE_NAME}",
                    "annotations": {
                      "service.alpha.openshift.io/dependencies": "[{\"name\": \"${JNLP_SERVICE_NAME}\", \"namespace\": \"\", \"kind\": \"Service\"}]",
                      "service.openshift.io/infrastructure": "true"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "web",
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": 8080,
                        "nodePort": 0
                      }
                    ],
                    "selector": {
                      "name": "${JENKINS_SERVICE_NAME}"
                    },
                    "type": "ClusterIP",
                    "sessionAffinity": "None"
                  }
                }
              ],
              "parameters": [
                {
                  "name": "JENKINS_SERVICE_NAME",
                  "displayName": "Jenkins Service Name",
                  "description": "The name of the OpenShift Service exposed for the Jenkins container.",
                  "value": "jenkins"
                },
                {
                  "name": "JNLP_SERVICE_NAME",
                  "displayName": "Jenkins JNLP Service Name",
                  "description": "The name of the service used for master/slave communication.",
                  "value": "jenkins-jnlp"
                },
                {
                  "name": "ENABLE_OAUTH",
                  "displayName": "Enable OAuth in Jenkins",
                  "description": "Whether to enable OAuth OpenShift integration. If false, the static account 'admin' will be initialized with the password 'password'.",
                  "value": "true"
                },
                {
                  "name": "MEMORY_LIMIT",
                  "displayName": "Memory Limit",
                  "description": "Maximum amount of memory the container can use.",
                  "value": "512Mi"
                },
                {
                  "name": "VOLUME_CAPACITY",
                  "displayName": "Volume Capacity",
                  "description": "Volume space available for data, e.g. 512Mi, 2Gi.",
                  "value": "1Gi",
                  "required": true
                },
                {
                  "name": "NAMESPACE",
                  "displayName": "Jenkins ImageStream Namespace",
                  "description": "The OpenShift Namespace where the Jenkins ImageStream resides.",
                  "value": "openshift"
                },
                {
                  "name": "JENKINS_IMAGE_STREAM_TAG",
                  "displayName": "Jenkins ImageStreamTag",
                  "description": "Name of the ImageStreamTag to be used for the Jenkins image.",
                  "value": "jenkins:latest"
                }
              ],
              "labels": {
                "app": "jenkins-persistent",
                "template": "jenkins-persistent-template"
              }
            },
            {
              "metadata": {
                "name": "jenkins-pipeline-example",
                "namespace": "openshift",
                "selfLink": "/oapi/v1/namespaces/openshift/templates/jenkins-pipeline-example",
                "uid": "60f1181b-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "392",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "annotations": {
                  "description": "This example showcases the new Jenkins Pipeline integration in OpenShift,\nwhich performs continuous integration and deployment right on the platform.\nThe template contains a Jenkinsfile - a definition of a multi-stage CI/CD process - that\nleverages the underlying OpenShift platform for dynamic and scalable\nbuilds. OpenShift integrates the status of your pipeline builds into the web\nconsole allowing you to see your entire application lifecycle in a single view.",
                  "iconClass": "icon-jenkins",
                  "openshift.io/display-name": "Pipeline Build Example",
                  "tags": "instant-app,jenkins"
                }
              },
              "message": "A Jenkins server will be automatically instantiated in this project to manage\nthe Pipeline BuildConfig created by this template.  You will be able to log in to\nit using your OpenShift user credentials.",
              "objects": [
                {
                  "apiVersion": "v1",
                  "kind": "BuildConfig",
                  "metadata": {
                    "annotations": {
                      "pipeline.alpha.openshift.io/uses": "[{\"name\": \"${NAME}\", \"namespace\": \"\", \"kind\": \"DeploymentConfig\"}]"
                    },
                    "labels": {
                      "name": "sample-pipeline"
                    },
                    "name": "sample-pipeline"
                  },
                  "spec": {
                    "strategy": {
                      "jenkinsPipelineStrategy": {
                        "jenkinsfile": "try {\n   timeout(time: 20, unit: 'MINUTES') {\n      node('nodejs') {\n          stage('build') {\n            openshiftBuild(buildConfig: '${NAME}', showBuildLogs: 'true')\n          }\n          stage('deploy') {\n            openshiftDeploy(deploymentConfig: '${NAME}')\n          }\n        }\n   }\n} catch (err) {\n   echo \"in catch block\"\n   echo \"Caught: ${err}\"\n   currentBuild.result = 'FAILURE'\n   throw err\n}          "
                      },
                      "type": "JenkinsPipeline"
                    },
                    "triggers": [
                      {
                        "github": {
                          "secret": "secret101"
                        },
                        "type": "GitHub"
                      },
                      {
                        "generic": {
                          "secret": "secret101"
                        },
                        "type": "Generic"
                      }
                    ]
                  }
                },
                {
                  "apiVersion": "v1",
                  "kind": "Service",
                  "metadata": {
                    "annotations": {
                      "service.alpha.openshift.io/dependencies": "[{\"name\": \"${DATABASE_SERVICE_NAME}\", \"namespace\": \"\", \"kind\": \"Service\"}]"
                    },
                    "name": "${NAME}"
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "web",
                        "port": 8080,
                        "targetPort": 8080
                      }
                    ],
                    "selector": {
                      "name": "${NAME}"
                    }
                  }
                },
                {
                  "apiVersion": "v1",
                  "kind": "Route",
                  "metadata": {
                    "name": "${NAME}"
                  },
                  "spec": {
                    "host": "${APPLICATION_DOMAIN}",
                    "to": {
                      "kind": "Service",
                      "name": "${NAME}"
                    }
                  }
                },
                {
                  "apiVersion": "v1",
                  "kind": "ImageStream",
                  "metadata": {
                    "annotations": {
                      "description": "Keeps track of changes in the application image"
                    },
                    "name": "${NAME}"
                  }
                },
                {
                  "apiVersion": "v1",
                  "kind": "BuildConfig",
                  "metadata": {
                    "annotations": {
                      "description": "Defines how to build the application"
                    },
                    "name": "${NAME}"
                  },
                  "spec": {
                    "output": {
                      "to": {
                        "kind": "ImageStreamTag",
                        "name": "${NAME}:latest"
                      }
                    },
                    "postCommit": {
                      "script": "npm test"
                    },
                    "source": {
                      "contextDir": "${CONTEXT_DIR}",
                      "git": {
                        "ref": "${SOURCE_REPOSITORY_REF}",
                        "uri": "${SOURCE_REPOSITORY_URL}"
                      },
                      "type": "Git"
                    },
                    "strategy": {
                      "sourceStrategy": {
                        "env": [
                          {
                            "name": "NPM_MIRROR",
                            "value": "${NPM_MIRROR}"
                          }
                        ],
                        "from": {
                          "kind": "ImageStreamTag",
                          "name": "nodejs:4",
                          "namespace": "${NAMESPACE}"
                        }
                      },
                      "type": "Source"
                    },
                    "triggers": [
                      {
                        "github": {
                          "secret": "${GITHUB_WEBHOOK_SECRET}"
                        },
                        "type": "GitHub"
                      },
                      {
                        "generic": {
                          "secret": "${GENERIC_WEBHOOK_SECRET}"
                        },
                        "type": "Generic"
                      }
                    ]
                  }
                },
                {
                  "apiVersion": "v1",
                  "kind": "DeploymentConfig",
                  "metadata": {
                    "annotations": {
                      "description": "Defines how to deploy the application server"
                    },
                    "name": "${NAME}"
                  },
                  "spec": {
                    "replicas": 1,
                    "selector": {
                      "name": "${NAME}"
                    },
                    "strategy": {
                      "type": "Rolling"
                    },
                    "template": {
                      "metadata": {
                        "labels": {
                          "name": "${NAME}"
                        },
                        "name": "${NAME}"
                      },
                      "spec": {
                        "containers": [
                          {
                            "env": [
                              {
                                "name": "DATABASE_SERVICE_NAME",
                                "value": "${DATABASE_SERVICE_NAME}"
                              },
                              {
                                "name": "MONGODB_USER",
                                "value": "${DATABASE_USER}"
                              },
                              {
                                "name": "MONGODB_PASSWORD",
                                "value": "${DATABASE_PASSWORD}"
                              },
                              {
                                "name": "MONGODB_DATABASE",
                                "value": "${DATABASE_NAME}"
                              },
                              {
                                "name": "MONGODB_ADMIN_PASSWORD",
                                "value": "${DATABASE_ADMIN_PASSWORD}"
                              }
                            ],
                            "image": " ",
                            "livenessProbe": {
                              "httpGet": {
                                "path": "/pagecount",
                                "port": 8080
                              },
                              "initialDelaySeconds": 30,
                              "timeoutSeconds": 3
                            },
                            "name": "nodejs-mongodb-example",
                            "ports": [
                              {
                                "containerPort": 8080
                              }
                            ],
                            "readinessProbe": {
                              "httpGet": {
                                "path": "/pagecount",
                                "port": 8080
                              },
                              "initialDelaySeconds": 3,
                              "timeoutSeconds": 3
                            },
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_LIMIT}"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "triggers": [
                      {
                        "imageChangeParams": {
                          "automatic": false,
                          "containerNames": [
                            "nodejs-mongodb-example"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "name": "${NAME}:latest"
                          }
                        },
                        "type": "ImageChange"
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ]
                  }
                },
                {
                  "apiVersion": "v1",
                  "kind": "Service",
                  "metadata": {
                    "annotations": {
                      "description": "Exposes the database server"
                    },
                    "name": "${DATABASE_SERVICE_NAME}"
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "mongodb",
                        "port": 27017,
                        "targetPort": 27017
                      }
                    ],
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    }
                  }
                },
                {
                  "apiVersion": "v1",
                  "kind": "DeploymentConfig",
                  "metadata": {
                    "annotations": {
                      "description": "Defines how to deploy the database"
                    },
                    "name": "${DATABASE_SERVICE_NAME}"
                  },
                  "spec": {
                    "replicas": 1,
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    },
                    "strategy": {
                      "type": "Recreate"
                    },
                    "template": {
                      "metadata": {
                        "labels": {
                          "name": "${DATABASE_SERVICE_NAME}"
                        },
                        "name": "${DATABASE_SERVICE_NAME}"
                      },
                      "spec": {
                        "containers": [
                          {
                            "env": [
                              {
                                "name": "MONGODB_USER",
                                "value": "${DATABASE_USER}"
                              },
                              {
                                "name": "MONGODB_PASSWORD",
                                "value": "${DATABASE_PASSWORD}"
                              },
                              {
                                "name": "MONGODB_DATABASE",
                                "value": "${DATABASE_NAME}"
                              },
                              {
                                "name": "MONGODB_ADMIN_PASSWORD",
                                "value": "${DATABASE_ADMIN_PASSWORD}"
                              }
                            ],
                            "image": " ",
                            "livenessProbe": {
                              "initialDelaySeconds": 30,
                              "tcpSocket": {
                                "port": 27017
                              },
                              "timeoutSeconds": 1
                            },
                            "name": "mongodb",
                            "ports": [
                              {
                                "containerPort": 27017
                              }
                            ],
                            "readinessProbe": {
                              "exec": {
                                "command": [
                                  "/bin/sh",
                                  "-i",
                                  "-c",
                                  "mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval=\"quit()\""
                                ]
                              },
                              "initialDelaySeconds": 3,
                              "timeoutSeconds": 1
                            },
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_MONGODB_LIMIT}"
                              }
                            },
                            "volumeMounts": [
                              {
                                "mountPath": "/var/lib/mongodb/data",
                                "name": "${DATABASE_SERVICE_NAME}-data"
                              }
                            ]
                          }
                        ],
                        "volumes": [
                          {
                            "emptyDir": {
                              "medium": ""
                            },
                            "name": "${DATABASE_SERVICE_NAME}-data"
                          }
                        ]
                      }
                    },
                    "triggers": [
                      {
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "mongodb"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "name": "mongodb:3.2",
                            "namespace": "${NAMESPACE}"
                          }
                        },
                        "type": "ImageChange"
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ]
                  }
                }
              ],
              "parameters": [
                {
                  "name": "NAME",
                  "displayName": "Name",
                  "description": "The name assigned to all of the frontend objects defined in this template.",
                  "value": "nodejs-mongodb-example",
                  "required": true
                },
                {
                  "name": "APPLICATION_DOMAIN",
                  "displayName": "Application Hostname",
                  "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted."
                },
                {
                  "name": "SOURCE_REPOSITORY_URL",
                  "displayName": "Git Repository URL",
                  "description": "The URL of the repository with your application source code.",
                  "value": "https://github.com/openshift/nodejs-ex.git",
                  "required": true
                },
                {
                  "name": "DATABASE_NAME",
                  "displayName": "Database Name",
                  "value": "sampledb",
                  "required": true
                },
                {
                  "name": "DATABASE_USER",
                  "displayName": "MongoDB Username",
                  "description": "Username for MongoDB user that will be used for accessing the database.",
                  "generate": "expression",
                  "from": "user[A-Z0-9]{3}"
                },
                {
                  "name": "DATABASE_PASSWORD",
                  "displayName": "MongoDB Password",
                  "description": "Password for the MongoDB user.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{16}"
                },
                {
                  "name": "MEMORY_LIMIT",
                  "displayName": "Memory Limit",
                  "description": "Maximum amount of memory the Node.js container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "MEMORY_MONGODB_LIMIT",
                  "displayName": "Memory Limit (MongoDB)",
                  "description": "Maximum amount of memory the MongoDB container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "DATABASE_SERVICE_NAME",
                  "displayName": "Database Service Name",
                  "value": "mongodb",
                  "required": true
                },
                {
                  "name": "DATABASE_ADMIN_PASSWORD",
                  "displayName": "Database Administrator Password",
                  "description": "Password for the database admin user.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{16}"
                },
                {
                  "name": "SOURCE_REPOSITORY_REF",
                  "displayName": "Git Reference",
                  "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
                },
                {
                  "name": "CONTEXT_DIR",
                  "displayName": "Context Directory",
                  "description": "Set this to the relative path to your project if it is not in the root of your repository."
                },
                {
                  "name": "GITHUB_WEBHOOK_SECRET",
                  "displayName": "GitHub Webhook Secret",
                  "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{40}"
                },
                {
                  "name": "GENERIC_WEBHOOK_SECRET",
                  "displayName": "Generic Webhook Secret",
                  "description": "A secret string used to configure the Generic webhook.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{40}"
                },
                {
                  "name": "NPM_MIRROR",
                  "displayName": "Custom NPM Mirror URL",
                  "description": "The custom NPM mirror URL"
                },
                {
                  "name": "NAMESPACE",
                  "displayName": "Namespace",
                  "description": "The OpenShift Namespace where the NodeJS and MongoDB ImageStreams reside.",
                  "value": "openshift",
                  "required": true
                }
              ],
              "labels": {
                "template": "application-template-sample-pipeline"
              }
            },
            {
              "metadata": {
                "name": "mariadb-persistent",
                "namespace": "openshift",
                "selfLink": "/oapi/v1/namespaces/openshift/templates/mariadb-persistent",
                "uid": "60e2bb6c-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "383",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "annotations": {
                  "description": "MariaDB database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.1/README.md.\n\nNOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.",
                  "iconClass": "icon-mariadb",
                  "openshift.io/display-name": "MariaDB",
                  "openshift.io/documentation-url": "https://github.com/sclorg/mariadb-container/blob/master/10.1/README.md",
                  "openshift.io/long-description": "This template provides a standalone MariaDB server with a database created.  The database is stored on persistent storage.  The database name, username, and password are chosen via parameters when provisioning this service.",
                  "openshift.io/provider-display-name": "Red Hat, Inc.",
                  "openshift.io/support-url": "https://access.redhat.com",
                  "tags": "database,mariadb"
                }
              },
              "message": "The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n       Username: ${MYSQL_USER}\n       Password: ${MYSQL_PASSWORD}\n  Database Name: ${MYSQL_DATABASE}\n Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.1/README.md.",
              "objects": [
                {
                  "kind": "Secret",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "template.openshift.io/expose-username": "{.data['database-user']}",
                      "template.openshift.io/expose-password": "{.data['database-password']}",
                      "template.openshift.io/expose-root_password": "{.data['database-root-password']}",
                      "template.openshift.io/expose-database_name": "{.data['database-name']}"
                    }
                  },
                  "stringData": {
                    "database-user": "${MYSQL_USER}",
                    "database-password": "${MYSQL_PASSWORD}",
                    "database-root-password": "${MYSQL_ROOT_PASSWORD}",
                    "database-name": "${MYSQL_DATABASE}"
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "template.openshift.io/expose-uri": "mysql://{.spec.clusterIP}:{.spec.ports[?(.name==\"mariadb\")].port}"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "mariadb",
                        "port": 3306
                      }
                    ],
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    }
                  }
                },
                {
                  "kind": "PersistentVolumeClaim",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                      }
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate"
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "mariadb"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "name": "mariadb:10.1",
                            "namespace": "${NAMESPACE}"
                          }
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    },
                    "template": {
                      "metadata": {
                        "labels": {
                          "name": "${DATABASE_SERVICE_NAME}"
                        }
                      },
                      "spec": {
                        "containers": [
                          {
                            "name": "mariadb",
                            "image": " ",
                            "ports": [
                              {
                                "containerPort": 3306
                              }
                            ],
                            "readinessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 5,
                              "exec": {
                                "command": [
                                  "/bin/sh",
                                  "-i",
                                  "-c",
                                  "MYSQL_PWD=\"$MYSQL_PASSWORD\" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e 'SELECT 1'"
                                ]
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 30,
                              "tcpSocket": {
                                "port": 3306
                              }
                            },
                            "env": [
                              {
                                "name": "MYSQL_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-user"
                                  }
                                }
                              },
                              {
                                "name": "MYSQL_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-password"
                                  }
                                }
                              },
                              {
                                "name": "MYSQL_ROOT_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-root-password"
                                  }
                                }
                              },
                              {
                                "name": "MYSQL_DATABASE",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-name"
                                  }
                                }
                              }
                            ],
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_LIMIT}"
                              }
                            },
                            "volumeMounts": [
                              {
                                "name": "${DATABASE_SERVICE_NAME}-data",
                                "mountPath": "/var/lib/mysql/data"
                              }
                            ],
                            "imagePullPolicy": "IfNotPresent"
                          }
                        ],
                        "volumes": [
                          {
                            "name": "${DATABASE_SERVICE_NAME}-data",
                            "persistentVolumeClaim": {
                              "claimName": "${DATABASE_SERVICE_NAME}"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "name": "MEMORY_LIMIT",
                  "displayName": "Memory Limit",
                  "description": "Maximum amount of memory the container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "NAMESPACE",
                  "displayName": "Namespace",
                  "description": "The OpenShift Namespace where the ImageStream resides.",
                  "value": "openshift"
                },
                {
                  "name": "DATABASE_SERVICE_NAME",
                  "displayName": "Database Service Name",
                  "description": "The name of the OpenShift Service exposed for the database.",
                  "value": "mariadb",
                  "required": true
                },
                {
                  "name": "MYSQL_USER",
                  "displayName": "MariaDB Connection Username",
                  "description": "Username for MariaDB user that will be used for accessing the database.",
                  "generate": "expression",
                  "from": "user[A-Z0-9]{3}",
                  "required": true
                },
                {
                  "name": "MYSQL_PASSWORD",
                  "displayName": "MariaDB Connection Password",
                  "description": "Password for the MariaDB connection user.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{16}",
                  "required": true
                },
                {
                  "name": "MYSQL_ROOT_PASSWORD",
                  "displayName": "MariaDB root Password",
                  "description": "Password for the MariaDB root user.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{16}",
                  "required": true
                },
                {
                  "name": "MYSQL_DATABASE",
                  "displayName": "MariaDB Database Name",
                  "description": "Name of the MariaDB database accessed.",
                  "value": "sampledb",
                  "required": true
                },
                {
                  "name": "VOLUME_CAPACITY",
                  "displayName": "Volume Capacity",
                  "description": "Volume space available for data, e.g. 512Mi, 2Gi.",
                  "value": "1Gi",
                  "required": true
                }
              ],
              "labels": {
                "template": "mariadb-persistent-template"
              }
            },
            {
              "metadata": {
                "name": "mongodb-persistent",
                "namespace": "openshift",
                "selfLink": "/oapi/v1/namespaces/openshift/templates/mongodb-persistent",
                "uid": "60f45493-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "395",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "annotations": {
                  "description": "MongoDB database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mongodb-container/blob/master/3.2/README.md.\n\nNOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.",
                  "iconClass": "icon-mongodb",
                  "openshift.io/display-name": "MongoDB",
                  "openshift.io/documentation-url": "https://docs.openshift.org/latest/using_images/db_images/mongodb.html",
                  "openshift.io/long-description": "This template provides a standalone MongoDB server with a database created.  The database is stored on persistent storage.  The database name, username, and password are chosen via parameters when provisioning this service.",
                  "openshift.io/provider-display-name": "Red Hat, Inc.",
                  "openshift.io/support-url": "https://access.redhat.com",
                  "tags": "database,mongodb"
                }
              },
              "message": "The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n       Username: ${MONGODB_USER}\n       Password: ${MONGODB_PASSWORD}\n  Database Name: ${MONGODB_DATABASE}\n Connection URL: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${DATABASE_SERVICE_NAME}/${MONGODB_DATABASE}\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mongodb-container/blob/master/3.2/README.md.",
              "objects": [
                {
                  "kind": "Secret",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "template.openshift.io/expose-username": "{.data['database-user']}",
                      "template.openshift.io/expose-password": "{.data['database-password']}",
                      "template.openshift.io/expose-admin_password": "{.data['database-admin-password']}",
                      "template.openshift.io/expose-database_name": "{.data['database-name']}"
                    }
                  },
                  "stringData": {
                    "database-user": "${MONGODB_USER}",
                    "database-password": "${MONGODB_PASSWORD}",
                    "database-admin-password": "${MONGODB_ADMIN_PASSWORD}",
                    "database-name": "${MONGODB_DATABASE}"
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "template.openshift.io/expose-uri": "mongodb://{.spec.clusterIP}:{.spec.ports[?(.name==\"mongo\")].port}"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "mongo",
                        "protocol": "TCP",
                        "port": 27017,
                        "targetPort": 27017,
                        "nodePort": 0
                      }
                    ],
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    },
                    "type": "ClusterIP",
                    "sessionAffinity": "None"
                  },
                  "status": {
                    "loadBalancer": {}
                  }
                },
                {
                  "kind": "PersistentVolumeClaim",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                      }
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate"
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "mongodb"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "name": "mongodb:${MONGODB_VERSION}",
                            "namespace": "${NAMESPACE}"
                          },
                          "lastTriggeredImage": ""
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    },
                    "template": {
                      "metadata": {
                        "labels": {
                          "name": "${DATABASE_SERVICE_NAME}"
                        }
                      },
                      "spec": {
                        "containers": [
                          {
                            "name": "mongodb",
                            "image": " ",
                            "ports": [
                              {
                                "containerPort": 27017,
                                "protocol": "TCP"
                              }
                            ],
                            "readinessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 3,
                              "exec": {
                                "command": [
                                  "/bin/sh",
                                  "-i",
                                  "-c",
                                  "mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval=\"quit()\""
                                ]
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 30,
                              "tcpSocket": {
                                "port": 27017
                              }
                            },
                            "env": [
                              {
                                "name": "MONGODB_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-user"
                                  }
                                }
                              },
                              {
                                "name": "MONGODB_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-password"
                                  }
                                }
                              },
                              {
                                "name": "MONGODB_ADMIN_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-admin-password"
                                  }
                                }
                              },
                              {
                                "name": "MONGODB_DATABASE",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-name"
                                  }
                                }
                              }
                            ],
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_LIMIT}"
                              }
                            },
                            "volumeMounts": [
                              {
                                "name": "${DATABASE_SERVICE_NAME}-data",
                                "mountPath": "/var/lib/mongodb/data"
                              }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "imagePullPolicy": "IfNotPresent",
                            "capabilities": {},
                            "securityContext": {
                              "capabilities": {},
                              "privileged": false
                            }
                          }
                        ],
                        "volumes": [
                          {
                            "name": "${DATABASE_SERVICE_NAME}-data",
                            "persistentVolumeClaim": {
                              "claimName": "${DATABASE_SERVICE_NAME}"
                            }
                          }
                        ],
                        "restartPolicy": "Always",
                        "dnsPolicy": "ClusterFirst"
                      }
                    }
                  },
                  "status": {}
                }
              ],
              "parameters": [
                {
                  "name": "MEMORY_LIMIT",
                  "displayName": "Memory Limit",
                  "description": "Maximum amount of memory the container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "NAMESPACE",
                  "displayName": "Namespace",
                  "description": "The OpenShift Namespace where the ImageStream resides.",
                  "value": "openshift"
                },
                {
                  "name": "DATABASE_SERVICE_NAME",
                  "displayName": "Database Service Name",
                  "description": "The name of the OpenShift Service exposed for the database.",
                  "value": "mongodb",
                  "required": true
                },
                {
                  "name": "MONGODB_USER",
                  "displayName": "MongoDB Connection Username",
                  "description": "Username for MongoDB user that will be used for accessing the database.",
                  "generate": "expression",
                  "from": "user[A-Z0-9]{3}",
                  "required": true
                },
                {
                  "name": "MONGODB_PASSWORD",
                  "displayName": "MongoDB Connection Password",
                  "description": "Password for the MongoDB connection user.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{16}",
                  "required": true
                },
                {
                  "name": "MONGODB_DATABASE",
                  "displayName": "MongoDB Database Name",
                  "description": "Name of the MongoDB database accessed.",
                  "value": "sampledb",
                  "required": true
                },
                {
                  "name": "MONGODB_ADMIN_PASSWORD",
                  "displayName": "MongoDB Admin Password",
                  "description": "Password for the database admin user.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{16}",
                  "required": true
                },
                {
                  "name": "VOLUME_CAPACITY",
                  "displayName": "Volume Capacity",
                  "description": "Volume space available for data, e.g. 512Mi, 2Gi.",
                  "value": "1Gi",
                  "required": true
                },
                {
                  "name": "MONGODB_VERSION",
                  "displayName": "Version of MongoDB Image",
                  "description": "Version of MongoDB image to be used (2.4, 2.6, 3.2 or latest).",
                  "value": "3.2",
                  "required": true
                }
              ],
              "labels": {
                "template": "mongodb-persistent-template"
              }
            },
            {
              "metadata": {
                "name": "mysql-persistent",
                "namespace": "openshift",
                "selfLink": "/oapi/v1/namespaces/openshift/templates/mysql-persistent",
                "uid": "60f7c292-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "398",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "annotations": {
                  "description": "MySQL database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/5.7/README.md.\n\nNOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.",
                  "iconClass": "icon-mysql-database",
                  "openshift.io/display-name": "MySQL",
                  "openshift.io/documentation-url": "https://docs.openshift.org/latest/using_images/db_images/mysql.html",
                  "openshift.io/long-description": "This template provides a standalone MySQL server with a database created.  The database is stored on persistent storage.  The database name, username, and password are chosen via parameters when provisioning this service.",
                  "openshift.io/provider-display-name": "Red Hat, Inc.",
                  "openshift.io/support-url": "https://access.redhat.com",
                  "tags": "database,mysql"
                }
              },
              "message": "The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n       Username: ${MYSQL_USER}\n       Password: ${MYSQL_PASSWORD}\n  Database Name: ${MYSQL_DATABASE}\n Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/5.7/README.md.",
              "objects": [
                {
                  "kind": "Secret",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "template.openshift.io/expose-username": "{.data['database-user']}",
                      "template.openshift.io/expose-password": "{.data['database-password']}",
                      "template.openshift.io/expose-root_password": "{.data['database-root-password']}",
                      "template.openshift.io/expose-database_name": "{.data['database-name']}"
                    }
                  },
                  "stringData": {
                    "database-user": "${MYSQL_USER}",
                    "database-password": "${MYSQL_PASSWORD}",
                    "database-root-password": "${MYSQL_ROOT_PASSWORD}",
                    "database-name": "${MYSQL_DATABASE}"
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "template.openshift.io/expose-uri": "mysql://{.spec.clusterIP}:{.spec.ports[?(.name==\"mysql\")].port}"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "mysql",
                        "port": 3306
                      }
                    ],
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    }
                  }
                },
                {
                  "kind": "PersistentVolumeClaim",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                      }
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate"
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "mysql"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "name": "mysql:${MYSQL_VERSION}",
                            "namespace": "${NAMESPACE}"
                          }
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    },
                    "template": {
                      "metadata": {
                        "labels": {
                          "name": "${DATABASE_SERVICE_NAME}"
                        }
                      },
                      "spec": {
                        "containers": [
                          {
                            "name": "mysql",
                            "image": " ",
                            "ports": [
                              {
                                "containerPort": 3306
                              }
                            ],
                            "readinessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 5,
                              "exec": {
                                "command": [
                                  "/bin/sh",
                                  "-i",
                                  "-c",
                                  "MYSQL_PWD=\"$MYSQL_PASSWORD\" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e 'SELECT 1'"
                                ]
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 30,
                              "tcpSocket": {
                                "port": 3306
                              }
                            },
                            "env": [
                              {
                                "name": "MYSQL_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-user"
                                  }
                                }
                              },
                              {
                                "name": "MYSQL_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-password"
                                  }
                                }
                              },
                              {
                                "name": "MYSQL_ROOT_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-root-password"
                                  }
                                }
                              },
                              {
                                "name": "MYSQL_DATABASE",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-name"
                                  }
                                }
                              }
                            ],
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_LIMIT}"
                              }
                            },
                            "volumeMounts": [
                              {
                                "name": "${DATABASE_SERVICE_NAME}-data",
                                "mountPath": "/var/lib/mysql/data"
                              }
                            ],
                            "imagePullPolicy": "IfNotPresent"
                          }
                        ],
                        "volumes": [
                          {
                            "name": "${DATABASE_SERVICE_NAME}-data",
                            "persistentVolumeClaim": {
                              "claimName": "${DATABASE_SERVICE_NAME}"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "name": "MEMORY_LIMIT",
                  "displayName": "Memory Limit",
                  "description": "Maximum amount of memory the container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "NAMESPACE",
                  "displayName": "Namespace",
                  "description": "The OpenShift Namespace where the ImageStream resides.",
                  "value": "openshift"
                },
                {
                  "name": "DATABASE_SERVICE_NAME",
                  "displayName": "Database Service Name",
                  "description": "The name of the OpenShift Service exposed for the database.",
                  "value": "mysql",
                  "required": true
                },
                {
                  "name": "MYSQL_USER",
                  "displayName": "MySQL Connection Username",
                  "description": "Username for MySQL user that will be used for accessing the database.",
                  "generate": "expression",
                  "from": "user[A-Z0-9]{3}",
                  "required": true
                },
                {
                  "name": "MYSQL_PASSWORD",
                  "displayName": "MySQL Connection Password",
                  "description": "Password for the MySQL connection user.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{16}",
                  "required": true
                },
                {
                  "name": "MYSQL_ROOT_PASSWORD",
                  "displayName": "MySQL root user Password",
                  "description": "Password for the MySQL root user.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{16}",
                  "required": true
                },
                {
                  "name": "MYSQL_DATABASE",
                  "displayName": "MySQL Database Name",
                  "description": "Name of the MySQL database accessed.",
                  "value": "sampledb",
                  "required": true
                },
                {
                  "name": "VOLUME_CAPACITY",
                  "displayName": "Volume Capacity",
                  "description": "Volume space available for data, e.g. 512Mi, 2Gi.",
                  "value": "1Gi",
                  "required": true
                },
                {
                  "name": "MYSQL_VERSION",
                  "displayName": "Version of MySQL Image",
                  "description": "Version of MySQL image to be used (5.5, 5.6, 5.7, or latest).",
                  "value": "5.7",
                  "required": true
                }
              ],
              "labels": {
                "template": "mysql-persistent-template"
              }
            },
            {
              "metadata": {
                "name": "nodejs-mongo-persistent",
                "namespace": "openshift",
                "selfLink": "/oapi/v1/namespaces/openshift/templates/nodejs-mongo-persistent",
                "uid": "60ea666b-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "386",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "annotations": {
                  "description": "An example Node.js application with a MongoDB database. For more information about using this template, including OpenShift considerations, see https://github.com/openshift/nodejs-ex/blob/master/README.md.",
                  "iconClass": "icon-nodejs",
                  "openshift.io/display-name": "Node.js + MongoDB",
                  "openshift.io/documentation-url": "https://github.com/openshift/nodejs-ex",
                  "openshift.io/long-description": "This template defines resources needed to develop a NodeJS application, including a build configuration, application deployment configuration, and database deployment configuration.",
                  "openshift.io/provider-display-name": "Red Hat, Inc.",
                  "openshift.io/support-url": "https://access.redhat.com",
                  "tags": "quickstart,nodejs",
                  "template.openshift.io/bindable": "false"
                }
              },
              "message": "The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/openshift/nodejs-ex/blob/master/README.md.",
              "objects": [
                {
                  "kind": "Secret",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}"
                  },
                  "stringData": {
                    "database-user": "${DATABASE_USER}",
                    "database-password": "${DATABASE_PASSWORD}",
                    "database-admin-password": "${DATABASE_ADMIN_PASSWORD}"
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Exposes and load balances the application pods",
                      "service.alpha.openshift.io/dependencies": "[{\"name\": \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "web",
                        "port": 8080,
                        "targetPort": 8080
                      }
                    ],
                    "selector": {
                      "name": "${NAME}"
                    }
                  }
                },
                {
                  "kind": "Route",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}"
                  },
                  "spec": {
                    "host": "${APPLICATION_DOMAIN}",
                    "to": {
                      "kind": "Service",
                      "name": "${NAME}"
                    }
                  }
                },
                {
                  "kind": "ImageStream",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Keeps track of changes in the application image"
                    }
                  }
                },
                {
                  "kind": "BuildConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Defines how to build the application",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "source": {
                      "type": "Git",
                      "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                      },
                      "contextDir": "${CONTEXT_DIR}"
                    },
                    "strategy": {
                      "type": "Source",
                      "sourceStrategy": {
                        "from": {
                          "kind": "ImageStreamTag",
                          "namespace": "${NAMESPACE}",
                          "name": "nodejs:6"
                        },
                        "env": [
                          {
                            "name": "NPM_MIRROR",
                            "value": "${NPM_MIRROR}"
                          }
                        ]
                      }
                    },
                    "output": {
                      "to": {
                        "kind": "ImageStreamTag",
                        "name": "${NAME}:latest"
                      }
                    },
                    "triggers": [
                      {
                        "type": "ImageChange"
                      },
                      {
                        "type": "ConfigChange"
                      },
                      {
                        "type": "GitHub",
                        "github": {
                          "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                      },
                      {
                        "type": "Generic",
                        "generic": {
                          "secret": "${GENERIC_WEBHOOK_SECRET}"
                        }
                      }
                    ],
                    "postCommit": {
                      "script": "npm test"
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Defines how to deploy the application server",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate"
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "nodejs-mongo-persistent"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "name": "${NAME}:latest"
                          }
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${NAME}"
                    },
                    "template": {
                      "metadata": {
                        "name": "${NAME}",
                        "labels": {
                          "name": "${NAME}"
                        }
                      },
                      "spec": {
                        "containers": [
                          {
                            "name": "nodejs-mongo-persistent",
                            "image": " ",
                            "ports": [
                              {
                                "containerPort": 8080
                              }
                            ],
                            "env": [
                              {
                                "name": "DATABASE_SERVICE_NAME",
                                "value": "${DATABASE_SERVICE_NAME}"
                              },
                              {
                                "name": "MONGODB_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-user"
                                  }
                                }
                              },
                              {
                                "name": "MONGODB_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-password"
                                  }
                                }
                              },
                              {
                                "name": "MONGODB_DATABASE",
                                "value": "${DATABASE_NAME}"
                              },
                              {
                                "name": "MONGODB_ADMIN_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-admin-password"
                                  }
                                }
                              }
                            ],
                            "readinessProbe": {
                              "timeoutSeconds": 3,
                              "initialDelaySeconds": 3,
                              "httpGet": {
                                "path": "/pagecount",
                                "port": 8080
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 3,
                              "initialDelaySeconds": 30,
                              "httpGet": {
                                "path": "/pagecount",
                                "port": 8080
                              }
                            },
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_LIMIT}"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "kind": "PersistentVolumeClaim",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                      }
                    }
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "description": "Exposes the database server"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "mongodb",
                        "port": 27017,
                        "targetPort": 27017
                      }
                    ],
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "description": "Defines how to deploy the database",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate"
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "mongodb"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${NAMESPACE}",
                            "name": "mongodb:3.2"
                          }
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    },
                    "template": {
                      "metadata": {
                        "name": "${DATABASE_SERVICE_NAME}",
                        "labels": {
                          "name": "${DATABASE_SERVICE_NAME}"
                        }
                      },
                      "spec": {
                        "containers": [
                          {
                            "name": "mongodb",
                            "image": " ",
                            "ports": [
                              {
                                "containerPort": 27017
                              }
                            ],
                            "env": [
                              {
                                "name": "MONGODB_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-user"
                                  }
                                }
                              },
                              {
                                "name": "MONGODB_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-password"
                                  }
                                }
                              },
                              {
                                "name": "MONGODB_DATABASE",
                                "value": "${DATABASE_NAME}"
                              },
                              {
                                "name": "MONGODB_ADMIN_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-admin-password"
                                  }
                                }
                              }
                            ],
                            "readinessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 3,
                              "exec": {
                                "command": [
                                  "/bin/sh",
                                  "-i",
                                  "-c",
                                  "mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval=\"quit()\""
                                ]
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 30,
                              "tcpSocket": {
                                "port": 27017
                              }
                            },
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_MONGODB_LIMIT}"
                              }
                            },
                            "volumeMounts": [
                              {
                                "name": "${DATABASE_SERVICE_NAME}-data",
                                "mountPath": "/var/lib/mongodb/data"
                              }
                            ]
                          }
                        ],
                        "volumes": [
                          {
                            "name": "${DATABASE_SERVICE_NAME}-data",
                            "persistentVolumeClaim": {
                              "claimName": "${DATABASE_SERVICE_NAME}"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "name": "NAME",
                  "displayName": "Name",
                  "description": "The name assigned to all of the frontend objects defined in this template.",
                  "value": "nodejs-mongo-persistent",
                  "required": true
                },
                {
                  "name": "NAMESPACE",
                  "displayName": "Namespace",
                  "description": "The OpenShift Namespace where the ImageStream resides.",
                  "value": "openshift",
                  "required": true
                },
                {
                  "name": "MEMORY_LIMIT",
                  "displayName": "Memory Limit",
                  "description": "Maximum amount of memory the Node.js container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "MEMORY_MONGODB_LIMIT",
                  "displayName": "Memory Limit (MongoDB)",
                  "description": "Maximum amount of memory the MongoDB container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "VOLUME_CAPACITY",
                  "displayName": "Volume Capacity",
                  "description": "Volume space available for data, e.g. 512Mi, 2Gi",
                  "value": "1Gi",
                  "required": true
                },
                {
                  "name": "SOURCE_REPOSITORY_URL",
                  "displayName": "Git Repository URL",
                  "description": "The URL of the repository with your application source code.",
                  "value": "https://github.com/openshift/nodejs-ex.git",
                  "required": true
                },
                {
                  "name": "SOURCE_REPOSITORY_REF",
                  "displayName": "Git Reference",
                  "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
                },
                {
                  "name": "CONTEXT_DIR",
                  "displayName": "Context Directory",
                  "description": "Set this to the relative path to your project if it is not in the root of your repository."
                },
                {
                  "name": "APPLICATION_DOMAIN",
                  "displayName": "Application Hostname",
                  "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted."
                },
                {
                  "name": "GITHUB_WEBHOOK_SECRET",
                  "displayName": "GitHub Webhook Secret",
                  "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{40}"
                },
                {
                  "name": "GENERIC_WEBHOOK_SECRET",
                  "displayName": "Generic Webhook Secret",
                  "description": "A secret string used to configure the Generic webhook.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{40}"
                },
                {
                  "name": "DATABASE_SERVICE_NAME",
                  "displayName": "Database Service Name",
                  "value": "mongodb",
                  "required": true
                },
                {
                  "name": "DATABASE_USER",
                  "displayName": "MongoDB Username",
                  "description": "Username for MongoDB user that will be used for accessing the database.",
                  "generate": "expression",
                  "from": "user[A-Z0-9]{3}"
                },
                {
                  "name": "DATABASE_PASSWORD",
                  "displayName": "MongoDB Password",
                  "description": "Password for the MongoDB user.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{16}"
                },
                {
                  "name": "DATABASE_NAME",
                  "displayName": "Database Name",
                  "value": "sampledb",
                  "required": true
                },
                {
                  "name": "DATABASE_ADMIN_PASSWORD",
                  "displayName": "Database Administrator Password",
                  "description": "Password for the database admin user.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{16}"
                },
                {
                  "name": "NPM_MIRROR",
                  "displayName": "Custom NPM Mirror URL",
                  "description": "The custom NPM mirror URL"
                }
              ],
              "labels": {
                "app": "nodejs-mongo-persistent",
                "template": "nodejs-mongo-persistent"
              }
            },
            {
              "metadata": {
                "name": "postgresql-persistent",
                "namespace": "openshift",
                "selfLink": "/oapi/v1/namespaces/openshift/templates/postgresql-persistent",
                "uid": "60fa9fae-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "402",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "annotations": {
                  "description": "PostgreSQL database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/blob/master/9.5.\n\nNOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.",
                  "iconClass": "icon-postgresql",
                  "openshift.io/display-name": "PostgreSQL",
                  "openshift.io/documentation-url": "https://docs.openshift.org/latest/using_images/db_images/postgresql.html",
                  "openshift.io/long-description": "This template provides a standalone PostgreSQL server with a database created.  The database is stored on persistent storage.  The database name, username, and password are chosen via parameters when provisioning this service.",
                  "openshift.io/provider-display-name": "Red Hat, Inc.",
                  "openshift.io/support-url": "https://access.redhat.com",
                  "tags": "database,postgresql"
                }
              },
              "message": "The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n       Username: ${POSTGRESQL_USER}\n       Password: ${POSTGRESQL_PASSWORD}\n  Database Name: ${POSTGRESQL_DATABASE}\n Connection URL: postgresql://${DATABASE_SERVICE_NAME}:5432/\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/blob/master/9.5.",
              "objects": [
                {
                  "kind": "Secret",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "template.openshift.io/expose-username": "{.data['database-user']}",
                      "template.openshift.io/expose-password": "{.data['database-password']}",
                      "template.openshift.io/expose-database_name": "{.data['database-name']}"
                    }
                  },
                  "stringData": {
                    "database-user": "${POSTGRESQL_USER}",
                    "database-password": "${POSTGRESQL_PASSWORD}",
                    "database-name": "${POSTGRESQL_DATABASE}"
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "template.openshift.io/expose-uri": "postgres://{.spec.clusterIP}:{.spec.ports[?(.name==\"postgresql\")].port}"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "postgresql",
                        "protocol": "TCP",
                        "port": 5432,
                        "targetPort": 5432,
                        "nodePort": 0
                      }
                    ],
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    },
                    "type": "ClusterIP",
                    "sessionAffinity": "None"
                  },
                  "status": {
                    "loadBalancer": {}
                  }
                },
                {
                  "kind": "PersistentVolumeClaim",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                      }
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate"
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "postgresql"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "name": "postgresql:${POSTGRESQL_VERSION}",
                            "namespace": "${NAMESPACE}"
                          },
                          "lastTriggeredImage": ""
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    },
                    "template": {
                      "metadata": {
                        "labels": {
                          "name": "${DATABASE_SERVICE_NAME}"
                        }
                      },
                      "spec": {
                        "containers": [
                          {
                            "name": "postgresql",
                            "image": " ",
                            "ports": [
                              {
                                "containerPort": 5432,
                                "protocol": "TCP"
                              }
                            ],
                            "readinessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 5,
                              "exec": {
                                "command": [
                                  "/bin/sh",
                                  "-i",
                                  "-c",
                                  "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"
                                ]
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 30,
                              "tcpSocket": {
                                "port": 5432
                              }
                            },
                            "env": [
                              {
                                "name": "POSTGRESQL_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-user"
                                  }
                                }
                              },
                              {
                                "name": "POSTGRESQL_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-password"
                                  }
                                }
                              },
                              {
                                "name": "POSTGRESQL_DATABASE",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${DATABASE_SERVICE_NAME}",
                                    "key": "database-name"
                                  }
                                }
                              }
                            ],
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_LIMIT}"
                              }
                            },
                            "volumeMounts": [
                              {
                                "name": "${DATABASE_SERVICE_NAME}-data",
                                "mountPath": "/var/lib/pgsql/data"
                              }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "imagePullPolicy": "IfNotPresent",
                            "capabilities": {},
                            "securityContext": {
                              "capabilities": {},
                              "privileged": false
                            }
                          }
                        ],
                        "volumes": [
                          {
                            "name": "${DATABASE_SERVICE_NAME}-data",
                            "persistentVolumeClaim": {
                              "claimName": "${DATABASE_SERVICE_NAME}"
                            }
                          }
                        ],
                        "restartPolicy": "Always",
                        "dnsPolicy": "ClusterFirst"
                      }
                    }
                  },
                  "status": {}
                }
              ],
              "parameters": [
                {
                  "name": "MEMORY_LIMIT",
                  "displayName": "Memory Limit",
                  "description": "Maximum amount of memory the container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "NAMESPACE",
                  "displayName": "Namespace",
                  "description": "The OpenShift Namespace where the ImageStream resides.",
                  "value": "openshift"
                },
                {
                  "name": "DATABASE_SERVICE_NAME",
                  "displayName": "Database Service Name",
                  "description": "The name of the OpenShift Service exposed for the database.",
                  "value": "postgresql",
                  "required": true
                },
                {
                  "name": "POSTGRESQL_USER",
                  "displayName": "PostgreSQL Connection Username",
                  "description": "Username for PostgreSQL user that will be used for accessing the database.",
                  "generate": "expression",
                  "from": "user[A-Z0-9]{3}",
                  "required": true
                },
                {
                  "name": "POSTGRESQL_PASSWORD",
                  "displayName": "PostgreSQL Connection Password",
                  "description": "Password for the PostgreSQL connection user.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{16}",
                  "required": true
                },
                {
                  "name": "POSTGRESQL_DATABASE",
                  "displayName": "PostgreSQL Database Name",
                  "description": "Name of the PostgreSQL database accessed.",
                  "value": "sampledb",
                  "required": true
                },
                {
                  "name": "VOLUME_CAPACITY",
                  "displayName": "Volume Capacity",
                  "description": "Volume space available for data, e.g. 512Mi, 2Gi.",
                  "value": "1Gi",
                  "required": true
                },
                {
                  "name": "POSTGRESQL_VERSION",
                  "displayName": "Version of PostgreSQL Image",
                  "description": "Version of PostgreSQL image to be used (9.2, 9.4, 9.5 or latest).",
                  "value": "9.5",
                  "required": true
                }
              ],
              "labels": {
                "template": "postgresql-persistent-template"
              }
            },
            {
              "metadata": {
                "name": "rails-pgsql-persistent",
                "namespace": "openshift",
                "selfLink": "/oapi/v1/namespaces/openshift/templates/rails-pgsql-persistent",
                "uid": "610174e7-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "407",
                "creationTimestamp": "2017-12-11T13:15:37Z",
                "annotations": {
                  "description": "An example Rails application with a PostgreSQL database. For more information about using this template, including OpenShift considerations, see https://github.com/openshift/rails-ex/blob/master/README.md.",
                  "iconClass": "icon-ruby",
                  "openshift.io/display-name": "Rails + PostgreSQL",
                  "openshift.io/documentation-url": "https://github.com/openshift/rails-ex",
                  "openshift.io/long-description": "This template defines resources needed to develop a Rails application, including a build configuration, application deployment configuration, and database deployment configuration.",
                  "openshift.io/provider-display-name": "Red Hat, Inc.",
                  "openshift.io/support-url": "https://access.redhat.com",
                  "tags": "quickstart,ruby,rails",
                  "template.openshift.io/bindable": "false"
                }
              },
              "message": "The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/openshift/rails-ex/blob/master/README.md.",
              "objects": [
                {
                  "kind": "Secret",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}"
                  },
                  "stringData": {
                    "database-user": "${DATABASE_USER}",
                    "database-password": "${DATABASE_PASSWORD}",
                    "application-user": "${APPLICATION_USER}",
                    "application-password": "${APPLICATION_PASSWORD}",
                    "keybase": "${SECRET_KEY_BASE}"
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Exposes and load balances the application pods",
                      "service.alpha.openshift.io/dependencies": "[{\"name\": \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "web",
                        "port": 8080,
                        "targetPort": 8080
                      }
                    ],
                    "selector": {
                      "name": "${NAME}"
                    }
                  }
                },
                {
                  "kind": "Route",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}"
                  },
                  "spec": {
                    "host": "${APPLICATION_DOMAIN}",
                    "to": {
                      "kind": "Service",
                      "name": "${NAME}"
                    }
                  }
                },
                {
                  "kind": "ImageStream",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Keeps track of changes in the application image"
                    }
                  }
                },
                {
                  "kind": "BuildConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Defines how to build the application",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "source": {
                      "type": "Git",
                      "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                      },
                      "contextDir": "${CONTEXT_DIR}"
                    },
                    "strategy": {
                      "type": "Source",
                      "sourceStrategy": {
                        "from": {
                          "kind": "ImageStreamTag",
                          "namespace": "${NAMESPACE}",
                          "name": "ruby:2.3"
                        },
                        "env": [
                          {
                            "name": "RUBYGEM_MIRROR",
                            "value": "${RUBYGEM_MIRROR}"
                          }
                        ]
                      }
                    },
                    "output": {
                      "to": {
                        "kind": "ImageStreamTag",
                        "name": "${NAME}:latest"
                      }
                    },
                    "triggers": [
                      {
                        "type": "ImageChange"
                      },
                      {
                        "type": "ConfigChange"
                      },
                      {
                        "type": "GitHub",
                        "github": {
                          "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                      }
                    ],
                    "postCommit": {
                      "script": "bundle exec rake test"
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${NAME}",
                    "annotations": {
                      "description": "Defines how to deploy the application server",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate",
                      "recreateParams": {
                        "pre": {
                          "failurePolicy": "Abort",
                          "execNewPod": {
                            "command": [
                              "./migrate-database.sh"
                            ],
                            "containerName": "${NAME}"
                          }
                        }
                      }
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "${NAME}"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "name": "${NAME}:latest"
                          }
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${NAME}"
                    },
                    "template": {
                      "metadata": {
                        "name": "${NAME}",
                        "labels": {
                          "name": "${NAME}"
                        }
                      },
                      "spec": {
                        "containers": [
                          {
                            "name": "${NAME}",
                            "image": " ",
                            "ports": [
                              {
                                "containerPort": 8080
                              }
                            ],
                            "readinessProbe": {
                              "timeoutSeconds": 3,
                              "initialDelaySeconds": 5,
                              "httpGet": {
                                "path": "/articles",
                                "port": 8080
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 3,
                              "initialDelaySeconds": 10,
                              "httpGet": {
                                "path": "/articles",
                                "port": 8080
                              }
                            },
                            "env": [
                              {
                                "name": "DATABASE_SERVICE_NAME",
                                "value": "${DATABASE_SERVICE_NAME}"
                              },
                              {
                                "name": "POSTGRESQL_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-user"
                                  }
                                }
                              },
                              {
                                "name": "POSTGRESQL_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-password"
                                  }
                                }
                              },
                              {
                                "name": "SECRET_KEY_BASE",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "keybase"
                                  }
                                }
                              },
                              {
                                "name": "POSTGRESQL_DATABASE",
                                "value": "${DATABASE_NAME}"
                              },
                              {
                                "name": "POSTGRESQL_MAX_CONNECTIONS",
                                "value": "${POSTGRESQL_MAX_CONNECTIONS}"
                              },
                              {
                                "name": "POSTGRESQL_SHARED_BUFFERS",
                                "value": "${POSTGRESQL_SHARED_BUFFERS}"
                              },
                              {
                                "name": "APPLICATION_DOMAIN",
                                "value": "${APPLICATION_DOMAIN}"
                              },
                              {
                                "name": "APPLICATION_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "application-user"
                                  }
                                }
                              },
                              {
                                "name": "APPLICATION_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "application-password"
                                  }
                                }
                              },
                              {
                                "name": "RAILS_ENV",
                                "value": "${RAILS_ENV}"
                              }
                            ],
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_LIMIT}"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "kind": "PersistentVolumeClaim",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                      }
                    }
                  }
                },
                {
                  "kind": "Service",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "description": "Exposes the database server"
                    }
                  },
                  "spec": {
                    "ports": [
                      {
                        "name": "postgresql",
                        "port": 5432,
                        "targetPort": 5432
                      }
                    ],
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    }
                  }
                },
                {
                  "kind": "DeploymentConfig",
                  "apiVersion": "v1",
                  "metadata": {
                    "name": "${DATABASE_SERVICE_NAME}",
                    "annotations": {
                      "description": "Defines how to deploy the database",
                      "template.alpha.openshift.io/wait-for-ready": "true"
                    }
                  },
                  "spec": {
                    "strategy": {
                      "type": "Recreate"
                    },
                    "triggers": [
                      {
                        "type": "ImageChange",
                        "imageChangeParams": {
                          "automatic": true,
                          "containerNames": [
                            "postgresql"
                          ],
                          "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${NAMESPACE}",
                            "name": "postgresql:9.5"
                          }
                        }
                      },
                      {
                        "type": "ConfigChange"
                      }
                    ],
                    "replicas": 1,
                    "selector": {
                      "name": "${DATABASE_SERVICE_NAME}"
                    },
                    "template": {
                      "metadata": {
                        "name": "${DATABASE_SERVICE_NAME}",
                        "labels": {
                          "name": "${DATABASE_SERVICE_NAME}"
                        }
                      },
                      "spec": {
                        "volumes": [
                          {
                            "name": "${DATABASE_SERVICE_NAME}-data",
                            "persistentVolumeClaim": {
                              "claimName": "${DATABASE_SERVICE_NAME}"
                            }
                          }
                        ],
                        "containers": [
                          {
                            "name": "postgresql",
                            "image": " ",
                            "ports": [
                              {
                                "containerPort": 5432
                              }
                            ],
                            "readinessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 5,
                              "exec": {
                                "command": [
                                  "/bin/sh",
                                  "-i",
                                  "-c",
                                  "psql -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c 'SELECT 1'"
                                ]
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 30,
                              "tcpSocket": {
                                "port": 5432
                              }
                            },
                            "volumeMounts": [
                              {
                                "name": "${DATABASE_SERVICE_NAME}-data",
                                "mountPath": "/var/lib/pgsql/data"
                              }
                            ],
                            "env": [
                              {
                                "name": "POSTGRESQL_USER",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-user"
                                  }
                                }
                              },
                              {
                                "name": "POSTGRESQL_PASSWORD",
                                "valueFrom": {
                                  "secretKeyRef": {
                                    "name": "${NAME}",
                                    "key": "database-password"
                                  }
                                }
                              },
                              {
                                "name": "POSTGRESQL_DATABASE",
                                "value": "${DATABASE_NAME}"
                              },
                              {
                                "name": "POSTGRESQL_MAX_CONNECTIONS",
                                "value": "${POSTGRESQL_MAX_CONNECTIONS}"
                              },
                              {
                                "name": "POSTGRESQL_SHARED_BUFFERS",
                                "value": "${POSTGRESQL_SHARED_BUFFERS}"
                              }
                            ],
                            "resources": {
                              "limits": {
                                "memory": "${MEMORY_POSTGRESQL_LIMIT}"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "name": "NAME",
                  "displayName": "Name",
                  "description": "The name assigned to all of the frontend objects defined in this template.",
                  "value": "rails-pgsql-persistent",
                  "required": true
                },
                {
                  "name": "NAMESPACE",
                  "displayName": "Namespace",
                  "description": "The OpenShift Namespace where the ImageStream resides.",
                  "value": "openshift",
                  "required": true
                },
                {
                  "name": "MEMORY_LIMIT",
                  "displayName": "Memory Limit",
                  "description": "Maximum amount of memory the Rails container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "MEMORY_POSTGRESQL_LIMIT",
                  "displayName": "Memory Limit (PostgreSQL)",
                  "description": "Maximum amount of memory the PostgreSQL container can use.",
                  "value": "512Mi",
                  "required": true
                },
                {
                  "name": "VOLUME_CAPACITY",
                  "displayName": "Volume Capacity",
                  "description": "Volume space available for data, e.g. 512Mi, 2Gi",
                  "value": "1Gi",
                  "required": true
                },
                {
                  "name": "SOURCE_REPOSITORY_URL",
                  "displayName": "Git Repository URL",
                  "description": "The URL of the repository with your application source code.",
                  "value": "https://github.com/openshift/rails-ex.git",
                  "required": true
                },
                {
                  "name": "SOURCE_REPOSITORY_REF",
                  "displayName": "Git Reference",
                  "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
                },
                {
                  "name": "CONTEXT_DIR",
                  "displayName": "Context Directory",
                  "description": "Set this to the relative path to your project if it is not in the root of your repository."
                },
                {
                  "name": "APPLICATION_DOMAIN",
                  "displayName": "Application Hostname",
                  "description": "The exposed hostname that will route to the Rails service, if left blank a value will be defaulted."
                },
                {
                  "name": "GITHUB_WEBHOOK_SECRET",
                  "displayName": "GitHub Webhook Secret",
                  "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{40}"
                },
                {
                  "name": "SECRET_KEY_BASE",
                  "displayName": "Secret Key",
                  "description": "Your secret key for verifying the integrity of signed cookies.",
                  "generate": "expression",
                  "from": "[a-z0-9]{127}"
                },
                {
                  "name": "APPLICATION_USER",
                  "displayName": "Application Username",
                  "description": "The application user that is used within the sample application to authorize access on pages.",
                  "value": "openshift",
                  "required": true
                },
                {
                  "name": "APPLICATION_PASSWORD",
                  "displayName": "Application Password",
                  "description": "The application password that is used within the sample application to authorize access on pages.",
                  "value": "secret",
                  "required": true
                },
                {
                  "name": "RAILS_ENV",
                  "displayName": "Rails Environment",
                  "description": "Environment under which the sample application will run. Could be set to production, development or test.",
                  "value": "production",
                  "required": true
                },
                {
                  "name": "DATABASE_SERVICE_NAME",
                  "displayName": "Database Service Name",
                  "value": "postgresql",
                  "required": true
                },
                {
                  "name": "DATABASE_USER",
                  "displayName": "Database Username",
                  "generate": "expression",
                  "from": "user[A-Z0-9]{3}"
                },
                {
                  "name": "DATABASE_PASSWORD",
                  "displayName": "Database Password",
                  "generate": "expression",
                  "from": "[a-zA-Z0-9]{8}"
                },
                {
                  "name": "DATABASE_NAME",
                  "displayName": "Database Name",
                  "value": "root",
                  "required": true
                },
                {
                  "name": "POSTGRESQL_MAX_CONNECTIONS",
                  "displayName": "Maximum Database Connections",
                  "value": "100"
                },
                {
                  "name": "POSTGRESQL_SHARED_BUFFERS",
                  "displayName": "Shared Buffer Amount",
                  "value": "12MB"
                },
                {
                  "name": "RUBYGEM_MIRROR",
                  "displayName": "Custom RubyGems Mirror URL",
                  "description": "The custom RubyGems mirror URL"
                }
              ],
              "labels": {
                "app": "rails-pgsql-persistent",
                "template": "rails-pgsql-persistent"
              }
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:28 GMT
- request:
    method: get
    uri: https://192.168.99.100:8443/oapi/v1/images?pretty=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.3.4p301
      Authorization:
      - Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJtYW5hZ2VtZW50LWluZnJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6Im1hbmFnZW1lbnQtYWRtaW4tdG9rZW4tamhuOW0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoibWFuYWdlbWVudC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjYzNDQzNDkwLWRlNzUtMTFlNy1hMjRjLTQ2MWQ2NzdjZDg2MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDptYW5hZ2VtZW50LWluZnJhOm1hbmFnZW1lbnQtYWRtaW4ifQ.WMFX4vDfyFLfhWmtS3Q9kAbT8uCYG5674Numa3fapTiDmjq6BY0avxzvj9p-FjfYs3f0GQj_JNjdTCvATitqGAJXR7u5QO_-owFVZ93RxLtaoiXsISzXuHwT6VFMHdAVFeREgGhaaxnrmiu376UkSckFDBIuuqNcoWt3AkEYDadH3IggwhLLtNVPfrGRsUC0iLwD6lfHL3Q5W0mXPDbupeswMfMUKsRlJhRBdb-DrMpDaODx7Wp27NgvlBPQSGKhYWE89rs_0ui8Z2AAN2N0ea6Yc4_n6_G5kN6wu26oDiXBrC2DTO8jbiM0Aym11_s4DWJwFuUG85TQ0fKj2XGLGA
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Dec 2017 21:24:28 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "ImageList",
          "apiVersion": "v1",
          "metadata": {
            "selfLink": "/oapi/v1/images",
            "resourceVersion": "8719"
          },
          "items": [
            {
              "metadata": {
                "name": "sha256:01eed3f3b8c323b6074c77256c82c7fb94293ff35c65bdde93a21bbcd4bad358",
                "selfLink": "/oapi/v1/images/sha256%3A01eed3f3b8c323b6074c77256c82c7fb94293ff35c65bdde93a21bbcd4bad358",
                "uid": "6b46f6a3-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1062",
                "creationTimestamp": "2017-12-11T13:15:55Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/ruby-24-centos7@sha256:01eed3f3b8c323b6074c77256c82c7fb94293ff35c65bdde93a21bbcd4bad358",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:d1a2420ee9b17c111ae6af13adb6eda4873dfc41c8a2c55fc0868c82c627f46c",
                "Created": "2017-12-07T13:34:18Z",
                "Container": "0e0d03249a50261e6dc1255b2794ae361e85abf3e236142a46f4ca854e683d76",
                "ContainerConfig": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Ruby 2.4 applications",
                    "DESCRIPTION=Ruby 2.4 available as docker container is a base platform for building and running various Ruby 2.4 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "RUBY_VERSION=2.4"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"c6e2e08\""
                  ],
                  "Image": "sha256:778bea363680f844d3007872ea2e5b54586a167543a3426db205a56e3c022e19",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-ruby24-docker",
                    "description": "Ruby 2.4 available as docker container is a base platform for building and running various Ruby 2.4 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "io.k8s.description": "Ruby 2.4 available as docker container is a base platform for building and running various Ruby 2.4 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "io.k8s.display-name": "Ruby 2.4",
                    "io.openshift.builder-version": "\"c6e2e08\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,ruby,ruby24,rh-ruby24",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/ruby-24-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Ruby 2.4 applications",
                    "vendor": "CentOS",
                    "version": "2.4"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Ruby 2.4 applications",
                    "DESCRIPTION=Ruby 2.4 available as docker container is a base platform for building and running various Ruby 2.4 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "RUBY_VERSION=2.4"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:778bea363680f844d3007872ea2e5b54586a167543a3426db205a56e3c022e19",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-ruby24-docker",
                    "description": "Ruby 2.4 available as docker container is a base platform for building and running various Ruby 2.4 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "io.k8s.description": "Ruby 2.4 available as docker container is a base platform for building and running various Ruby 2.4 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "io.k8s.display-name": "Ruby 2.4",
                    "io.openshift.builder-version": "\"c6e2e08\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,ruby,ruby24,rh-ruby24",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/ruby-24-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Ruby 2.4 applications",
                    "vendor": "CentOS",
                    "version": "2.4"
                  }
                },
                "Architecture": "amd64",
                "Size": 186137650
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:cc0ddecc531466cdadca9ec38c3a05c9c6093f57c2a13b1ee713a24147b57600",
                  "size": 7836280,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:38838b2f6d95cec92b5ebeaba00f384c4190e5eba31c460b40c3435f620f7e30",
                  "size": 3788,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bac0ff76e28137f6b1ef4054cd4945ef574595f30e603ef1e46916101dcd4564",
                  "size": 176207,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:a1e22e37e72c2f49c44aec2b8a894fff295bd18d4368a745aa6d4f0e7a6e2099",
                  "size": 90675631,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:21bc51b6c20332f759323f78a91f87aa7f7c1c9d223ab0fd4e3bd9dca1152c90",
                  "size": 13806046,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:65348d3fe21a8704e66c2c52bad947d7eb2188fa6481c52ac02d3ca4a4cc0716",
                  "size": 1815,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:5c86810857abbe19783f837578abb986e08d4946d826df4e63b247a1f466e676",
                  "size": 3870,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:a87b06775811f92e5617be82385d33df5ddb336d69f625b52827d393e7dff6a7",
                  "size": 191845,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:0ba509791429be8e2ad63eed6012e391a42b69ef710b8f4815d321b84f069166",
                "selfLink": "/oapi/v1/images/sha256%3A0ba509791429be8e2ad63eed6012e391a42b69ef710b8f4815d321b84f069166",
                "uid": "6bdf67e5-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1073",
                "creationTimestamp": "2017-12-11T13:15:56Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "openshift/wildfly-100-centos7@sha256:0ba509791429be8e2ad63eed6012e391a42b69ef710b8f4815d321b84f069166",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:45f3700f29b28ae2bbe7d081511ab2dbdac0f01e1917a675f15a845fecdd7a7b",
                "Created": "2017-11-13T02:41:41Z",
                "Container": "80792341ea79ee72fa083c809fc03b24ada192138d8e534a79d53a977f73c95a",
                "ContainerConfig": {
                  "Hostname": "1b0d6163fdc2",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "WILDFLY_VERSION=10.0.0.Final",
                    "MAVEN_VERSION=3.3.9"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=632df27"
                  ],
                  "Image": "sha256:0ceb2f6483661767b7889563c3311d60f44dcb774ef28d18dff79234cca1de0d",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161214",
                    "com.redhat.deployments-dir": "/wildfly/standalone/deployments",
                    "io.k8s.description": "Platform for building and running JEE applications on WildFly 10.0.0.Final",
                    "io.k8s.display-name": "WildFly 10.0.0.Final",
                    "io.openshift.builder-base-version": "bfd4736",
                    "io.openshift.builder-version": "632df27",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.destination": "/opt/s2i/destination",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,wildfly,wildfly10",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "DockerVersion": "1.12.6",
                "Author": "Ben Parees \u003cbparees@redhat.com\u003e",
                "Config": {
                  "Hostname": "1b0d6163fdc2",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "WILDFLY_VERSION=10.0.0.Final",
                    "MAVEN_VERSION=3.3.9"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:0ceb2f6483661767b7889563c3311d60f44dcb774ef28d18dff79234cca1de0d",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161214",
                    "com.redhat.deployments-dir": "/wildfly/standalone/deployments",
                    "io.k8s.description": "Platform for building and running JEE applications on WildFly 10.0.0.Final",
                    "io.k8s.display-name": "WildFly 10.0.0.Final",
                    "io.openshift.builder-base-version": "bfd4736",
                    "io.openshift.builder-version": "632df27",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.destination": "/opt/s2i/destination",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,wildfly,wildfly10",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "Architecture": "amd64",
                "Size": 502927920
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729",
                  "size": 70389679,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:734fb161cf896cf5c25a9a857a4b4d267bb5a59d5acf9ba846278ab3f3d1f5d5",
                  "size": 256,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:78efc9e155c4f5ac3665c4ef14339c305672468520dc0d5ad5a254ce90a1ec28",
                  "size": 68747156,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:8a3400b7e31a55323583e3d585b3b0be56d9f7ae563187aec96d47ef5419982a",
                  "size": 1979,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:3e5a83eab910883ee36602d5aa609e2e62927dd522cbe2bbd18bc3b168040036",
                  "size": 223316198,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:381f264a71e7f846498c7e030ee2c97615d83b536e7d61e881ece28f3a79dcd4",
                  "size": 1598302,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:80d69c8403a4366cd6e4acfcf779587723373f7d142c66d4d962bdfcff5038d7",
                  "size": 2673,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:76e0949922b6093d60f887d8ca39d7f3009b08b574b8e6cd053638041ddd7bf2",
                  "size": 4657,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:16f6e4b872ed5e4db199ed08cae85929de31ddcb3168e6e6eb9b0d99e7624636",
                  "size": 968,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:264c72adbeb97c6ec0490d827ebb470e2d6c831d3513af9e12dd56070d1d97d9",
                  "size": 4238,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:603cab90608f067d5aeaa0005b4c50f2efad996fe6a38c8a49242fdab7563e18",
                  "size": 138849644,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:0db869632c6360a8ce71955f22d3e5a4043494c28bf370d82e4d84364091f0ec",
                "selfLink": "/oapi/v1/images/sha256%3A0db869632c6360a8ce71955f22d3e5a4043494c28bf370d82e4d84364091f0ec",
                "uid": "67c08660-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1020",
                "creationTimestamp": "2017-12-11T13:15:49Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/php-56-centos7@sha256:0db869632c6360a8ce71955f22d3e5a4043494c28bf370d82e4d84364091f0ec",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:801777f69ec3a914c1d36b3b2e6e054b286a5eaf7a9a6575fe3b19619d46aa8c",
                "Created": "2017-12-07T10:06:44Z",
                "Container": "bf8373eee8df2d7463143b169791bd282828fa9e2b05e836a00907c5ca82140c",
                "ContainerConfig": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/rh/rh-php56/root/usr/bin",
                    "SUMMARY=Platform for building and running PHP 5.6 applications",
                    "DESCRIPTION=PHP 5.6 available as docker container is a base platform for building and running various PHP 5.6 applications and frameworks. PHP is an HTML-embedded scripting language. PHP attempts to make it easy for developers to write dynamically generated web pages. PHP also offers built-in database integration for several commercial and non-commercial database management systems, so writing a database-enabled webpage with PHP is fairly simple. The most common use of PHP coding is probably as a replacement for CGI scripts.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "PHP_VERSION=5.6",
                    "PHP_VER_SHORT=56",
                    "NAME=php",
                    "VERSION=5.0"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"cf998b2\""
                  ],
                  "Image": "sha256:52d0e7b3ad9cd54d7a28fdbd3bfc0245c89859048be6c68c3e60298b0dfbaed5",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-php56-docker",
                    "description": "PHP 5.6 available as docker container is a base platform for building and running various PHP 5.6 applications and frameworks. PHP is an HTML-embedded scripting language. PHP attempts to make it easy for developers to write dynamically generated web pages. PHP also offers built-in database integration for several commercial and non-commercial database management systems, so writing a database-enabled webpage with PHP is fairly simple. The most common use of PHP coding is probably as a replacement for CGI scripts.",
                    "help": "For more information visit https://github.com/sclorg/s2i-php-container",
                    "io.k8s.description": "PHP 5.6 available as docker container is a base platform for building and running various PHP 5.6 applications and frameworks. PHP is an HTML-embedded scripting language. PHP attempts to make it easy for developers to write dynamically generated web pages. PHP also offers built-in database integration for several commercial and non-commercial database management systems, so writing a database-enabled webpage with PHP is fairly simple. The most common use of PHP coding is probably as a replacement for CGI scripts.",
                    "io.k8s.display-name": "Apache 2.4 with PHP 5.6",
                    "io.openshift.builder-version": "\"cf998b2\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,php,php56,rh-php56",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/php-56-centos7",
                    "release": "1",
                    "summary": "Platform for building and running PHP 5.6 applications",
                    "usage": "s2i build \u003cSOURCE-REPOSITORY\u003e centos/php-56-centos7:latest \u003cAPP-NAME\u003e",
                    "vendor": "CentOS",
                    "version": "5.0"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/rh/rh-php56/root/usr/bin",
                    "SUMMARY=Platform for building and running PHP 5.6 applications",
                    "DESCRIPTION=PHP 5.6 available as docker container is a base platform for building and running various PHP 5.6 applications and frameworks. PHP is an HTML-embedded scripting language. PHP attempts to make it easy for developers to write dynamically generated web pages. PHP also offers built-in database integration for several commercial and non-commercial database management systems, so writing a database-enabled webpage with PHP is fairly simple. The most common use of PHP coding is probably as a replacement for CGI scripts.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "PHP_VERSION=5.6",
                    "PHP_VER_SHORT=56",
                    "NAME=php",
                    "VERSION=5.0"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:52d0e7b3ad9cd54d7a28fdbd3bfc0245c89859048be6c68c3e60298b0dfbaed5",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-php56-docker",
                    "description": "PHP 5.6 available as docker container is a base platform for building and running various PHP 5.6 applications and frameworks. PHP is an HTML-embedded scripting language. PHP attempts to make it easy for developers to write dynamically generated web pages. PHP also offers built-in database integration for several commercial and non-commercial database management systems, so writing a database-enabled webpage with PHP is fairly simple. The most common use of PHP coding is probably as a replacement for CGI scripts.",
                    "help": "For more information visit https://github.com/sclorg/s2i-php-container",
                    "io.k8s.description": "PHP 5.6 available as docker container is a base platform for building and running various PHP 5.6 applications and frameworks. PHP is an HTML-embedded scripting language. PHP attempts to make it easy for developers to write dynamically generated web pages. PHP also offers built-in database integration for several commercial and non-commercial database management systems, so writing a database-enabled webpage with PHP is fairly simple. The most common use of PHP coding is probably as a replacement for CGI scripts.",
                    "io.k8s.display-name": "Apache 2.4 with PHP 5.6",
                    "io.openshift.builder-version": "\"cf998b2\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,php,php56,rh-php56",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/php-56-centos7",
                    "release": "1",
                    "summary": "Platform for building and running PHP 5.6 applications",
                    "usage": "s2i build \u003cSOURCE-REPOSITORY\u003e centos/php-56-centos7:latest \u003cAPP-NAME\u003e",
                    "vendor": "CentOS",
                    "version": "5.0"
                  }
                },
                "Architecture": "amd64",
                "Size": 231879081
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:cc0ddecc531466cdadca9ec38c3a05c9c6093f57c2a13b1ee713a24147b57600",
                  "size": 7836280,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:38838b2f6d95cec92b5ebeaba00f384c4190e5eba31c460b40c3435f620f7e30",
                  "size": 3788,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bac0ff76e28137f6b1ef4054cd4945ef574595f30e603ef1e46916101dcd4564",
                  "size": 176207,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:a1e22e37e72c2f49c44aec2b8a894fff295bd18d4368a745aa6d4f0e7a6e2099",
                  "size": 90675631,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:b5b961a5c48d2fe19870f18f04f1ab0ba3c143108282cb5b505729319356ce96",
                  "size": 59472877,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:5d8278841ec53ce716078eb765cc8ee6d56a44d52fe94357040945eef2096a8c",
                  "size": 2113,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:63664a2efbeed81db117f5d8b612743046968ea5808d000b3bb24848d2d740b2",
                  "size": 25505,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:28064e6916ded92cdcf3bc853cde1261c4a37dfd4a800391f864a663ca208330",
                  "size": 241107,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:1478800585f06a6c0feeb8301ceb54059d54816762de9f6b1182c3d52c75ac84",
                "selfLink": "/oapi/v1/images/sha256%3A1478800585f06a6c0feeb8301ceb54059d54816762de9f6b1182c3d52c75ac84",
                "uid": "67bfd373-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1019",
                "creationTimestamp": "2017-12-11T13:15:49Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "openshift/php-55-centos7@sha256:1478800585f06a6c0feeb8301ceb54059d54816762de9f6b1182c3d52c75ac84",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "ce753caa0351665b60caf7d650c17ba81b4045990b31fcab9ddbbebccf7eb413",
                "Parent": "d23040b93446af2b6928a7e9ec7e42f539826da824cf3e23de79dfe99aff4835",
                "Created": "2016-12-21T12:07:22Z",
                "Container": "d8d69990b1b1da1ede237f4c7c9b481f3a9f212f8e54285e249063e32a7dd41a",
                "ContainerConfig": {
                  "Hostname": "d6dcf178f680",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/rh/php55/root/usr/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "PHP_VERSION=5.5"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=4079bf834c3bc8ad461bb861d958f3a237df2863"
                  ],
                  "Image": "sha256:e464dfcc7e4b0706959a96cddd6ab81366f3611bbe1e305b3c99159e8ab0eedb",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161102",
                    "io.k8s.description": "Platform for building and running PHP 5.5 applications",
                    "io.k8s.display-name": "Apache 2.4 with PHP 5.5",
                    "io.openshift.builder-base-version": "a8deee2",
                    "io.openshift.builder-version": "4079bf834c3bc8ad461bb861d958f3a237df2863",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,php,php55",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "DockerVersion": "1.12.2-rc2",
                "Author": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                "Config": {
                  "Hostname": "d6dcf178f680",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/rh/php55/root/usr/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "PHP_VERSION=5.5"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:e464dfcc7e4b0706959a96cddd6ab81366f3611bbe1e305b3c99159e8ab0eedb",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161102",
                    "io.k8s.description": "Platform for building and running PHP 5.5 applications",
                    "io.k8s.display-name": "Apache 2.4 with PHP 5.5",
                    "io.openshift.builder-base-version": "a8deee2",
                    "io.openshift.builder-version": "4079bf834c3bc8ad461bb861d958f3a237df2863",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,php,php55",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "Architecture": "amd64",
                "Size": 207409759
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 32,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:08d48e6f1cff259389732d35307bb877215fa28867cdaff50c1dbd6e0b993c1f",
                  "size": 70481699,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:147e60d427392d6f696273d0b633722bc6a7dc7af0c90a8f4b29777dade6002f",
                  "size": 255,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:71d046d973b92e351cf8391ec66e2e7e5fa252e2fb3cc6cd5881f2c368207777",
                  "size": 67962493,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:85dab2e0d129ed4c4f1da157574c0f5d66a54222d7ac2958093d01b00d487335",
                  "size": 1957,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:7a4898764df9f3fb6c9725ff47f829d86d3dd59b075d4505c9821b2aa2454772",
                  "size": 68883269,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:03b28c3fc337d8693207202c29903308da1cd4efcbb89763ef6ca7784d7e5416",
                  "size": 1804,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:6dff56ab66c64bf92497441769808b6ca5ce4d3c88f4d083f1f1529ac2b2063c",
                  "size": 22249,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:1661349d8e4e64ce119dc678928e6958c7205dc26eeea062312080b3661e0966",
                  "size": 56001,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v1+json"
            },
            {
              "metadata": {
                "name": "sha256:18f70134451f7a0a454db6ed20176add83576735e139502f4163b9c3a5ddd94e",
                "selfLink": "/oapi/v1/images/sha256%3A18f70134451f7a0a454db6ed20176add83576735e139502f4163b9c3a5ddd94e",
                "uid": "67d6b4cc-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1025",
                "creationTimestamp": "2017-12-11T13:15:49Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/nodejs-6-centos7@sha256:18f70134451f7a0a454db6ed20176add83576735e139502f4163b9c3a5ddd94e",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:09823a6a527c45485bc260dd16132c5fabcaea803502a1ca6c281c22ef5fc57e",
                "Created": "2017-12-06T15:23:36Z",
                "Container": "3be5874a01de806e52be8809cab4671cd2979533cf53e65e7489cf160579373c",
                "ContainerConfig": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/node_modules/.bin/:/opt/app-root/src/.npm-global/bin/:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Node.js 6 applications",
                    "DESCRIPTION=Node.js 6 available as docker container is a base platform for building and running various Node.js 6 applications and frameworks. Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "NODEJS_VERSION=6",
                    "NPM_RUN=start",
                    "NAME=nodejs",
                    "NPM_CONFIG_PREFIX=/opt/app-root/src/.npm-global"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"b00f0cb\""
                  ],
                  "Image": "sha256:9b89b53ee83c34aea3b572dbfea4693f33dce15e17c93a36c26d4212a2008187",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-nodejs6-docker",
                    "com.redhat.deployments-dir": "/opt/app-root/src",
                    "com.redhat.dev-mode": "DEV_MODE:false",
                    "com.redhat.dev-mode.port": "DEBUG_PORT:5858",
                    "description": "Node.js 6 available as docker container is a base platform for building and running various Node.js 6 applications and frameworks. Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.",
                    "help": "For more information visit https://github.com/sclorg/s2i-nodejs-container",
                    "io.k8s.description": "Node.js 6 available as docker container is a base platform for building and running various Node.js 6 applications and frameworks. Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.",
                    "io.k8s.display-name": "Node.js 6",
                    "io.openshift.builder-version": "\"b00f0cb\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,nodejs,nodejs6",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/nodejs-6-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Node.js 6 applications",
                    "usage": "s2i build \u003cSOURCE-REPOSITORY\u003e centos/nodejs-6-centos7:latest \u003cAPP-NAME\u003e",
                    "vendor": "CentOS",
                    "version": "6"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/node_modules/.bin/:/opt/app-root/src/.npm-global/bin/:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Node.js 6 applications",
                    "DESCRIPTION=Node.js 6 available as docker container is a base platform for building and running various Node.js 6 applications and frameworks. Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "NODEJS_VERSION=6",
                    "NPM_RUN=start",
                    "NAME=nodejs",
                    "NPM_CONFIG_PREFIX=/opt/app-root/src/.npm-global"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:9b89b53ee83c34aea3b572dbfea4693f33dce15e17c93a36c26d4212a2008187",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-nodejs6-docker",
                    "com.redhat.deployments-dir": "/opt/app-root/src",
                    "com.redhat.dev-mode": "DEV_MODE:false",
                    "com.redhat.dev-mode.port": "DEBUG_PORT:5858",
                    "description": "Node.js 6 available as docker container is a base platform for building and running various Node.js 6 applications and frameworks. Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.",
                    "help": "For more information visit https://github.com/sclorg/s2i-nodejs-container",
                    "io.k8s.description": "Node.js 6 available as docker container is a base platform for building and running various Node.js 6 applications and frameworks. Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.",
                    "io.k8s.display-name": "Node.js 6",
                    "io.openshift.builder-version": "\"b00f0cb\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,nodejs,nodejs6",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/nodejs-6-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Node.js 6 applications",
                    "usage": "s2i build \u003cSOURCE-REPOSITORY\u003e centos/nodejs-6-centos7:latest \u003cAPP-NAME\u003e",
                    "vendor": "CentOS",
                    "version": "6"
                  }
                },
                "Architecture": "amd64",
                "Size": 180776210
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:cc0ddecc531466cdadca9ec38c3a05c9c6093f57c2a13b1ee713a24147b57600",
                  "size": 7836280,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:38838b2f6d95cec92b5ebeaba00f384c4190e5eba31c460b40c3435f620f7e30",
                  "size": 3788,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bac0ff76e28137f6b1ef4054cd4945ef574595f30e603ef1e46916101dcd4564",
                  "size": 176207,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:a1e22e37e72c2f49c44aec2b8a894fff295bd18d4368a745aa6d4f0e7a6e2099",
                  "size": 90675631,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:9ab1e5d046883a7b8da52a9ec2f421515cfe7355897b1fe574632f42bc762cf7",
                  "size": 8457928,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:0511be7d1fa0266afbc118bf3061768743791fdbcc016564e3baab61963d660c",
                  "size": 1930,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:7b7bea3d4bdeac360f8c47eb2c599d62937380cf26edf91f90bc37fd1f3f0a70",
                  "size": 3286,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:70ab50c785a8675e832f154540d65b6c81ca49b2032850a0d1f80134da6c7d50",
                  "size": 176683,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:1a0e9ae0f6bf9b5f808534f3152dc068c48ad1bc428e94822dce84722a3decad",
                "selfLink": "/oapi/v1/images/sha256%3A1a0e9ae0f6bf9b5f808534f3152dc068c48ad1bc428e94822dce84722a3decad",
                "uid": "66549275-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1011",
                "creationTimestamp": "2017-12-11T13:15:46Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "openshift/mongodb-24-centos7@sha256:1a0e9ae0f6bf9b5f808534f3152dc068c48ad1bc428e94822dce84722a3decad",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "1ec8ee082033c4f2737f4acc4896d3b6dc6a15d56f5647b3b19fcdae92aa047d",
                "Parent": "1a5e32c208eeaeecd379cf1c7640650eae311842dfbf7f8493b6618fdc6498ab",
                "Created": "2016-12-21T08:28:41Z",
                "Container": "21b561175d51b062563b984e7a5611033e4c050c5411b41e47d06b725d942911",
                "ContainerConfig": {
                  "Hostname": "d6dcf178f680",
                  "User": "184",
                  "ExposedPorts": {
                    "27017/tcp": {}
                  },
                  "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "MONGODB_VERSION=2.4",
                    "HOME=/var/lib/mongodb",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/mongodb",
                    "ENABLED_COLLECTIONS=mongodb24",
                    "BASH_ENV=${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "ENV=${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "PROMPT_COMMAND=. ${CONTAINER_SCRIPTS_PATH}/scl_enable"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=06cd761"
                  ],
                  "Image": "sha256:ce69288525dbe1ed0e3342f591c8e7fb6b229dc2c0921004cf6d15463c3f8498",
                  "Volumes": {
                    "/var/lib/mongodb/data": {}
                  },
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161102",
                    "io.k8s.description": "MongoDB is a scalable, high-performance, open source NoSQL database.",
                    "io.k8s.display-name": "MongoDB 2.4",
                    "io.openshift.builder-version": "06cd761",
                    "io.openshift.expose-services": "27017:mongodb",
                    "io.openshift.tags": "database,mongodb,mongodb24",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "DockerVersion": "1.12.2-rc2",
                "Author": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                "Config": {
                  "Hostname": "d6dcf178f680",
                  "User": "184",
                  "ExposedPorts": {
                    "27017/tcp": {}
                  },
                  "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "MONGODB_VERSION=2.4",
                    "HOME=/var/lib/mongodb",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/mongodb",
                    "ENABLED_COLLECTIONS=mongodb24",
                    "BASH_ENV=${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "ENV=${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "PROMPT_COMMAND=. ${CONTAINER_SCRIPTS_PATH}/scl_enable"
                  ],
                  "Cmd": [
                    "run-mongod"
                  ],
                  "Image": "sha256:ce69288525dbe1ed0e3342f591c8e7fb6b229dc2c0921004cf6d15463c3f8498",
                  "Volumes": {
                    "/var/lib/mongodb/data": {}
                  },
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161102",
                    "io.k8s.description": "MongoDB is a scalable, high-performance, open source NoSQL database.",
                    "io.k8s.display-name": "MongoDB 2.4",
                    "io.openshift.builder-version": "06cd761",
                    "io.openshift.expose-services": "27017:mongodb",
                    "io.openshift.tags": "database,mongodb,mongodb24",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "Architecture": "amd64",
                "Size": 157151350
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 32,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:08d48e6f1cff259389732d35307bb877215fa28867cdaff50c1dbd6e0b993c1f",
                  "size": 70481699,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:29b23d16ea7aa67ee1a3ef0e297fd592c6e0c62a69f2a859b7d4129b576860f5",
                  "size": 86663551,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:ec88c164ca41de1c196819aac0b4ac9df024c0cd2eb746563cc983e68fc5379b",
                  "size": 5938,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:1df67bd57874c2c37bbc3f0a736a61e64e2ab4ed25946fd45663f2739ce14f4d",
                  "size": 130,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v1+json"
            },
            {
              "metadata": {
                "name": "sha256:2522f6f6f9a0ea0245457f02cd1698d29a6959e32a00491b105fabd3e19d94c6",
                "selfLink": "/oapi/v1/images/sha256%3A2522f6f6f9a0ea0245457f02cd1698d29a6959e32a00491b105fabd3e19d94c6",
                "uid": "6807bf99-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1029",
                "creationTimestamp": "2017-12-11T13:15:49Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/perl-524-centos7@sha256:2522f6f6f9a0ea0245457f02cd1698d29a6959e32a00491b105fabd3e19d94c6",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:e9367fb9d2dc271444a1d4abef615feace0da9b35b85d1796d6aca04d8e03e06",
                "Created": "2017-11-21T07:45:45Z",
                "Container": "983a1918d298717ad6d1451af53e22422053deed6ec74e5f1607df9ff5fe7717",
                "ContainerConfig": {
                  "Hostname": "38052bd170ac",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Perl 5.24 applications",
                    "DESCRIPTION=Perl 5.24 available as docker container is a base platform for building and running various Perl 5.24 applications and frameworks. Perl is a high-level programming language with roots in C, sed, awk and shell scripting. Perl is good at handling processes and files, and is especially good at handling text. Perl's hallmarks are practicality and efficiency. While it is used to do a lot of different things, Perl's most common applications are system administration utilities and web programming.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "PERL_VERSION=5.24"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"a5f3dfb\""
                  ],
                  "Image": "sha256:eca728c1892582b2d1eef61f77e243f629a7c92bb15d7f0f607c9ae4e236bad2",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20170911",
                    "com.redhat.component": "rh-perl524-docker",
                    "description": "Perl 5.24 available as docker container is a base platform for building and running various Perl 5.24 applications and frameworks. Perl is a high-level programming language with roots in C, sed, awk and shell scripting. Perl is good at handling processes and files, and is especially good at handling text. Perl's hallmarks are practicality and efficiency. While it is used to do a lot of different things, Perl's most common applications are system administration utilities and web programming.",
                    "io.k8s.description": "Perl 5.24 available as docker container is a base platform for building and running various Perl 5.24 applications and frameworks. Perl is a high-level programming language with roots in C, sed, awk and shell scripting. Perl is good at handling processes and files, and is especially good at handling text. Perl's hallmarks are practicality and efficiency. While it is used to do a lot of different things, Perl's most common applications are system administration utilities and web programming.",
                    "io.k8s.display-name": "Apache 2.4 with mod_perl/5.24",
                    "io.openshift.builder-version": "\"a5f3dfb\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,perl,perl524",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/perl-524-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Perl 5.24 applications",
                    "vendor": "CentOS",
                    "version": "5.24"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "38052bd170ac",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Perl 5.24 applications",
                    "DESCRIPTION=Perl 5.24 available as docker container is a base platform for building and running various Perl 5.24 applications and frameworks. Perl is a high-level programming language with roots in C, sed, awk and shell scripting. Perl is good at handling processes and files, and is especially good at handling text. Perl's hallmarks are practicality and efficiency. While it is used to do a lot of different things, Perl's most common applications are system administration utilities and web programming.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "PERL_VERSION=5.24"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:eca728c1892582b2d1eef61f77e243f629a7c92bb15d7f0f607c9ae4e236bad2",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20170911",
                    "com.redhat.component": "rh-perl524-docker",
                    "description": "Perl 5.24 available as docker container is a base platform for building and running various Perl 5.24 applications and frameworks. Perl is a high-level programming language with roots in C, sed, awk and shell scripting. Perl is good at handling processes and files, and is especially good at handling text. Perl's hallmarks are practicality and efficiency. While it is used to do a lot of different things, Perl's most common applications are system administration utilities and web programming.",
                    "io.k8s.description": "Perl 5.24 available as docker container is a base platform for building and running various Perl 5.24 applications and frameworks. Perl is a high-level programming language with roots in C, sed, awk and shell scripting. Perl is good at handling processes and files, and is especially good at handling text. Perl's hallmarks are practicality and efficiency. While it is used to do a lot of different things, Perl's most common applications are system administration utilities and web programming.",
                    "io.k8s.display-name": "Apache 2.4 with mod_perl/5.24",
                    "io.openshift.builder-version": "\"a5f3dfb\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,perl,perl524",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/perl-524-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Perl 5.24 applications",
                    "vendor": "CentOS",
                    "version": "5.24"
                  }
                },
                "Architecture": "amd64",
                "Size": 219396592
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:d9aaf4d82f249dc101a6638ff5177fe926cdebfa6c42d874dfa5029533da0e72",
                  "size": 73386947,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:fd6cdcc72ac15cb88cda14eec241a8eb2940633656a0896c42f23c90989e4199",
                  "size": 8067336,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:db2941ade4ab37b514562881ab8566907e177bd09f36cd17c0ac1d8f8df0a411",
                  "size": 3785,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bb822428f55eb844a30f63c209e6c85b76c4387f9f64ece614bcb9ab4cbb00b4",
                  "size": 161360,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:362e84fd6a936154e79f07531309e213aba040da4c198180757e7d127beec911",
                  "size": 90267986,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:869aa6d4d61cd952c89bf2102ea4f724c572cb359c6e6259e2b32699e45b6773",
                  "size": 47351597,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:1960b934c268d3ff1e723668b5125c002c0be128582ad1abf9af14fff99d866d",
                  "size": 2307,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:48763fde43897231f76aba76c9d3fd336a428907d4f3a47e0dff1fa624ae54c6",
                  "size": 2695,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:0ca8efb881ae38f23c3cec6ea5f8e8c52cd161cf633d3c2938a40adcb05505b0",
                  "size": 135424,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:279344cf75b01d1980be63d09a2d4549564a65de09b4b88d09bb45a382cd4661",
                "selfLink": "/oapi/v1/images/sha256%3A279344cf75b01d1980be63d09a2d4549564a65de09b4b88d09bb45a382cd4661",
                "uid": "6393bc0e-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "856",
                "creationTimestamp": "2017-12-11T13:15:42Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/httpd-24-centos7@sha256:279344cf75b01d1980be63d09a2d4549564a65de09b4b88d09bb45a382cd4661",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:438d1f04b0bab3e492b1d2b7825d983ec9e4f38aee74941789dfe998d1adc5af",
                "Created": "2017-12-08T14:46:14Z",
                "Container": "7a74ec2fcd813c07ecaf29f3fd43c344df1460eb4bf5fb26637b994e3361104a",
                "ContainerConfig": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {},
                    "8443/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for running Apache httpd 2.4 or building httpd-based application",
                    "DESCRIPTION=Apache httpd 2.4 available as docker container, is a powerful, efficient, and extensible web server. Apache supports a variety of features, many implemented as compiled modules which extend the core functionality. These can range from server-side programming language support to authentication schemes. Virtual hosting allows one Apache installation to serve many different Web sites.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/scl_enable",
                    "ENV=/opt/app-root/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/scl_enable",
                    "HTTPD_VERSION=2.4",
                    "HTTPD_CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/httpd/",
                    "HTTPD_APP_ROOT=/opt/app-root",
                    "HTTPD_CONFIGURATION_PATH=/opt/app-root/etc/httpd.d",
                    "HTTPD_MAIN_CONF_PATH=/etc/httpd/conf",
                    "HTTPD_MAIN_CONF_D_PATH=/etc/httpd/conf.d",
                    "HTTPD_VAR_RUN=/var/run/httpd",
                    "HTTPD_DATA_PATH=/var/www",
                    "HTTPD_DATA_ORIG_PATH=/opt/rh/httpd24/root/var/www",
                    "HTTPD_LOG_PATH=/var/log/httpd24",
                    "HTTPD_SCL=httpd24"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"0591134\""
                  ],
                  "Image": "sha256:8079626d3dea9931e5e779ae9a17e436d76cbf5d15c3273287ff727d6f7a9461",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "httpd24-docker",
                    "description": "Apache httpd 2.4 available as docker container, is a powerful, efficient, and extensible web server. Apache supports a variety of features, many implemented as compiled modules which extend the core functionality. These can range from server-side programming language support to authentication schemes. Virtual hosting allows one Apache installation to serve many different Web sites.",
                    "io.k8s.description": "Apache httpd 2.4 available as docker container, is a powerful, efficient, and extensible web server. Apache supports a variety of features, many implemented as compiled modules which extend the core functionality. These can range from server-side programming language support to authentication schemes. Virtual hosting allows one Apache installation to serve many different Web sites.",
                    "io.k8s.display-name": "Apache httpd 2.4",
                    "io.openshift.builder-version": "\"0591134\"",
                    "io.openshift.expose-services": "8080:http,8443:https",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,httpd,httpd24",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/httpd-24-centos7",
                    "release": "1",
                    "summary": "Platform for running Apache httpd 2.4 or building httpd-based application",
                    "vendor": "CentOS",
                    "version": "2.4"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {},
                    "8443/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for running Apache httpd 2.4 or building httpd-based application",
                    "DESCRIPTION=Apache httpd 2.4 available as docker container, is a powerful, efficient, and extensible web server. Apache supports a variety of features, many implemented as compiled modules which extend the core functionality. These can range from server-side programming language support to authentication schemes. Virtual hosting allows one Apache installation to serve many different Web sites.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/scl_enable",
                    "ENV=/opt/app-root/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/scl_enable",
                    "HTTPD_VERSION=2.4",
                    "HTTPD_CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/httpd/",
                    "HTTPD_APP_ROOT=/opt/app-root",
                    "HTTPD_CONFIGURATION_PATH=/opt/app-root/etc/httpd.d",
                    "HTTPD_MAIN_CONF_PATH=/etc/httpd/conf",
                    "HTTPD_MAIN_CONF_D_PATH=/etc/httpd/conf.d",
                    "HTTPD_VAR_RUN=/var/run/httpd",
                    "HTTPD_DATA_PATH=/var/www",
                    "HTTPD_DATA_ORIG_PATH=/opt/rh/httpd24/root/var/www",
                    "HTTPD_LOG_PATH=/var/log/httpd24",
                    "HTTPD_SCL=httpd24"
                  ],
                  "Cmd": [
                    "/usr/bin/run-httpd"
                  ],
                  "Image": "sha256:8079626d3dea9931e5e779ae9a17e436d76cbf5d15c3273287ff727d6f7a9461",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "httpd24-docker",
                    "description": "Apache httpd 2.4 available as docker container, is a powerful, efficient, and extensible web server. Apache supports a variety of features, many implemented as compiled modules which extend the core functionality. These can range from server-side programming language support to authentication schemes. Virtual hosting allows one Apache installation to serve many different Web sites.",
                    "io.k8s.description": "Apache httpd 2.4 available as docker container, is a powerful, efficient, and extensible web server. Apache supports a variety of features, many implemented as compiled modules which extend the core functionality. These can range from server-side programming language support to authentication schemes. Virtual hosting allows one Apache installation to serve many different Web sites.",
                    "io.k8s.display-name": "Apache httpd 2.4",
                    "io.openshift.builder-version": "\"0591134\"",
                    "io.openshift.expose-services": "8080:http,8443:https",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,httpd,httpd24",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/httpd-24-centos7",
                    "release": "1",
                    "summary": "Platform for running Apache httpd 2.4 or building httpd-based application",
                    "vendor": "CentOS",
                    "version": "2.4"
                  }
                },
                "Architecture": "amd64",
                "Size": 135326209
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:cc0ddecc531466cdadca9ec38c3a05c9c6093f57c2a13b1ee713a24147b57600",
                  "size": 7836280,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:38838b2f6d95cec92b5ebeaba00f384c4190e5eba31c460b40c3435f620f7e30",
                  "size": 3788,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bac0ff76e28137f6b1ef4054cd4945ef574595f30e603ef1e46916101dcd4564",
                  "size": 176207,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:999f59823ef273c6c7ea14dc37ad998b3e883b5f81b2a02cddf2ea49362cabcb",
                  "size": 53663558,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:9fcbf2b39bcbd0cac26195b9664486c98990ff5b63d1e176519ad4bb02ea0d0d",
                  "size": 940,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:371d44441929da5c35d4fe0aaf23f441ecbac8073150b71b6f19d87aec1a99f9",
                  "size": 4905,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:28623b51bfc78c4c6970ad26ba7dcadbd20ae259a91d89eb2d1b04f6a7689a07",
                  "size": 198872,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:59e369f333aae35b572b6028a645c21d2d958357d86105213dd842283b16efa0",
                "selfLink": "/oapi/v1/images/sha256%3A59e369f333aae35b572b6028a645c21d2d958357d86105213dd842283b16efa0",
                "uid": "66c3202f-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1015",
                "creationTimestamp": "2017-12-11T13:15:47Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/mysql-57-centos7@sha256:59e369f333aae35b572b6028a645c21d2d958357d86105213dd842283b16efa0",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:b08cbac00c1fa9e5080cde63cb6e30277a3c90e71ddf44aae40b7e5a7bac439a",
                "Created": "2017-12-08T15:04:09Z",
                "Container": "e29cd6060a853e242fd44f48b5ecd60fa60ae612ad743b20a6774ae2cbdfc520",
                "ContainerConfig": {
                  "Hostname": "87c4e37f7782",
                  "User": "27",
                  "ExposedPorts": {
                    "3306/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=MySQL 5.7 SQL database server",
                    "DESCRIPTION=MySQL is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MySQL mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MySQL databases on behalf of the clients.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/var/lib/mysql",
                    "BASH_ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/mysql/scl_enable",
                    "MYSQL_VERSION=5.7",
                    "APP_DATA=/opt/app-root/src",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/mysql",
                    "MYSQL_PREFIX=/opt/rh/rh-mysql57/root/usr",
                    "ENABLED_COLLECTIONS=rh-mysql57"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"b63563f\""
                  ],
                  "Image": "sha256:ee72b67a2ccff1af8c93fe3811566940755dae75edc2bfdf25257fcdf6321615",
                  "Volumes": {
                    "/var/lib/mysql/data": {}
                  },
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-mysql57-docker",
                    "description": "MySQL is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MySQL mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MySQL databases on behalf of the clients.",
                    "io.k8s.description": "MySQL is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MySQL mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MySQL databases on behalf of the clients.",
                    "io.k8s.display-name": "MySQL 5.7",
                    "io.openshift.builder-version": "\"b63563f\"",
                    "io.openshift.expose-services": "3306:mysql",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "database,mysql,mysql57,rh-mysql57",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/mysql-57-centos7",
                    "release": "1",
                    "summary": "MySQL 5.7 SQL database server",
                    "vendor": "CentOS",
                    "version": "5.7"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "87c4e37f7782",
                  "User": "27",
                  "ExposedPorts": {
                    "3306/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=MySQL 5.7 SQL database server",
                    "DESCRIPTION=MySQL is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MySQL mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MySQL databases on behalf of the clients.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/var/lib/mysql",
                    "BASH_ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/mysql/scl_enable",
                    "MYSQL_VERSION=5.7",
                    "APP_DATA=/opt/app-root/src",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/mysql",
                    "MYSQL_PREFIX=/opt/rh/rh-mysql57/root/usr",
                    "ENABLED_COLLECTIONS=rh-mysql57"
                  ],
                  "Cmd": [
                    "run-mysqld"
                  ],
                  "Image": "sha256:ee72b67a2ccff1af8c93fe3811566940755dae75edc2bfdf25257fcdf6321615",
                  "Volumes": {
                    "/var/lib/mysql/data": {}
                  },
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-mysql57-docker",
                    "description": "MySQL is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MySQL mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MySQL databases on behalf of the clients.",
                    "io.k8s.description": "MySQL is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MySQL mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MySQL databases on behalf of the clients.",
                    "io.k8s.display-name": "MySQL 5.7",
                    "io.openshift.builder-version": "\"b63563f\"",
                    "io.openshift.expose-services": "3306:mysql",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "database,mysql,mysql57,rh-mysql57",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/mysql-57-centos7",
                    "release": "1",
                    "summary": "MySQL 5.7 SQL database server",
                    "vendor": "CentOS",
                    "version": "5.7"
                  }
                },
                "Architecture": "amd64",
                "Size": 146979868
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:cc0ddecc531466cdadca9ec38c3a05c9c6093f57c2a13b1ee713a24147b57600",
                  "size": 7836280,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:38838b2f6d95cec92b5ebeaba00f384c4190e5eba31c460b40c3435f620f7e30",
                  "size": 3788,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bac0ff76e28137f6b1ef4054cd4945ef574595f30e603ef1e46916101dcd4564",
                  "size": 176207,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:da4e3ad6cbde32d0de1302b905a1505d6411ce2290c079594c3e03c1c4ce102a",
                  "size": 65364498,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:227f4e731a153368cde3ddc8b82bcd1b3d181178e3c1d57dfd1d93697f6d3f81",
                  "size": 9237,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:0b2d2543709c20322fab4ad41bb4edae099bf2003005081c62eacc1bb4fd3f30",
                  "size": 419,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:26783a40cb0bcbf823e8c28b1e07f3ad6b769e72aa3a16a600127bcf730bf3ad",
                  "size": 5844,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:d6e14b19ad35b201bb6f44b6697ae136dc3d06a9d6f4fc0b734a58f80e5753fb",
                  "size": 142833,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:6b97de3aaa76914709a537a63b291df5d5af61d06c63a9425a2b33a513ce20a6",
                "selfLink": "/oapi/v1/images/sha256%3A6b97de3aaa76914709a537a63b291df5d5af61d06c63a9425a2b33a513ce20a6",
                "uid": "6bdee9b6-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1072",
                "creationTimestamp": "2017-12-11T13:15:56Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "openshift/wildfly-90-centos7@sha256:6b97de3aaa76914709a537a63b291df5d5af61d06c63a9425a2b33a513ce20a6",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:88cbe951dfa9854ec002056169e337061e2ab21fd401047398211f3d61cee961",
                "Created": "2017-11-13T02:40:04Z",
                "Container": "1bbb2a7b89d3a75baf615204675d1b2340fa37dceb98a57806ba235848cee877",
                "ContainerConfig": {
                  "Hostname": "1b0d6163fdc2",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "WILDFLY_VERSION=9.0.2",
                    "WILDFLY_VERSION_BIN=9.0.2.Final",
                    "MAVEN_VERSION=3.3.9"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=632df27"
                  ],
                  "Image": "sha256:d3d0854e5a318862421a0d4a4bccc8b9fd9e2e08da18fc9692e026fb71b21e79",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161214",
                    "com.redhat.deployments-dir": "/wildfly/standalone/deployments",
                    "io.k8s.description": "Platform for building and running JEE applications on WildFly 9.0",
                    "io.k8s.display-name": "WildFly 9.0",
                    "io.openshift.builder-base-version": "bfd4736",
                    "io.openshift.builder-version": "632df27",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.destination": "/opt/s2i/destination",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,wildfly,wildfly90",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "DockerVersion": "1.12.6",
                "Author": "Ben Parees \u003cbparees@redhat.com\u003e",
                "Config": {
                  "Hostname": "1b0d6163fdc2",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "WILDFLY_VERSION=9.0.2",
                    "WILDFLY_VERSION_BIN=9.0.2.Final",
                    "MAVEN_VERSION=3.3.9"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:d3d0854e5a318862421a0d4a4bccc8b9fd9e2e08da18fc9692e026fb71b21e79",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161214",
                    "com.redhat.deployments-dir": "/wildfly/standalone/deployments",
                    "io.k8s.description": "Platform for building and running JEE applications on WildFly 9.0",
                    "io.k8s.display-name": "WildFly 9.0",
                    "io.openshift.builder-base-version": "bfd4736",
                    "io.openshift.builder-version": "632df27",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.destination": "/opt/s2i/destination",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,wildfly,wildfly90",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "Architecture": "amd64",
                "Size": 499896198
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729",
                  "size": 70389679,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:734fb161cf896cf5c25a9a857a4b4d267bb5a59d5acf9ba846278ab3f3d1f5d5",
                  "size": 256,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:78efc9e155c4f5ac3665c4ef14339c305672468520dc0d5ad5a254ce90a1ec28",
                  "size": 68747156,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:8a3400b7e31a55323583e3d585b3b0be56d9f7ae563187aec96d47ef5419982a",
                  "size": 1979,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:5aeb4bdfd04b97bdd956a26ef6f13ebd9b9fd1cb55ade88df492ad68a6548f71",
                  "size": 221798931,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:9fe3e1d6d0666b4611fd7dd1a8d728bc34ab0682f9eedf1df824e258bca2c664",
                  "size": 1598298,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:d32ce3a3948857fad8a30ba8e01b044c228c66808cd0cbe2d114a80531aa72aa",
                  "size": 2285,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:8ad3b3da145868be01667d5805b02d62b6371646ab344bae71947adf82610c56",
                  "size": 5403,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:86abc536fe7e3eae52426bf3b13d2c900fda4434d18b0da541c457bf38d6901f",
                  "size": 970,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:de0a0f26e5fb4f829ecbfc76b6668cba6131e445e76277ad297fa48f387712af",
                  "size": 4243,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:fe1b6f9de9e4269b7461ebba85c2311cdda7a4ef39e9745bfcd6248a76f282ee",
                  "size": 137334794,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:6ce7942fe2dbb63821b369e752eadcb07c0a5f2d40a239f4c7f23a733e932cfd",
                "selfLink": "/oapi/v1/images/sha256%3A6ce7942fe2dbb63821b369e752eadcb07c0a5f2d40a239f4c7f23a733e932cfd",
                "uid": "6a51efe6-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1047",
                "creationTimestamp": "2017-12-11T13:15:53Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/python-27-centos7@sha256:6ce7942fe2dbb63821b369e752eadcb07c0a5f2d40a239f4c7f23a733e932cfd",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:e1bc0b022ccb5d38c343a15ec443beff9d53b80101195f0da26355706ff46e1c",
                "Created": "2017-12-05T12:02:57Z",
                "Container": "e66c3962928aff6402bf2fbb13250949a223d88a70683426459192c989f61e37",
                "ContainerConfig": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/.local/bin/:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Python 2.7 applications",
                    "DESCRIPTION=Python 2.7 available as docker container is a base platform for building and running various Python 2.7 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "PYTHON_VERSION=2.7",
                    "PYTHONUNBUFFERED=1",
                    "PYTHONIOENCODING=UTF-8",
                    "LC_ALL=en_US.UTF-8",
                    "LANG=en_US.UTF-8",
                    "PIP_NO_CACHE_DIR=off"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"3704f8c\""
                  ],
                  "Image": "sha256:20fbb8e23df69a54ce461d8faa2901c877ddea87208f1e51d826f23e0841fc66",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "python27-docker",
                    "description": "Python 2.7 available as docker container is a base platform for building and running various Python 2.7 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "io.k8s.description": "Python 2.7 available as docker container is a base platform for building and running various Python 2.7 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "io.k8s.display-name": "Python 2.7",
                    "io.openshift.builder-version": "\"3704f8c\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,python,python27,rh-python27",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/python-27-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Python 2.7 applications",
                    "vendor": "CentOS",
                    "version": "2.7"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/.local/bin/:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Python 2.7 applications",
                    "DESCRIPTION=Python 2.7 available as docker container is a base platform for building and running various Python 2.7 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "PYTHON_VERSION=2.7",
                    "PYTHONUNBUFFERED=1",
                    "PYTHONIOENCODING=UTF-8",
                    "LC_ALL=en_US.UTF-8",
                    "LANG=en_US.UTF-8",
                    "PIP_NO_CACHE_DIR=off"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:20fbb8e23df69a54ce461d8faa2901c877ddea87208f1e51d826f23e0841fc66",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "python27-docker",
                    "description": "Python 2.7 available as docker container is a base platform for building and running various Python 2.7 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "io.k8s.description": "Python 2.7 available as docker container is a base platform for building and running various Python 2.7 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "io.k8s.display-name": "Python 2.7",
                    "io.openshift.builder-version": "\"3704f8c\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,python,python27,rh-python27",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/python-27-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Python 2.7 applications",
                    "vendor": "CentOS",
                    "version": "2.7"
                  }
                },
                "Architecture": "amd64",
                "Size": 264023350
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:cc0ddecc531466cdadca9ec38c3a05c9c6093f57c2a13b1ee713a24147b57600",
                  "size": 7836280,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:38838b2f6d95cec92b5ebeaba00f384c4190e5eba31c460b40c3435f620f7e30",
                  "size": 3788,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bac0ff76e28137f6b1ef4054cd4945ef574595f30e603ef1e46916101dcd4564",
                  "size": 176207,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:a1e22e37e72c2f49c44aec2b8a894fff295bd18d4368a745aa6d4f0e7a6e2099",
                  "size": 90675631,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:585bb12c7a1b96fe88e27ee0b3f01313a96815b4752c323a72cd5fc9934e67e6",
                  "size": 86163942,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:69c48ed7f7b2244305d4c2059f48b0ccbbb881f3983824a71e103a732b7d1173",
                  "size": 2629,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:b87c929aa75585378d732767207eefa942e43733bc579382999ebbd6e7b948df",
                  "size": 4194,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:77c1ad2a32c58b39a1f61c8b0b7e8871b2bf77c2cae95f8f87d8481ff2b96e9e",
                  "size": 5716390,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:751a3cd1905914389fe568c25b3d5367cd705a0e4f81970a361f670ce891baf7",
                "selfLink": "/oapi/v1/images/sha256%3A751a3cd1905914389fe568c25b3d5367cd705a0e4f81970a361f670ce891baf7",
                "uid": "6b4a67e5-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1063",
                "creationTimestamp": "2017-12-11T13:15:55Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "openshift/ruby-20-centos7@sha256:751a3cd1905914389fe568c25b3d5367cd705a0e4f81970a361f670ce891baf7",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "54ccc57a4a570a0bcd629bdd69d1801191e255fd5ac0494f5beb391144679ce5",
                "Parent": "2ebac9510b96b4f4cb00c2db3c0240949ed876e404314d45b5d952514960a4e7",
                "Created": "2016-12-21T12:33:51Z",
                "Container": "37ad27ba07e99c36abcf3b3571c3f77e903ba289dffaef23fb8e33b83910fd37",
                "ContainerConfig": {
                  "Hostname": "d6dcf178f680",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "RUBY_VERSION=2.0"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=70976f9c15d6109405ec85994284d345df29a301"
                  ],
                  "Image": "sha256:af9e8970f70141cb05c57179af365e0fd3e0f044c78ba2c7b0eb89523f5ccef7",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161102",
                    "io.k8s.description": "Platform for building and running Ruby 2.0 applications",
                    "io.k8s.display-name": "Ruby 2.0",
                    "io.openshift.builder-base-version": "a8deee2",
                    "io.openshift.builder-version": "70976f9c15d6109405ec85994284d345df29a301",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,ruby,ruby20",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "DockerVersion": "1.12.2-rc2",
                "Author": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                "Config": {
                  "Hostname": "d6dcf178f680",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "RUBY_VERSION=2.0"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:af9e8970f70141cb05c57179af365e0fd3e0f044c78ba2c7b0eb89523f5ccef7",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161102",
                    "io.k8s.description": "Platform for building and running Ruby 2.0 applications",
                    "io.k8s.display-name": "Ruby 2.0",
                    "io.openshift.builder-base-version": "a8deee2",
                    "io.openshift.builder-version": "70976f9c15d6109405ec85994284d345df29a301",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,ruby,ruby20",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "Architecture": "amd64",
                "Size": 156661559
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 32,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:08d48e6f1cff259389732d35307bb877215fa28867cdaff50c1dbd6e0b993c1f",
                  "size": 70481699,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:147e60d427392d6f696273d0b633722bc6a7dc7af0c90a8f4b29777dade6002f",
                  "size": 255,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:71d046d973b92e351cf8391ec66e2e7e5fa252e2fb3cc6cd5881f2c368207777",
                  "size": 67962493,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:85dab2e0d129ed4c4f1da157574c0f5d66a54222d7ac2958093d01b00d487335",
                  "size": 1957,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:97ec208e4c527d9919ac0a4c4fe7f2417ff6003c664026e44e668569de927f39",
                  "size": 18211001,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:5cdb4413c0b879e5292e05ab6a38a9d2264c10595f43f2896622bc0ed288ce00",
                  "size": 1709,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:ccc6776c08cdfac3897efb44c62f4b8c45154313009ab5946b12fa7007b7037d",
                  "size": 1177,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:da9e6639c52c2c6c75d63dd5e8432ff95d081af56bc48068ca755132d8419ba8",
                  "size": 1236,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v1+json"
            },
            {
              "metadata": {
                "name": "sha256:78ce032147fc4fa66006ce4472650be2de2b4772e955760192444337a8c1dc8f",
                "selfLink": "/oapi/v1/images/sha256%3A78ce032147fc4fa66006ce4472650be2de2b4772e955760192444337a8c1dc8f",
                "uid": "6bdda56f-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1071",
                "creationTimestamp": "2017-12-11T13:15:56Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "openshift/wildfly-81-centos7@sha256:78ce032147fc4fa66006ce4472650be2de2b4772e955760192444337a8c1dc8f",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:00ba244ea9af886271ff243b6cf3482a7183c8fbc354cbc4fb217ca597c5acbd",
                "Created": "2017-11-13T02:36:19Z",
                "Container": "3dc0304e14d92c2fd01101158c5cf165947e12f9410a8673000dac353d42117b",
                "ContainerConfig": {
                  "Hostname": "1b0d6163fdc2",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "WILDFLY_VERSION=8.1",
                    "WILDFLY_VERSION_BIN=8.1.0.Final",
                    "MAVEN_VERSION=3.3.9"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=632df27"
                  ],
                  "Image": "sha256:db2e1c0a23a686bd3254edf6f9465a6b26c74e2ecdd39c6d2b43b9cbaa52bf63",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161214",
                    "com.redhat.deployments-dir": "/wildfly/standalone/deployments",
                    "io.k8s.description": "Platform for building and running JEE applications on WildFly 8.1",
                    "io.k8s.display-name": "WildFly 8.1",
                    "io.openshift.builder-base-version": "bfd4736",
                    "io.openshift.builder-version": "632df27",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.destination": "/opt/s2i/destination",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,wildfly,wildfly81",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "DockerVersion": "1.12.6",
                "Author": "Ben Parees \u003cbparees@redhat.com\u003e",
                "Config": {
                  "Hostname": "1b0d6163fdc2",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "WILDFLY_VERSION=8.1",
                    "WILDFLY_VERSION_BIN=8.1.0.Final",
                    "MAVEN_VERSION=3.3.9"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:db2e1c0a23a686bd3254edf6f9465a6b26c74e2ecdd39c6d2b43b9cbaa52bf63",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161214",
                    "com.redhat.deployments-dir": "/wildfly/standalone/deployments",
                    "io.k8s.description": "Platform for building and running JEE applications on WildFly 8.1",
                    "io.k8s.display-name": "WildFly 8.1",
                    "io.openshift.builder-base-version": "bfd4736",
                    "io.openshift.builder-version": "632df27",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.destination": "/opt/s2i/destination",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,wildfly,wildfly81",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "Architecture": "amd64",
                "Size": 460528768
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729",
                  "size": 70389679,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:734fb161cf896cf5c25a9a857a4b4d267bb5a59d5acf9ba846278ab3f3d1f5d5",
                  "size": 256,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:78efc9e155c4f5ac3665c4ef14339c305672468520dc0d5ad5a254ce90a1ec28",
                  "size": 68747156,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:8a3400b7e31a55323583e3d585b3b0be56d9f7ae563187aec96d47ef5419982a",
                  "size": 1979,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:8279650f4b517848c5358c522edc060051f970803bd6505354a2ed0eccd7028f",
                  "size": 202115230,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:b729d26dda296de3695608a634d2cc8a5aaf254e942a088615fbb68b6160a857",
                  "size": 1598297,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:67c4a9f911d581b09a8526c937afb94533afec5c1bdf949073f98450dc6b4b42",
                  "size": 2287,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:e3a16f6f8a426cc5f79d711b8682a9842c4556850263a35e2c61c8e673b0b344",
                  "size": 5404,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:3f6eb2ff35e209fbbcafca60496eb9ca415520921d96d10986d277d65fb3b9f0",
                  "size": 967,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:3a53e3ec3f7e869cf0289e9ad6ebe0885e64ea559918f2547492678b0d79c3c1",
                  "size": 4234,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:517ddcbda8cfb337e963cc61656ff8297b176f46b17ec6abd0b0ef052b2bafbe",
                  "size": 117651082,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:7bbc639e8cb6404682957a671f16408b0d039998671c96bd2cb34a224a820e5a",
                "selfLink": "/oapi/v1/images/sha256%3A7bbc639e8cb6404682957a671f16408b0d039998671c96bd2cb34a224a820e5a",
                "uid": "6a529cb3-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1048",
                "creationTimestamp": "2017-12-11T13:15:53Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "openshift/python-33-centos7@sha256:7bbc639e8cb6404682957a671f16408b0d039998671c96bd2cb34a224a820e5a",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "71a4b96d4599b64927ee87a992aada7bcd3d48d5210a6fef4c3d14c3888d642b",
                "Parent": "39b503882d08c21f66c672277bdd5110b0baddb46716eaf9058fae9402a0c201",
                "Created": "2016-12-21T12:17:17Z",
                "Container": "c4b2a9758302bd4f7be05bee043ebc47bb77716df39c2364b6f165eccec5b80e",
                "ContainerConfig": {
                  "Hostname": "d6dcf178f680",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/.local/bin/:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "PYTHON_VERSION=3.3"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=d4fb4e68ba509d1cbf06c0ce7adee19c6d5e17f3"
                  ],
                  "Image": "sha256:29c5a453288d1654c884bc03ba57d322f0133e37e33cf25a259b096f33a50d6f",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161102",
                    "io.k8s.description": "Platform for building and running Python 3.3 applications",
                    "io.k8s.display-name": "Python 3.3",
                    "io.openshift.builder-base-version": "a8deee2",
                    "io.openshift.builder-version": "d4fb4e68ba509d1cbf06c0ce7adee19c6d5e17f3",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,python,python33",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "DockerVersion": "1.12.2-rc2",
                "Author": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                "Config": {
                  "Hostname": "d6dcf178f680",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/.local/bin/:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "PYTHON_VERSION=3.3"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:29c5a453288d1654c884bc03ba57d322f0133e37e33cf25a259b096f33a50d6f",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161102",
                    "io.k8s.description": "Platform for building and running Python 3.3 applications",
                    "io.k8s.display-name": "Python 3.3",
                    "io.openshift.builder-base-version": "a8deee2",
                    "io.openshift.builder-version": "d4fb4e68ba509d1cbf06c0ce7adee19c6d5e17f3",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,python,python33",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "Architecture": "amd64",
                "Size": 215624792
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 32,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:08d48e6f1cff259389732d35307bb877215fa28867cdaff50c1dbd6e0b993c1f",
                  "size": 70481699,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:147e60d427392d6f696273d0b633722bc6a7dc7af0c90a8f4b29777dade6002f",
                  "size": 255,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:71d046d973b92e351cf8391ec66e2e7e5fa252e2fb3cc6cd5881f2c368207777",
                  "size": 67962493,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:85dab2e0d129ed4c4f1da157574c0f5d66a54222d7ac2958093d01b00d487335",
                  "size": 1957,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:45fbf4a56350987213470cdf68670a9841c4482c15597d1b0943049ab97c9513",
                  "size": 75446484,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:41afa00c758cd50856589a7777ebbb567bb205308443f9890816fa6b03f9f82a",
                  "size": 2152,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:f2b3e29a4196fcb24e151238d998437aa022944836e5d503ec63b9e1c0a3fa4c",
                  "size": 693,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:4b0abd05ed9f98f9de91e83ec454e74e899e577206b969575647ce609422523c",
                  "size": 1729027,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v1+json"
            },
            {
              "metadata": {
                "name": "sha256:7cd33ccc63b8005810aedee0444472cc84c3e3c38fe9cd147edb964e712a1068",
                "selfLink": "/oapi/v1/images/sha256%3A7cd33ccc63b8005810aedee0444472cc84c3e3c38fe9cd147edb964e712a1068",
                "uid": "66c02608-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1013",
                "creationTimestamp": "2017-12-11T13:15:47Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "openshift/mysql-55-centos7@sha256:7cd33ccc63b8005810aedee0444472cc84c3e3c38fe9cd147edb964e712a1068",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "bce9ef2d20f6915fee6a1e60a4950e7e47baa9d79548f2256131d3829523b5e2",
                "Parent": "c066b12cac39ed0b5300dd58a472849fa2f032c78f23bd4d2a44b398cb2bac55",
                "Created": "2016-12-12T21:32:06Z",
                "Container": "a9e801a7c7a69d75f3eed8cb755a0f352bef63bdf5a455316b02360edd6eee2a",
                "ContainerConfig": {
                  "Hostname": "d6dcf178f680",
                  "User": "27",
                  "ExposedPorts": {
                    "3306/tcp": {}
                  },
                  "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "MYSQL_VERSION=5.5",
                    "HOME=/var/lib/mysql",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/mysql",
                    "MYSQL_PREFIX=/opt/rh/mysql55/root/usr",
                    "ENABLED_COLLECTIONS=mysql55",
                    "BASH_ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/mysql/scl_enable"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=26c5afc"
                  ],
                  "Image": "sha256:63208d354355f24707ae69bcc6fd49b39cf547ce608c2e945497975c5f0233c0",
                  "Volumes": {
                    "/var/lib/mysql/data": {}
                  },
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161102",
                    "io.k8s.description": "MySQL is a multi-user, multi-threaded SQL database server",
                    "io.k8s.display-name": "MySQL 5.5",
                    "io.openshift.builder-version": "26c5afc",
                    "io.openshift.expose-services": "3306:mysql",
                    "io.openshift.tags": "database,mysql,mysql55",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "DockerVersion": "1.12.2-rc2",
                "Author": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                "Config": {
                  "Hostname": "d6dcf178f680",
                  "User": "27",
                  "ExposedPorts": {
                    "3306/tcp": {}
                  },
                  "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "MYSQL_VERSION=5.5",
                    "HOME=/var/lib/mysql",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/mysql",
                    "MYSQL_PREFIX=/opt/rh/mysql55/root/usr",
                    "ENABLED_COLLECTIONS=mysql55",
                    "BASH_ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/mysql/scl_enable"
                  ],
                  "Cmd": [
                    "run-mysqld"
                  ],
                  "Image": "sha256:63208d354355f24707ae69bcc6fd49b39cf547ce608c2e945497975c5f0233c0",
                  "Volumes": {
                    "/var/lib/mysql/data": {}
                  },
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161102",
                    "io.k8s.description": "MySQL is a multi-user, multi-threaded SQL database server",
                    "io.k8s.display-name": "MySQL 5.5",
                    "io.openshift.builder-version": "26c5afc",
                    "io.openshift.expose-services": "3306:mysql",
                    "io.openshift.tags": "database,mysql,mysql55",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "Architecture": "amd64",
                "Size": 127359164
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 32,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:08d48e6f1cff259389732d35307bb877215fa28867cdaff50c1dbd6e0b993c1f",
                  "size": 70481699,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:edb0d8ed634dee038ce4faff40af2049603e118394dd5438c1c6d66de343d92a",
                  "size": 56868334,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:e506889419db8670d8bfb1dde20f76c95d1577845f4cab7ceba43673ed86fe3e",
                  "size": 8405,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:f40909bb3968fc890fca09a65dcf045450c1db46ed19cb816076c22c53b2682f",
                  "size": 165,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:e2bda14c15e601bb2147ba9eedefff7e526e7b47ac27a51079da65ae78606a6d",
                  "size": 529,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v1+json"
            },
            {
              "metadata": {
                "name": "sha256:7cf1c8ef7baa7a750d5c36e82d7f4a21a300c37aaa24baff593de0031ae080f0",
                "selfLink": "/oapi/v1/images/sha256%3A7cf1c8ef7baa7a750d5c36e82d7f4a21a300c37aaa24baff593de0031ae080f0",
                "uid": "645e470f-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "922",
                "creationTimestamp": "2017-12-11T13:15:43Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "openshift/jenkins-1-centos7@sha256:7cf1c8ef7baa7a750d5c36e82d7f4a21a300c37aaa24baff593de0031ae080f0",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:2d9ffbfb5ebad694c2ec0b46a48bc459586cdcb9aa0ed39a81870acd25bda564",
                "Created": "2017-08-11T16:35:59Z",
                "Container": "0571d2db32ba5546ac8437a9fff5b279256a8e25b5f3342849bbdd88ec625d31",
                "ContainerConfig": {
                  "Hostname": "c7947be2eb9d",
                  "User": "1001",
                  "ExposedPorts": {
                    "50000/tcp": {},
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "JENKINS_VERSION=1.651",
                    "HOME=/var/lib/jenkins",
                    "JENKINS_HOME=/var/lib/jenkins"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=397d6e3"
                  ],
                  "Image": "sha256:c7b7c064b76771fdcf09b4a72911caf5297018a451c031dec16d1fc7d10a8c26",
                  "Volumes": {
                    "/var/lib/jenkins": {}
                  },
                  "Labels": {
                    "build-date": "20170801",
                    "io.openshift.builder-version": "397d6e3",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "k8s.io.description": "Jenkins is a continuous integration server",
                    "k8s.io.display-name": "Jenkins 1.651",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "openshift.io.expose-services": "8080:http",
                    "openshift.io.tags": "jenkins,jenkins1,ci",
                    "vendor": "CentOS"
                  }
                },
                "DockerVersion": "1.12.6",
                "Author": "Ben Parees \u003cbparees@redhat.com\u003e",
                "Config": {
                  "Hostname": "c7947be2eb9d",
                  "User": "1001",
                  "ExposedPorts": {
                    "50000/tcp": {},
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "JENKINS_VERSION=1.651",
                    "HOME=/var/lib/jenkins",
                    "JENKINS_HOME=/var/lib/jenkins"
                  ],
                  "Cmd": [
                    "/usr/libexec/s2i/run"
                  ],
                  "Image": "sha256:c7b7c064b76771fdcf09b4a72911caf5297018a451c031dec16d1fc7d10a8c26",
                  "Volumes": {
                    "/var/lib/jenkins": {}
                  },
                  "Labels": {
                    "build-date": "20170801",
                    "io.openshift.builder-version": "397d6e3",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "k8s.io.description": "Jenkins is a continuous integration server",
                    "k8s.io.display-name": "Jenkins 1.651",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "openshift.io.expose-services": "8080:http",
                    "openshift.io.tags": "jenkins,jenkins1,ci",
                    "vendor": "CentOS"
                  }
                },
                "Architecture": "amd64",
                "Size": 510917760
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:74f0853ba93b37c8152648905c48965c774d5a7d2de1967aef86ef0144561f62",
                  "size": 72247497,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:9450f273a660e95b8b8c3963e984ed04315a5deffafba8563181795455dbee73",
                  "size": 266188763,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:81b8b7f42fe7e11d950c92489d834c83a57cafa6db30052b62c63d5874761b04",
                  "size": 4522,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:d9bd53dcd2fd18736bf6756265eadf54c864068bfa02dee55d972baa04f3b099",
                  "size": 3674,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:0f6e47abe34ab323328867e26df897e4f0b8f33738a47e583a678941600543c4",
                  "size": 3037,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:2298acb1a2aee80bc7f49014f3b3cf33f078453c486258c35d28b514c35fc8cd",
                  "size": 172461459,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:ad9b54504eabd6f7fb190da0619f9ed1d87df4dff5d0f31e4b0766525cac096d",
                "selfLink": "/oapi/v1/images/sha256%3Aad9b54504eabd6f7fb190da0619f9ed1d87df4dff5d0f31e4b0766525cac096d",
                "uid": "6be0e1a1-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1074",
                "creationTimestamp": "2017-12-11T13:15:56Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "openshift/wildfly-101-centos7@sha256:ad9b54504eabd6f7fb190da0619f9ed1d87df4dff5d0f31e4b0766525cac096d",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:fad1e0510edd47571a387eaac322d9086cf36c12d44e211ee8fb9b3fb2aa93b0",
                "Created": "2017-11-13T02:43:24Z",
                "Container": "33c264d866c08c1b24257b1e0587a732a9d5cf835d81b31bc409639717458321",
                "ContainerConfig": {
                  "Hostname": "1b0d6163fdc2",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "WILDFLY_VERSION=10.1.0.Final",
                    "MAVEN_VERSION=3.3.9"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=632df27"
                  ],
                  "Image": "sha256:efb351a56c05e5e5b1ad5a6515992a5ccf71217118b590c049e6901d513bfdbf",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161214",
                    "com.redhat.deployments-dir": "/wildfly/standalone/deployments",
                    "io.k8s.description": "Platform for building and running JEE applications on WildFly 10.1.0.Final",
                    "io.k8s.display-name": "WildFly 10.1.0.Final",
                    "io.openshift.builder-base-version": "bfd4736",
                    "io.openshift.builder-version": "632df27",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.destination": "/opt/s2i/destination",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,wildfly,wildfly10",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "DockerVersion": "1.12.6",
                "Author": "Ben Parees \u003cbparees@redhat.com\u003e",
                "Config": {
                  "Hostname": "1b0d6163fdc2",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "WILDFLY_VERSION=10.1.0.Final",
                    "MAVEN_VERSION=3.3.9"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:efb351a56c05e5e5b1ad5a6515992a5ccf71217118b590c049e6901d513bfdbf",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161214",
                    "com.redhat.deployments-dir": "/wildfly/standalone/deployments",
                    "io.k8s.description": "Platform for building and running JEE applications on WildFly 10.1.0.Final",
                    "io.k8s.display-name": "WildFly 10.1.0.Final",
                    "io.openshift.builder-base-version": "bfd4736",
                    "io.openshift.builder-version": "632df27",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.destination": "/opt/s2i/destination",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,wildfly,wildfly10",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "Architecture": "amd64",
                "Size": 506605784
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:45a2e645736c4c66ef34acce2407ded21f7a9b231199d3b92d6c9776df264729",
                  "size": 70389679,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:734fb161cf896cf5c25a9a857a4b4d267bb5a59d5acf9ba846278ab3f3d1f5d5",
                  "size": 256,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:78efc9e155c4f5ac3665c4ef14339c305672468520dc0d5ad5a254ce90a1ec28",
                  "size": 68747156,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:8a3400b7e31a55323583e3d585b3b0be56d9f7ae563187aec96d47ef5419982a",
                  "size": 1979,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:2350e7bb6e5b7e684aa0fe92ca7f666fb033e9b84f1dad539b71d1cf5c387495",
                  "size": 225156764,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:6a194688ba8ad46e5c11fda87b2fd1e5df15abbfd56f6e645b48fdc81352691c",
                  "size": 1598303,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:289e0b2d018ed2fcaf728b583815ea5f021a90d66471b14755002983c209dcab",
                  "size": 2672,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:2e1ac17db6401beeb865ad211669d81ad247d18797ce1aa4bff3d798687c2390",
                  "size": 4658,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:749f33070789740aa4b56aa5c9a2b36700af2209087e6b37f82036a7ea89744f",
                  "size": 968,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:1a5dadae1117a400b25a6034894ce2eddd6482c69394f91c522a000be3a16c54",
                  "size": 4923,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:15873e0a8d2f5b0582d58f28b0fb9f3e8b20091065e3c8aab0ab26961d6039ec",
                  "size": 140686255,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:b97a07ed71894c744436878cd18a88c678df9aeacbc0d0382cd485f6f4434c6b",
                "selfLink": "/oapi/v1/images/sha256%3Ab97a07ed71894c744436878cd18a88c678df9aeacbc0d0382cd485f6f4434c6b",
                "uid": "6a50f10f-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1046",
                "creationTimestamp": "2017-12-11T13:15:53Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/python-35-centos7@sha256:b97a07ed71894c744436878cd18a88c678df9aeacbc0d0382cd485f6f4434c6b",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:03d22bbef7d392e3a98bd1070f502193f3a394dd4d60f56bd6b57ce09c5a49b7",
                "Created": "2017-12-05T12:07:36Z",
                "Container": "e7f863bb32b8bb2373515bb0e686fc2a5128307c5caf383dfb5c2562ceae2e61",
                "ContainerConfig": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/.local/bin/:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Python 3.5 applications",
                    "DESCRIPTION=Python 3.5 available as docker container is a base platform for building and running various Python 3.5 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "PYTHON_VERSION=3.5",
                    "PYTHONUNBUFFERED=1",
                    "PYTHONIOENCODING=UTF-8",
                    "LC_ALL=en_US.UTF-8",
                    "LANG=en_US.UTF-8",
                    "PIP_NO_CACHE_DIR=off"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"3704f8c\""
                  ],
                  "Image": "sha256:371159a9751f178ef6fd5f0654b21431a517a18dd33f16518e106bdca29be20f",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "python35-docker",
                    "description": "Python 3.5 available as docker container is a base platform for building and running various Python 3.5 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "io.k8s.description": "Python 3.5 available as docker container is a base platform for building and running various Python 3.5 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "io.k8s.display-name": "Python 3.5",
                    "io.openshift.builder-version": "\"3704f8c\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,python,python35,rh-python35",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/python-35-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Python 3.5 applications",
                    "vendor": "CentOS",
                    "version": "3.5"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/.local/bin/:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Python 3.5 applications",
                    "DESCRIPTION=Python 3.5 available as docker container is a base platform for building and running various Python 3.5 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "PYTHON_VERSION=3.5",
                    "PYTHONUNBUFFERED=1",
                    "PYTHONIOENCODING=UTF-8",
                    "LC_ALL=en_US.UTF-8",
                    "LANG=en_US.UTF-8",
                    "PIP_NO_CACHE_DIR=off"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:371159a9751f178ef6fd5f0654b21431a517a18dd33f16518e106bdca29be20f",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "python35-docker",
                    "description": "Python 3.5 available as docker container is a base platform for building and running various Python 3.5 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "io.k8s.description": "Python 3.5 available as docker container is a base platform for building and running various Python 3.5 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "io.k8s.display-name": "Python 3.5",
                    "io.openshift.builder-version": "\"3704f8c\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,python,python35,rh-python35",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/python-35-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Python 3.5 applications",
                    "vendor": "CentOS",
                    "version": "3.5"
                  }
                },
                "Architecture": "amd64",
                "Size": 259147102
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:cc0ddecc531466cdadca9ec38c3a05c9c6093f57c2a13b1ee713a24147b57600",
                  "size": 7836280,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:38838b2f6d95cec92b5ebeaba00f384c4190e5eba31c460b40c3435f620f7e30",
                  "size": 3788,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bac0ff76e28137f6b1ef4054cd4945ef574595f30e603ef1e46916101dcd4564",
                  "size": 176207,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:a1e22e37e72c2f49c44aec2b8a894fff295bd18d4368a745aa6d4f0e7a6e2099",
                  "size": 90675631,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:5c2e073397a4e9df6d0424b0c88276758860596cb9d50ffa48aa7ca621c8500c",
                  "size": 81472965,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:d8f0b575ab941f3c88ad030ad18176b53b170a81fc329e2e15cc93dd3097fbcf",
                  "size": 2627,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:ae14c9f5408f36b28ae147425e8d34c29fbb652bb3c1296cbca4cb92d1624c84",
                  "size": 4196,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:7fe397214394e1a0838ad7fed4aebc3e72382e262bd369d12369481db2e68b37",
                  "size": 5531065,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:bcc43d1330543d7a6bdf0cb30bd6cf884900ce44f22c0076046537920ab5ea09",
                "selfLink": "/oapi/v1/images/sha256%3Abcc43d1330543d7a6bdf0cb30bd6cf884900ce44f22c0076046537920ab5ea09",
                "uid": "68b2ee42-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1032",
                "creationTimestamp": "2017-12-11T13:15:50Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/postgresql-94-centos7@sha256:bcc43d1330543d7a6bdf0cb30bd6cf884900ce44f22c0076046537920ab5ea09",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:26bb50eedf1af9494748c9c3da7b99fe2b35308ed7954b6de501424cc346a17f",
                "Created": "2017-12-07T11:13:50Z",
                "Container": "ee3b024ada5b80515bde27ffbc788575fc53954aeb135920d22c186c645daa20",
                "ContainerConfig": {
                  "Hostname": "493b4b65a25a",
                  "User": "26",
                  "ExposedPorts": {
                    "5432/tcp": {}
                  },
                  "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "POSTGRESQL_VERSION=9.4",
                    "POSTGRESQL_PREV_VERSION=9.2",
                    "HOME=/var/lib/pgsql",
                    "PGUSER=postgres",
                    "SUMMARY=PostgreSQL is an advanced Object-Relational database management system",
                    "DESCRIPTION=PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/postgresql",
                    "ENABLED_COLLECTIONS=rh-postgresql94",
                    "BASH_ENV=/usr/share/container-scripts/postgresql/scl_enable",
                    "ENV=/usr/share/container-scripts/postgresql/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/postgresql/scl_enable"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"8230ed1\""
                  ],
                  "Image": "sha256:4dcc44ae46be4c0abb7a58b41766b3f81f2bdde705e21b0b0b1201dd0a45862f",
                  "Volumes": {
                    "/var/lib/pgsql/data": {}
                  },
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-postgresql94-docker",
                    "description": "PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
                    "io.k8s.description": "PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
                    "io.k8s.display-name": "PostgreSQL 9.4",
                    "io.openshift.builder-version": "\"8230ed1\"",
                    "io.openshift.expose-services": "5432:postgresql",
                    "io.openshift.tags": "database,postgresql,postgresql94,rh-postgresql94",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/postgresql-94-centos7",
                    "release": "1",
                    "summary": "PostgreSQL is an advanced Object-Relational database management system",
                    "vendor": "CentOS",
                    "version": "9.4"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "493b4b65a25a",
                  "User": "26",
                  "ExposedPorts": {
                    "5432/tcp": {}
                  },
                  "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "POSTGRESQL_VERSION=9.4",
                    "POSTGRESQL_PREV_VERSION=9.2",
                    "HOME=/var/lib/pgsql",
                    "PGUSER=postgres",
                    "SUMMARY=PostgreSQL is an advanced Object-Relational database management system",
                    "DESCRIPTION=PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/postgresql",
                    "ENABLED_COLLECTIONS=rh-postgresql94",
                    "BASH_ENV=/usr/share/container-scripts/postgresql/scl_enable",
                    "ENV=/usr/share/container-scripts/postgresql/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/postgresql/scl_enable"
                  ],
                  "Cmd": [
                    "run-postgresql"
                  ],
                  "Image": "sha256:4dcc44ae46be4c0abb7a58b41766b3f81f2bdde705e21b0b0b1201dd0a45862f",
                  "Volumes": {
                    "/var/lib/pgsql/data": {}
                  },
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-postgresql94-docker",
                    "description": "PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
                    "io.k8s.description": "PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
                    "io.k8s.display-name": "PostgreSQL 9.4",
                    "io.openshift.builder-version": "\"8230ed1\"",
                    "io.openshift.expose-services": "5432:postgresql",
                    "io.openshift.tags": "database,postgresql,postgresql94,rh-postgresql94",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/postgresql-94-centos7",
                    "release": "1",
                    "summary": "PostgreSQL is an advanced Object-Relational database management system",
                    "vendor": "CentOS",
                    "version": "9.4"
                  }
                },
                "Architecture": "amd64",
                "Size": 110104511
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:fe6fa3e008e0f790083a72ff23053e955dccc431fa2dc9a521a13b9661398e5c",
                  "size": 310,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:8105dc739e2ecb5557b14fd4e7db72a63109ce9f401967f4dc30330737c648f9",
                  "size": 36655413,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:b11903d05c742a60246fa873232a11861ea4b658e1a222abf8d2e47711080ac2",
                  "size": 12615,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:bd971b467b08b8dbbbfee26bad80dcaa0110b184e0a8dd6c1b0460a6d6f5d332",
                "selfLink": "/oapi/v1/images/sha256%3Abd971b467b08b8dbbbfee26bad80dcaa0110b184e0a8dd6c1b0460a6d6f5d332",
                "uid": "67d4f91c-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1023",
                "creationTimestamp": "2017-12-11T13:15:49Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "openshift/nodejs-010-centos7@sha256:bd971b467b08b8dbbbfee26bad80dcaa0110b184e0a8dd6c1b0460a6d6f5d332",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "b3b1ce7cdd2ce7872a47601b7e3da87658b38e9035ad5d24faa325b681c4af8d",
                "Parent": "51c34328d22d2456e6d532f86e0c5e8d8606a0d75d0975fbadf3d41fb361925f",
                "Created": "2016-11-14T17:57:00Z",
                "Container": "6ed29b37771bea2fc0ace8727bdc7c060224e1fb4e0f1450018ad19728247e3e",
                "ContainerConfig": {
                  "Hostname": "719d8d68f3dc",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/node_modules/.bin/:/opt/app-root/src/.npm-global/bin/:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NPM_RUN=start",
                    "NODEJS_VERSION=0.10",
                    "NPM_CONFIG_PREFIX=/opt/app-root/src/.npm-global"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=bbaf6847c02b403f1c216c4759e71735367056a0"
                  ],
                  "Image": "sha256:5bcf62dda02b2b58d6be59ef74af8dfcee0dbb582740a7b3789db83fe428781f",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20160906",
                    "com.redhat.deployments-dir": "/opt/app-root/src",
                    "com.redhat.dev-mode": "DEV_MODE:false",
                    "com.redhat.dev-mode.port": "DEBUG_PORT:5858",
                    "io.k8s.description": "Platform for building and running Node.js 0.10 applications",
                    "io.k8s.display-name": "Node.js 0.10",
                    "io.openshift.builder-base-version": "8c4d31f",
                    "io.openshift.builder-version": "bbaf6847c02b403f1c216c4759e71735367056a0",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,nodejs,nodejs010",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "DockerVersion": "1.12.2-rc2",
                "Author": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                "Config": {
                  "Hostname": "719d8d68f3dc",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/node_modules/.bin/:/opt/app-root/src/.npm-global/bin/:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NPM_RUN=start",
                    "NODEJS_VERSION=0.10",
                    "NPM_CONFIG_PREFIX=/opt/app-root/src/.npm-global"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:5bcf62dda02b2b58d6be59ef74af8dfcee0dbb582740a7b3789db83fe428781f",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20160906",
                    "com.redhat.deployments-dir": "/opt/app-root/src",
                    "com.redhat.dev-mode": "DEV_MODE:false",
                    "com.redhat.dev-mode.port": "DEBUG_PORT:5858",
                    "io.k8s.description": "Platform for building and running Node.js 0.10 applications",
                    "io.k8s.display-name": "Node.js 0.10",
                    "io.openshift.builder-base-version": "8c4d31f",
                    "io.openshift.builder-version": "bbaf6847c02b403f1c216c4759e71735367056a0",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,nodejs,nodejs010",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "Architecture": "amd64",
                "Size": 161122011
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:8d30e94188e7f13642d975e70c484e48c33867f3ede3277df1145803fa996ac1",
                  "size": 70591526,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:9e0d025d6982a31ae6eff14fbff14a879040640dd2220928415454aad8ad3e8d",
                  "size": 253,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:e7c36c73b545d32b5a78ee50d87f356f63fd633f2f602f49e8d97329df6107ef",
                  "size": 69076152,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:279efb65a614860830f59f0f6eff05c76bfe0cc123ca0a13a946d845c5b7b055",
                  "size": 1958,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 32,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:ba5278dc9861c3a6b088a0d5ddc5e49541cdb669c02283940a46c83581b3fa8a",
                  "size": 13830226,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:603b1199503e4ead5451b274de4fa597c98ab9f90aec5bd03c1241194868012f",
                  "size": 1750,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:eb391703fc7613c5ed27507ac3885cd28a85f3348e76a8f763e215c8e7211cae",
                  "size": 651,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:690db3aefd04ffa2c8b65bcab196b885eec05f964e693f7c796bf62cced99710",
                  "size": 4732493,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:adbe087ab826899217ac3f4bc7aab0e8d6a0054f99c2852334f8364cf384eb93",
                  "size": 2886970,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v1+json"
            },
            {
              "metadata": {
                "name": "sha256:bf746d7851d334a3a6afb0842e50081abd9c1d2c2c28123bc5c55c0e2fd2b3bb",
                "selfLink": "/oapi/v1/images/sha256%3Abf746d7851d334a3a6afb0842e50081abd9c1d2c2c28123bc5c55c0e2fd2b3bb",
                "uid": "6653b6d5-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1010",
                "creationTimestamp": "2017-12-11T13:15:46Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/mongodb-32-centos7@sha256:bf746d7851d334a3a6afb0842e50081abd9c1d2c2c28123bc5c55c0e2fd2b3bb",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:71b596f873ea575b44ccff026d2184d0ae23463a61d4b876836ff4aa8ad1969f",
                "Created": "2017-11-21T07:38:14Z",
                "Container": "92fb7240f970ec32dc59c7bc5cb7c468dc4cf1167832716f8245735e7985dc2c",
                "ContainerConfig": {
                  "Hostname": "38052bd170ac",
                  "User": "184",
                  "ExposedPorts": {
                    "27017/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=MongoDB NoSQL database server",
                    "DESCRIPTION=MongoDB (from humongous) is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. This container image contains programs to run mongod server.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/var/lib/mongodb",
                    "BASH_ENV=${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "ENV=${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "PROMPT_COMMAND=. ${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "MONGODB_VERSION=3.2",
                    "APP_DATA=/opt/app-root/src",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/mongodb",
                    "ENABLED_COLLECTIONS=rh-mongodb32"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"c971482\""
                  ],
                  "Image": "sha256:79a5ad98bc50255041f000696da6bd688396a1c09694889320c4d20f4db30af3",
                  "Volumes": {
                    "/var/lib/mongodb/data": {}
                  },
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20170911",
                    "com.redhat.component": "rh-mongodb32-docker",
                    "description": "MongoDB (from humongous) is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. This container image contains programs to run mongod server.",
                    "io.k8s.description": "MongoDB (from humongous) is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. This container image contains programs to run mongod server.",
                    "io.k8s.display-name": "MongoDB 3.2",
                    "io.openshift.builder-version": "\"c971482\"",
                    "io.openshift.expose-services": "27017:mongodb",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "database,mongodb,rh-mongodb32",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/mongodb-32-centos7",
                    "release": "1",
                    "summary": "MongoDB NoSQL database server",
                    "vendor": "CentOS",
                    "version": "3.2"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "38052bd170ac",
                  "User": "184",
                  "ExposedPorts": {
                    "27017/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=MongoDB NoSQL database server",
                    "DESCRIPTION=MongoDB (from humongous) is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. This container image contains programs to run mongod server.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/var/lib/mongodb",
                    "BASH_ENV=${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "ENV=${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "PROMPT_COMMAND=. ${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "MONGODB_VERSION=3.2",
                    "APP_DATA=/opt/app-root/src",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/mongodb",
                    "ENABLED_COLLECTIONS=rh-mongodb32"
                  ],
                  "Cmd": [
                    "run-mongod"
                  ],
                  "Image": "sha256:79a5ad98bc50255041f000696da6bd688396a1c09694889320c4d20f4db30af3",
                  "Volumes": {
                    "/var/lib/mongodb/data": {}
                  },
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20170911",
                    "com.redhat.component": "rh-mongodb32-docker",
                    "description": "MongoDB (from humongous) is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. This container image contains programs to run mongod server.",
                    "io.k8s.description": "MongoDB (from humongous) is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. This container image contains programs to run mongod server.",
                    "io.k8s.display-name": "MongoDB 3.2",
                    "io.openshift.builder-version": "\"c971482\"",
                    "io.openshift.expose-services": "27017:mongodb",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "database,mongodb,rh-mongodb32",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/mongodb-32-centos7",
                    "release": "1",
                    "summary": "MongoDB NoSQL database server",
                    "vendor": "CentOS",
                    "version": "3.2"
                  }
                },
                "Architecture": "amd64",
                "Size": 210733567
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:d9aaf4d82f249dc101a6638ff5177fe926cdebfa6c42d874dfa5029533da0e72",
                  "size": 73386947,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:fd6cdcc72ac15cb88cda14eec241a8eb2940633656a0896c42f23c90989e4199",
                  "size": 8067336,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:db2941ade4ab37b514562881ab8566907e177bd09f36cd17c0ac1d8f8df0a411",
                  "size": 3785,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bb822428f55eb844a30f63c209e6c85b76c4387f9f64ece614bcb9ab4cbb00b4",
                  "size": 161360,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:afe3cae484dfecaa6a4143a1feed09f62f0ee8e1a67a28a8467c4ca777574fa7",
                  "size": 128924474,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:4a46a17e525f4ca8e4a9b4aa7e91f4910753896e4db4b7da0b7de56657a15b08",
                  "size": 424,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:f6d6df8d9679abc42b2dde2e1e9386aa79e9c64a99066755fa59554fb9444fd4",
                  "size": 11619,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:9a8efe85420e2fd8aa6ed2ebb33415ce5a8dffa9f114999a6746ab7433f07fb3",
                  "size": 164758,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:cbd3c2561a1967ad94152d6222a131aece30f4cc1fc9d5d67ef326968674e173",
                "selfLink": "/oapi/v1/images/sha256%3Acbd3c2561a1967ad94152d6222a131aece30f4cc1fc9d5d67ef326968674e173",
                "uid": "645ee24d-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "923",
                "creationTimestamp": "2017-12-11T13:15:43Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "openshift/jenkins-2-centos7@sha256:cbd3c2561a1967ad94152d6222a131aece30f4cc1fc9d5d67ef326968674e173",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:bcb48f227ada06ef9a368432e01027ad4596e2dea4ff2c64873b8cf5da032993",
                "Created": "2017-12-07T16:08:48Z",
                "Container": "65cca51384e3dc1a65134ff123b3035a6546685c5f47ff273c2f2e0c4135623a",
                "ContainerConfig": {
                  "Hostname": "116b14da7a37",
                  "User": "1001",
                  "ExposedPorts": {
                    "50000/tcp": {},
                    "53/tcp": {},
                    "8080/tcp": {},
                    "8443/tcp": {}
                  },
                  "Env": [
                    "HOME=/var/lib/jenkins",
                    "OPENSHIFT_CONTAINERIZED=true",
                    "KUBECONFIG=/var/lib/origin/openshift.local.config/master/admin.kubeconfig",
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "JENKINS_VERSION=2",
                    "JENKINS_HOME=/var/lib/jenkins",
                    "JENKINS_UC=https://updates.jenkins-ci.org",
                    "LANG=en_US.UTF-8",
                    "LC_ALL=en_US.UTF-8"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=cd54876"
                  ],
                  "Image": "sha256:7715bd969feabece556909af0fa6a84b8534b40bede32b1432be18e44321f1fa",
                  "Volumes": {
                    "/var/lib/jenkins": {}
                  },
                  "WorkingDir": "/var/lib/origin",
                  "Labels": {
                    "build-date": "20171128",
                    "io.k8s.description": "OpenShift Origin is a platform for developing, building, and deploying containerized applications.",
                    "io.k8s.display-name": "OpenShift Origin Application Platform",
                    "io.openshift.builder-version": "cd54876",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "openshift,core",
                    "k8s.io.description": "Jenkins is a continuous integration server",
                    "k8s.io.display-name": "Jenkins 2",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "openshift.io.expose-services": "8080:http",
                    "openshift.io.tags": "jenkins,jenkins2,ci",
                    "vendor": "CentOS"
                  }
                },
                "DockerVersion": "1.12.6",
                "Author": "Ben Parees \u003cbparees@redhat.com\u003e",
                "Config": {
                  "Hostname": "116b14da7a37",
                  "User": "1001",
                  "ExposedPorts": {
                    "50000/tcp": {},
                    "53/tcp": {},
                    "8080/tcp": {},
                    "8443/tcp": {}
                  },
                  "Env": [
                    "HOME=/var/lib/jenkins",
                    "OPENSHIFT_CONTAINERIZED=true",
                    "KUBECONFIG=/var/lib/origin/openshift.local.config/master/admin.kubeconfig",
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "JENKINS_VERSION=2",
                    "JENKINS_HOME=/var/lib/jenkins",
                    "JENKINS_UC=https://updates.jenkins-ci.org",
                    "LANG=en_US.UTF-8",
                    "LC_ALL=en_US.UTF-8"
                  ],
                  "Cmd": [
                    "/usr/libexec/s2i/run"
                  ],
                  "Image": "sha256:7715bd969feabece556909af0fa6a84b8534b40bede32b1432be18e44321f1fa",
                  "Volumes": {
                    "/var/lib/jenkins": {}
                  },
                  "WorkingDir": "/var/lib/origin",
                  "Labels": {
                    "build-date": "20171128",
                    "io.k8s.description": "OpenShift Origin is a platform for developing, building, and deploying containerized applications.",
                    "io.k8s.display-name": "OpenShift Origin Application Platform",
                    "io.openshift.builder-version": "cd54876",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "openshift,core",
                    "k8s.io.description": "Jenkins is a continuous integration server",
                    "k8s.io.display-name": "Jenkins 2",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "openshift.io.expose-services": "8080:http",
                    "openshift.io.tags": "jenkins,jenkins2,ci",
                    "vendor": "CentOS"
                  }
                },
                "Architecture": "amd64",
                "Size": 740205020
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:462eb1c196b8decc79c42fa4f1ba8438d01bcea238a1f5c959ca4b26d518d215",
                  "size": 267,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:f1b34c7da81dba44d9c805242352ff0e13b03c4580989e130b1956f25c02a4c2",
                  "size": 66022613,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:47f15391e3ad302fb573731e35e189dae768b31dd3436b5d8f512833393626bd",
                  "size": 148271053,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:b2216f7576040c9b9d7e44f08e765e215a60154e527ee2eb1cd72aaad8980f04",
                  "size": 231743634,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:107fe3e80a377ad1efb0c56f9b624538d48639ef24b695b2f60c0601574ceb83",
                  "size": 4718,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:478cd46e6be334b60aec0aec747c93a5003790f92f7ce60dc7418f3fea62b1fe",
                  "size": 6977,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:59af0b5d254b539c15868b4e787edeea5506a2a107a720df97d82035b795fbe6",
                  "size": 5666,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:9906e2180499dbf51fa86a3c236d682314c04f7addb0205a123d5afc498f044d",
                  "size": 150,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:70abd9e18f080d6f6de168ae90b13d9a97258e76869f9489a265536eb63829f9",
                  "size": 220712993,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:d2c39bc5e48d61c92d30b2edc01a798fd2c3fb7ac6aeaab453898ec6e983ecf9",
                "selfLink": "/oapi/v1/images/sha256%3Ad2c39bc5e48d61c92d30b2edc01a798fd2c3fb7ac6aeaab453898ec6e983ecf9",
                "uid": "67c0f6c2-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1021",
                "creationTimestamp": "2017-12-11T13:15:49Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/php-70-centos7@sha256:d2c39bc5e48d61c92d30b2edc01a798fd2c3fb7ac6aeaab453898ec6e983ecf9",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:5a0c6aa385e216ce9553cfd3bc1125a8619e358563e40946d5a5277f895abed0",
                "Created": "2017-12-07T10:07:51Z",
                "Container": "fba634df8c6eb646895f0ebc2176513b3ebfe69227a78f5b9b15ee66a159d036",
                "ContainerConfig": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/rh/rh-php70/root/usr/bin",
                    "SUMMARY=Platform for building and running PHP 7.0 applications",
                    "DESCRIPTION=PHP 7.0 available as docker container is a base platform for building and running various PHP 7.0 applications and frameworks. PHP is an HTML-embedded scripting language. PHP attempts to make it easy for developers to write dynamically generated web pages. PHP also offers built-in database integration for several commercial and non-commercial database management systems, so writing a database-enabled webpage with PHP is fairly simple. The most common use of PHP coding is probably as a replacement for CGI scripts.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "PHP_VERSION=7.0",
                    "PHP_VER_SHORT=70",
                    "NAME=php"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"cf998b2\""
                  ],
                  "Image": "sha256:c50b69b8e3f46c1525b4082bada686271a32955594aced204128ff3dfe885d28",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-php70-docker",
                    "description": "PHP 7.0 available as docker container is a base platform for building and running various PHP 7.0 applications and frameworks. PHP is an HTML-embedded scripting language. PHP attempts to make it easy for developers to write dynamically generated web pages. PHP also offers built-in database integration for several commercial and non-commercial database management systems, so writing a database-enabled webpage with PHP is fairly simple. The most common use of PHP coding is probably as a replacement for CGI scripts.",
                    "help": "For more information visit https://github.com/sclorg/s2i-php-container",
                    "io.k8s.description": "PHP 7.0 available as docker container is a base platform for building and running various PHP 7.0 applications and frameworks. PHP is an HTML-embedded scripting language. PHP attempts to make it easy for developers to write dynamically generated web pages. PHP also offers built-in database integration for several commercial and non-commercial database management systems, so writing a database-enabled webpage with PHP is fairly simple. The most common use of PHP coding is probably as a replacement for CGI scripts.",
                    "io.k8s.display-name": "Apache 2.4 with PHP 7.0",
                    "io.openshift.builder-version": "\"cf998b2\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,php,php70,rh-php70",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/php-70-centos7",
                    "release": "1",
                    "summary": "Platform for building and running PHP 7.0 applications",
                    "usage": "s2i build \u003cSOURCE-REPOSITORY\u003e centos/php-70-centos7:latest \u003cAPP-NAME\u003e",
                    "vendor": "CentOS",
                    "version": "7.0"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/rh/rh-php70/root/usr/bin",
                    "SUMMARY=Platform for building and running PHP 7.0 applications",
                    "DESCRIPTION=PHP 7.0 available as docker container is a base platform for building and running various PHP 7.0 applications and frameworks. PHP is an HTML-embedded scripting language. PHP attempts to make it easy for developers to write dynamically generated web pages. PHP also offers built-in database integration for several commercial and non-commercial database management systems, so writing a database-enabled webpage with PHP is fairly simple. The most common use of PHP coding is probably as a replacement for CGI scripts.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "PHP_VERSION=7.0",
                    "PHP_VER_SHORT=70",
                    "NAME=php"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:c50b69b8e3f46c1525b4082bada686271a32955594aced204128ff3dfe885d28",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-php70-docker",
                    "description": "PHP 7.0 available as docker container is a base platform for building and running various PHP 7.0 applications and frameworks. PHP is an HTML-embedded scripting language. PHP attempts to make it easy for developers to write dynamically generated web pages. PHP also offers built-in database integration for several commercial and non-commercial database management systems, so writing a database-enabled webpage with PHP is fairly simple. The most common use of PHP coding is probably as a replacement for CGI scripts.",
                    "help": "For more information visit https://github.com/sclorg/s2i-php-container",
                    "io.k8s.description": "PHP 7.0 available as docker container is a base platform for building and running various PHP 7.0 applications and frameworks. PHP is an HTML-embedded scripting language. PHP attempts to make it easy for developers to write dynamically generated web pages. PHP also offers built-in database integration for several commercial and non-commercial database management systems, so writing a database-enabled webpage with PHP is fairly simple. The most common use of PHP coding is probably as a replacement for CGI scripts.",
                    "io.k8s.display-name": "Apache 2.4 with PHP 7.0",
                    "io.openshift.builder-version": "\"cf998b2\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,php,php70,rh-php70",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/php-70-centos7",
                    "release": "1",
                    "summary": "Platform for building and running PHP 7.0 applications",
                    "usage": "s2i build \u003cSOURCE-REPOSITORY\u003e centos/php-70-centos7:latest \u003cAPP-NAME\u003e",
                    "vendor": "CentOS",
                    "version": "7.0"
                  }
                },
                "Architecture": "amd64",
                "Size": 225984976
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:cc0ddecc531466cdadca9ec38c3a05c9c6093f57c2a13b1ee713a24147b57600",
                  "size": 7836280,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:38838b2f6d95cec92b5ebeaba00f384c4190e5eba31c460b40c3435f620f7e30",
                  "size": 3788,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bac0ff76e28137f6b1ef4054cd4945ef574595f30e603ef1e46916101dcd4564",
                  "size": 176207,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:a1e22e37e72c2f49c44aec2b8a894fff295bd18d4368a745aa6d4f0e7a6e2099",
                  "size": 90675631,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:86edce5c703e0f4514849cb8e431bc56064a1af96f932dace6f2528b3f1abba4",
                  "size": 53597386,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:ba372a5048688a86a59ba0ea5ec506289111ee6a885c124ed524fdd7148e9e12",
                  "size": 2114,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:8883153cdd5f6978ebfb0b0ed8f1133b4713b0d9ae2203bbe598d5eb99e0bbdf",
                  "size": 24196,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:edf3cfc712cdd58b846c3621ee012073352c4307b3eea5816be0065e99bac7f8",
                  "size": 223840,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:d68d67cbb7cc112364d3649e236a141be191857ae992eb5c34571c9042369648",
                "selfLink": "/oapi/v1/images/sha256%3Ad68d67cbb7cc112364d3649e236a141be191857ae992eb5c34571c9042369648",
                "uid": "68c5d02c-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1036",
                "creationTimestamp": "2017-12-11T13:15:50Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/redis-32-centos7@sha256:d68d67cbb7cc112364d3649e236a141be191857ae992eb5c34571c9042369648",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:eb8c49c704f5cb09251c92af6e0f114e6466acf3d5c93f9e9ab469d58f7515e4",
                "Created": "2017-12-10T20:10:34Z",
                "Container": "263a1ec2eb1aa3616bb4e11d4085b52c8202c2521ca4d91ff068cbf128946415",
                "ContainerConfig": {
                  "Hostname": "2fa7f8cb8fec",
                  "User": "1001",
                  "ExposedPorts": {
                    "6379/tcp": {}
                  },
                  "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "REDIS_VERSION=3.2",
                    "HOME=/var/lib/redis",
                    "SUMMARY=Redis in-memory data structure store, used as database, cache and message broker",
                    "DESCRIPTION=Redis 3.2 available as docker container, is an advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets. You can run atomic operations on these types, like appending to a string; incrementing the value in a hash; pushing to a list; computing set intersection, union and difference; or getting the member with highest ranking in a sorted set. In order to achieve its outstanding performance, Redis works with an in-memory dataset. Depending on your use case, you can persist it either by dumping the dataset to disk every once in a while, or by appending each command to a log.",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/redis",
                    "REDIS_PREFIX=/opt/rh/rh-redis32/root/usr",
                    "ENABLED_COLLECTIONS=rh-redis32",
                    "BASH_ENV=/usr/share/container-scripts/redis/scl_enable",
                    "ENV=/usr/share/container-scripts/redis/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/redis/scl_enable"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"80a69e6\""
                  ],
                  "Image": "sha256:6c36e954d8fb46f9560a58816b8fa78fc7029615a49c6bfed73cd7cb695de5aa",
                  "Volumes": {
                    "/var/lib/redis/data": {}
                  },
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-redis32-docker",
                    "description": "Redis 3.2 available as docker container, is an advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets. You can run atomic operations on these types, like appending to a string; incrementing the value in a hash; pushing to a list; computing set intersection, union and difference; or getting the member with highest ranking in a sorted set. In order to achieve its outstanding performance, Redis works with an in-memory dataset. Depending on your use case, you can persist it either by dumping the dataset to disk every once in a while, or by appending each command to a log.",
                    "io.k8s.description": "Redis 3.2 available as docker container, is an advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets. You can run atomic operations on these types, like appending to a string; incrementing the value in a hash; pushing to a list; computing set intersection, union and difference; or getting the member with highest ranking in a sorted set. In order to achieve its outstanding performance, Redis works with an in-memory dataset. Depending on your use case, you can persist it either by dumping the dataset to disk every once in a while, or by appending each command to a log.",
                    "io.k8s.display-name": "Redis 3.2",
                    "io.openshift.builder-version": "\"80a69e6\"",
                    "io.openshift.expose-services": "6379:redis",
                    "io.openshift.tags": "database,redis,redis32,rh-redis32",
                    "license": "GPLv2",
                    "name": "centos/redis-32-centos7",
                    "release": "1",
                    "summary": "Redis in-memory data structure store, used as database, cache and message broker",
                    "vendor": "CentOS",
                    "version": "3.2"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "2fa7f8cb8fec",
                  "User": "1001",
                  "ExposedPorts": {
                    "6379/tcp": {}
                  },
                  "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "REDIS_VERSION=3.2",
                    "HOME=/var/lib/redis",
                    "SUMMARY=Redis in-memory data structure store, used as database, cache and message broker",
                    "DESCRIPTION=Redis 3.2 available as docker container, is an advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets. You can run atomic operations on these types, like appending to a string; incrementing the value in a hash; pushing to a list; computing set intersection, union and difference; or getting the member with highest ranking in a sorted set. In order to achieve its outstanding performance, Redis works with an in-memory dataset. Depending on your use case, you can persist it either by dumping the dataset to disk every once in a while, or by appending each command to a log.",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/redis",
                    "REDIS_PREFIX=/opt/rh/rh-redis32/root/usr",
                    "ENABLED_COLLECTIONS=rh-redis32",
                    "BASH_ENV=/usr/share/container-scripts/redis/scl_enable",
                    "ENV=/usr/share/container-scripts/redis/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/redis/scl_enable"
                  ],
                  "Cmd": [
                    "run-redis"
                  ],
                  "Image": "sha256:6c36e954d8fb46f9560a58816b8fa78fc7029615a49c6bfed73cd7cb695de5aa",
                  "Volumes": {
                    "/var/lib/redis/data": {}
                  },
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-redis32-docker",
                    "description": "Redis 3.2 available as docker container, is an advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets. You can run atomic operations on these types, like appending to a string; incrementing the value in a hash; pushing to a list; computing set intersection, union and difference; or getting the member with highest ranking in a sorted set. In order to achieve its outstanding performance, Redis works with an in-memory dataset. Depending on your use case, you can persist it either by dumping the dataset to disk every once in a while, or by appending each command to a log.",
                    "io.k8s.description": "Redis 3.2 available as docker container, is an advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets. You can run atomic operations on these types, like appending to a string; incrementing the value in a hash; pushing to a list; computing set intersection, union and difference; or getting the member with highest ranking in a sorted set. In order to achieve its outstanding performance, Redis works with an in-memory dataset. Depending on your use case, you can persist it either by dumping the dataset to disk every once in a while, or by appending each command to a log.",
                    "io.k8s.display-name": "Redis 3.2",
                    "io.openshift.builder-version": "\"80a69e6\"",
                    "io.openshift.expose-services": "6379:redis",
                    "io.openshift.tags": "database,redis,redis32,rh-redis32",
                    "license": "GPLv2",
                    "name": "centos/redis-32-centos7",
                    "release": "1",
                    "summary": "Redis in-memory data structure store, used as database, cache and message broker",
                    "vendor": "CentOS",
                    "version": "3.2"
                  }
                },
                "Architecture": "amd64",
                "Size": 83504677
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:0073e7ce2d87c54d716422238ca2e7dc28d3b5c5d5f500e9780382a48472430f",
                  "size": 1486,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:95e7d24d111bfacf7b74f489187063c9291456539d73eb1186016bafed1fd38b",
                  "size": 10041112,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:fa423fcb2902efac3e132ee66f6b53c22eea5ff36d0ff63a21e07d9283c85c71",
                  "size": 5090,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:343b78acb4bfdd50272d787d207c64ed88bc03c18d35184643314fd73b43ffed",
                  "size": 16997,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:d8192b3df99cbe891e6cf927e2874e6666877189cb22afc4afc69cb3c195e74a",
                "selfLink": "/oapi/v1/images/sha256%3Ad8192b3df99cbe891e6cf927e2874e6666877189cb22afc4afc69cb3c195e74a",
                "uid": "68071f7b-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1028",
                "creationTimestamp": "2017-12-11T13:15:49Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/perl-520-centos7@sha256:d8192b3df99cbe891e6cf927e2874e6666877189cb22afc4afc69cb3c195e74a",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:f817b26101130aa468bde27c82c5e1a604c9d9053079aaaac663e496d73abeac",
                "Created": "2017-11-21T07:44:27Z",
                "Container": "728cfeca94ae3a30af407c6d54322728033cff9108bfa80949f312c868feac42",
                "ContainerConfig": {
                  "Hostname": "38052bd170ac",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Perl 5.20 applications",
                    "DESCRIPTION=Perl 5.20 available as docker container is a base platform for building and running various Perl 5.20 applications and frameworks. Perl is a high-level programming language with roots in C, sed, awk and shell scripting. Perl is good at handling processes and files, and is especially good at handling text. Perl's hallmarks are practicality and efficiency. While it is used to do a lot of different things, Perl's most common applications are system administration utilities and web programming.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "PERL_VERSION=5.20"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"a5f3dfb\""
                  ],
                  "Image": "sha256:a8613a4b549895b7a4841866c4be179974ca65fbf68a51f865c754468dea3564",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20170911",
                    "com.redhat.component": "rh-perl520-docker",
                    "description": "Perl 5.20 available as docker container is a base platform for building and running various Perl 5.20 applications and frameworks. Perl is a high-level programming language with roots in C, sed, awk and shell scripting. Perl is good at handling processes and files, and is especially good at handling text. Perl's hallmarks are practicality and efficiency. While it is used to do a lot of different things, Perl's most common applications are system administration utilities and web programming.",
                    "io.k8s.description": "Perl 5.20 available as docker container is a base platform for building and running various Perl 5.20 applications and frameworks. Perl is a high-level programming language with roots in C, sed, awk and shell scripting. Perl is good at handling processes and files, and is especially good at handling text. Perl's hallmarks are practicality and efficiency. While it is used to do a lot of different things, Perl's most common applications are system administration utilities and web programming.",
                    "io.k8s.display-name": "Apache 2.4 with mod_perl/5.20",
                    "io.openshift.builder-version": "\"a5f3dfb\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,perl,perl520",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/perl-520-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Perl 5.20 applications",
                    "vendor": "CentOS",
                    "version": "5.20"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "38052bd170ac",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Perl 5.20 applications",
                    "DESCRIPTION=Perl 5.20 available as docker container is a base platform for building and running various Perl 5.20 applications and frameworks. Perl is a high-level programming language with roots in C, sed, awk and shell scripting. Perl is good at handling processes and files, and is especially good at handling text. Perl's hallmarks are practicality and efficiency. While it is used to do a lot of different things, Perl's most common applications are system administration utilities and web programming.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "PERL_VERSION=5.20"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:a8613a4b549895b7a4841866c4be179974ca65fbf68a51f865c754468dea3564",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20170911",
                    "com.redhat.component": "rh-perl520-docker",
                    "description": "Perl 5.20 available as docker container is a base platform for building and running various Perl 5.20 applications and frameworks. Perl is a high-level programming language with roots in C, sed, awk and shell scripting. Perl is good at handling processes and files, and is especially good at handling text. Perl's hallmarks are practicality and efficiency. While it is used to do a lot of different things, Perl's most common applications are system administration utilities and web programming.",
                    "io.k8s.description": "Perl 5.20 available as docker container is a base platform for building and running various Perl 5.20 applications and frameworks. Perl is a high-level programming language with roots in C, sed, awk and shell scripting. Perl is good at handling processes and files, and is especially good at handling text. Perl's hallmarks are practicality and efficiency. While it is used to do a lot of different things, Perl's most common applications are system administration utilities and web programming.",
                    "io.k8s.display-name": "Apache 2.4 with mod_perl/5.20",
                    "io.openshift.builder-version": "\"a5f3dfb\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,perl,perl520",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/perl-520-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Perl 5.20 applications",
                    "vendor": "CentOS",
                    "version": "5.20"
                  }
                },
                "Architecture": "amd64",
                "Size": 220108140
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:d9aaf4d82f249dc101a6638ff5177fe926cdebfa6c42d874dfa5029533da0e72",
                  "size": 73386947,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:fd6cdcc72ac15cb88cda14eec241a8eb2940633656a0896c42f23c90989e4199",
                  "size": 8067336,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:db2941ade4ab37b514562881ab8566907e177bd09f36cd17c0ac1d8f8df0a411",
                  "size": 3785,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bb822428f55eb844a30f63c209e6c85b76c4387f9f64ece614bcb9ab4cbb00b4",
                  "size": 161360,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:362e84fd6a936154e79f07531309e213aba040da4c198180757e7d127beec911",
                  "size": 90267986,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:7e6c181dd05c49adb2dbf25aaf59822b61e01930c0d6bbebcfbd772774f8b10b",
                  "size": 48025141,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:9dd25a99e8144ac7962a7dd8985ef46937a530cf911af0f01619a309d5ae641f",
                  "size": 2405,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:37de524b513083e926b2695ef1780660694e8beb633962f5fee2d6aff88490c3",
                  "size": 2697,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:63e5d03b96fea060a4cc661331ef8259883bdbffbc67bcd13b65d6831b76724a",
                  "size": 173430,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:dbd4b6fef477e49bff9703ee70d20a2c48f68023562ebecc264d0b87a7fa270e",
                "selfLink": "/oapi/v1/images/sha256%3Adbd4b6fef477e49bff9703ee70d20a2c48f68023562ebecc264d0b87a7fa270e",
                "uid": "68b3fb12-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1034",
                "creationTimestamp": "2017-12-11T13:15:50Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "openshift/postgresql-92-centos7@sha256:dbd4b6fef477e49bff9703ee70d20a2c48f68023562ebecc264d0b87a7fa270e",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "859f546c638d40bcd682eeaf379ccffce8534da7bd5c2e63ed67694c22b6cd96",
                "Parent": "1b0bc5a418da1d0c6a90ab1610dea99a6f84d366c6f345c6cf8a60533786c71f",
                "Created": "2016-12-07T19:53:30Z",
                "Container": "64b9b6709471811111ace9169385346980ba56dddd78991d8acd6a66e2f63e07",
                "ContainerConfig": {
                  "Hostname": "d6dcf178f680",
                  "User": "26",
                  "ExposedPorts": {
                    "5432/tcp": {}
                  },
                  "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "POSTGRESQL_VERSION=9.2",
                    "HOME=/var/lib/pgsql",
                    "PGUSER=postgres",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/postgresql",
                    "ENABLED_COLLECTIONS=postgresql92",
                    "BASH_ENV=/usr/share/container-scripts/postgresql/scl_enable",
                    "ENV=/usr/share/container-scripts/postgresql/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/postgresql/scl_enable"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=f213e5d"
                  ],
                  "Image": "sha256:de5d7abe93d350743c1beacf21fd93bf41a5852deb885f6812bfd780d3bb51a4",
                  "Volumes": {
                    "/var/lib/pgsql/data": {}
                  },
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161102",
                    "io.k8s.description": "PostgreSQL is an advanced Object-Relational database management system",
                    "io.k8s.display-name": "PostgreSQL 9.2",
                    "io.openshift.builder-version": "f213e5d",
                    "io.openshift.expose-services": "5432:postgresql",
                    "io.openshift.tags": "database,postgresql,postgresql92",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "DockerVersion": "1.12.2-rc2",
                "Author": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                "Config": {
                  "Hostname": "d6dcf178f680",
                  "User": "26",
                  "ExposedPorts": {
                    "5432/tcp": {}
                  },
                  "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "POSTGRESQL_VERSION=9.2",
                    "HOME=/var/lib/pgsql",
                    "PGUSER=postgres",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/postgresql",
                    "ENABLED_COLLECTIONS=postgresql92",
                    "BASH_ENV=/usr/share/container-scripts/postgresql/scl_enable",
                    "ENV=/usr/share/container-scripts/postgresql/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/postgresql/scl_enable"
                  ],
                  "Cmd": [
                    "run-postgresql"
                  ],
                  "Image": "sha256:de5d7abe93d350743c1beacf21fd93bf41a5852deb885f6812bfd780d3bb51a4",
                  "Volumes": {
                    "/var/lib/pgsql/data": {}
                  },
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161102",
                    "io.k8s.description": "PostgreSQL is an advanced Object-Relational database management system",
                    "io.k8s.display-name": "PostgreSQL 9.2",
                    "io.openshift.builder-version": "f213e5d",
                    "io.openshift.expose-services": "5432:postgresql",
                    "io.openshift.tags": "database,postgresql,postgresql92",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "Architecture": "amd64",
                "Size": 97231670
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 32,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:08d48e6f1cff259389732d35307bb877215fa28867cdaff50c1dbd6e0b993c1f",
                  "size": 70481699,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:d51d9202987b1f7e7085bb150e3501937cf707f84568fc45d556287ba1144d2d",
                  "size": 7122,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:39e1fb74ed4a10477c1aa92eb6bef0b26d9ea61b158dfb9618aa1e63ecb7100c",
                  "size": 26742817,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v1+json"
            },
            {
              "metadata": {
                "name": "sha256:dd472861dc583bccb310febc1b0e3f040077a7a604b81c11f29e7030e856457e",
                "selfLink": "/oapi/v1/images/sha256%3Add472861dc583bccb310febc1b0e3f040077a7a604b81c11f29e7030e856457e",
                "uid": "66c13483-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1014",
                "creationTimestamp": "2017-12-11T13:15:47Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/mysql-56-centos7@sha256:dd472861dc583bccb310febc1b0e3f040077a7a604b81c11f29e7030e856457e",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:a5470bedd6e072a2f08d903e24626f949c3554fca34021549aafc77f94c2dd39",
                "Created": "2017-12-08T15:03:19Z",
                "Container": "d7ca6708b5fd4e71dfa68f744b51ea1263f185d28a39c525511704574b88c906",
                "ContainerConfig": {
                  "Hostname": "87c4e37f7782",
                  "User": "27",
                  "ExposedPorts": {
                    "3306/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=MySQL 5.6 SQL database server",
                    "DESCRIPTION=MySQL is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MySQL mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MySQL databases on behalf of the clients.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/var/lib/mysql",
                    "BASH_ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/mysql/scl_enable",
                    "MYSQL_VERSION=5.6",
                    "APP_DATA=/opt/app-root/src",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/mysql",
                    "MYSQL_PREFIX=/opt/rh/rh-mysql56/root/usr",
                    "ENABLED_COLLECTIONS=rh-mysql56"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"b63563f\""
                  ],
                  "Image": "sha256:906e61ecfcc5549ae01379d98c0b893dd8f75f700d2c8e5d19445e425c058a82",
                  "Volumes": {
                    "/var/lib/mysql/data": {}
                  },
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-mysql56-docker",
                    "description": "MySQL is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MySQL mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MySQL databases on behalf of the clients.",
                    "io.k8s.description": "MySQL is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MySQL mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MySQL databases on behalf of the clients.",
                    "io.k8s.display-name": "MySQL 5.6",
                    "io.openshift.builder-version": "\"b63563f\"",
                    "io.openshift.expose-services": "3306:mysql",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "database,mysql,mysql56,rh-mysql56",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/mysql-56-centos7",
                    "release": "1",
                    "summary": "MySQL 5.6 SQL database server",
                    "vendor": "CentOS",
                    "version": "5.6"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "87c4e37f7782",
                  "User": "27",
                  "ExposedPorts": {
                    "3306/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=MySQL 5.6 SQL database server",
                    "DESCRIPTION=MySQL is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MySQL mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MySQL databases on behalf of the clients.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/var/lib/mysql",
                    "BASH_ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/mysql/scl_enable",
                    "MYSQL_VERSION=5.6",
                    "APP_DATA=/opt/app-root/src",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/mysql",
                    "MYSQL_PREFIX=/opt/rh/rh-mysql56/root/usr",
                    "ENABLED_COLLECTIONS=rh-mysql56"
                  ],
                  "Cmd": [
                    "run-mysqld"
                  ],
                  "Image": "sha256:906e61ecfcc5549ae01379d98c0b893dd8f75f700d2c8e5d19445e425c058a82",
                  "Volumes": {
                    "/var/lib/mysql/data": {}
                  },
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-mysql56-docker",
                    "description": "MySQL is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MySQL mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MySQL databases on behalf of the clients.",
                    "io.k8s.description": "MySQL is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MySQL mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MySQL databases on behalf of the clients.",
                    "io.k8s.display-name": "MySQL 5.6",
                    "io.openshift.builder-version": "\"b63563f\"",
                    "io.openshift.expose-services": "3306:mysql",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "database,mysql,mysql56,rh-mysql56",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/mysql-56-centos7",
                    "release": "1",
                    "summary": "MySQL 5.6 SQL database server",
                    "vendor": "CentOS",
                    "version": "5.6"
                  }
                },
                "Architecture": "amd64",
                "Size": 132532650
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:cc0ddecc531466cdadca9ec38c3a05c9c6093f57c2a13b1ee713a24147b57600",
                  "size": 7836280,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:38838b2f6d95cec92b5ebeaba00f384c4190e5eba31c460b40c3435f620f7e30",
                  "size": 3788,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bac0ff76e28137f6b1ef4054cd4945ef574595f30e603ef1e46916101dcd4564",
                  "size": 176207,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:4bea90b28427b058d403ff882f02688310c4cfe1937ba89557c7158257252ec5",
                  "size": 50929821,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:227f4e731a153368cde3ddc8b82bcd1b3d181178e3c1d57dfd1d93697f6d3f81",
                  "size": 9237,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:698d0198147df9e9d77ed6469788c241377dc6c4b48e8d57a8d1b46855d60786",
                  "size": 418,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:6d737ccd098fa537b0b24dbac289cb0fe769ea3bbb0b07e063b0966249b12efb",
                  "size": 5842,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:56422d52fcfd97e705b2de51ef8a39c628bc3e57d51561034c9323594310bbb9",
                  "size": 162,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:d1dc3282ca8a57ae2c1b7e113d252a2daecbe053503252862241f237d340b04d",
                  "size": 130080,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:e032299a368994d8dc8aaabe81b6c71a4ce836698d6b13a4cca9e3594b659949",
                "selfLink": "/oapi/v1/images/sha256%3Ae032299a368994d8dc8aaabe81b6c71a4ce836698d6b13a4cca9e3594b659949",
                "uid": "6652e31e-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1009",
                "creationTimestamp": "2017-12-11T13:15:46Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/mongodb-26-centos7@sha256:e032299a368994d8dc8aaabe81b6c71a4ce836698d6b13a4cca9e3594b659949",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:979eb4a425d997b6abdfa97f61af31a960ccf590ee5681f8c3777b571510fab4",
                "Created": "2017-11-21T07:36:20Z",
                "Container": "05f35faba645fb0409e76d46dcc4ee486c3bff20cbb51869394d879709b6e13b",
                "ContainerConfig": {
                  "Hostname": "38052bd170ac",
                  "User": "184",
                  "ExposedPorts": {
                    "27017/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=MongoDB NoSQL database server",
                    "DESCRIPTION=MongoDB (from humongous) is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. This container image contains programs to run mongod server.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/var/lib/mongodb",
                    "BASH_ENV=${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "ENV=${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "PROMPT_COMMAND=. ${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "MONGODB_VERSION=2.6",
                    "APP_DATA=/opt/app-root/src",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/mongodb",
                    "ENABLED_COLLECTIONS=rh-mongodb26"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"c971482\""
                  ],
                  "Image": "sha256:3d49f29b6220152013d51304f1353ed905351a3689a2e349923782a2b7f0a481",
                  "Volumes": {
                    "/var/lib/mongodb/data": {}
                  },
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20170911",
                    "com.redhat.component": "rh-mongodb26-docker",
                    "description": "MongoDB (from humongous) is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. This container image contains programs to run mongod server.",
                    "io.k8s.description": "MongoDB (from humongous) is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. This container image contains programs to run mongod server.",
                    "io.k8s.display-name": "MongoDB 2.6",
                    "io.openshift.builder-version": "\"c971482\"",
                    "io.openshift.expose-services": "27017:mongodb",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "database,mongodb,rh-mongodb26",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/mongodb-26-centos7",
                    "release": "1",
                    "summary": "MongoDB NoSQL database server",
                    "vendor": "CentOS",
                    "version": "2.6"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "38052bd170ac",
                  "User": "184",
                  "ExposedPorts": {
                    "27017/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=MongoDB NoSQL database server",
                    "DESCRIPTION=MongoDB (from humongous) is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. This container image contains programs to run mongod server.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/var/lib/mongodb",
                    "BASH_ENV=${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "ENV=${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "PROMPT_COMMAND=. ${CONTAINER_SCRIPTS_PATH}/scl_enable",
                    "MONGODB_VERSION=2.6",
                    "APP_DATA=/opt/app-root/src",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/mongodb",
                    "ENABLED_COLLECTIONS=rh-mongodb26"
                  ],
                  "Cmd": [
                    "run-mongod"
                  ],
                  "Image": "sha256:3d49f29b6220152013d51304f1353ed905351a3689a2e349923782a2b7f0a481",
                  "Volumes": {
                    "/var/lib/mongodb/data": {}
                  },
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20170911",
                    "com.redhat.component": "rh-mongodb26-docker",
                    "description": "MongoDB (from humongous) is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. This container image contains programs to run mongod server.",
                    "io.k8s.description": "MongoDB (from humongous) is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas. This container image contains programs to run mongod server.",
                    "io.k8s.display-name": "MongoDB 2.6",
                    "io.openshift.builder-version": "\"c971482\"",
                    "io.openshift.expose-services": "27017:mongodb",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "database,mongodb,rh-mongodb26",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/mongodb-26-centos7",
                    "release": "1",
                    "summary": "MongoDB NoSQL database server",
                    "vendor": "CentOS",
                    "version": "2.6"
                  }
                },
                "Architecture": "amd64",
                "Size": 214702807
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:d9aaf4d82f249dc101a6638ff5177fe926cdebfa6c42d874dfa5029533da0e72",
                  "size": 73386947,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:fd6cdcc72ac15cb88cda14eec241a8eb2940633656a0896c42f23c90989e4199",
                  "size": 8067336,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:db2941ade4ab37b514562881ab8566907e177bd09f36cd17c0ac1d8f8df0a411",
                  "size": 3785,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bb822428f55eb844a30f63c209e6c85b76c4387f9f64ece614bcb9ab4cbb00b4",
                  "size": 161360,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:e1cf6bbcc1185b46fc93b93b4cc5b8691e813ada45e9ef9e4462c645a8f1d521",
                  "size": 132892102,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:fd460ca417135a8c38bd2b51b1da85c7afd5bc322426dbc4e1860fbacc7f7026",
                  "size": 423,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:379ea5691580001b4a89e5be9f231c7c2fb94a027cac84dbc27aad0062d2ad51",
                  "size": 11508,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:6284ce344b3dd8ebeafd39678ba8016d520ae075ff4cecf295c5e0d0a9e1b19a",
                  "size": 166499,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:e2d681b6e3b7e8eedf2fbb288c3e6587db6fd2b7a4aa55dd3a8ab032094dfa8c",
                "selfLink": "/oapi/v1/images/sha256%3Ae2d681b6e3b7e8eedf2fbb288c3e6587db6fd2b7a4aa55dd3a8ab032094dfa8c",
                "uid": "68054e31-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1027",
                "creationTimestamp": "2017-12-11T13:15:49Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "openshift/perl-516-centos7@sha256:e2d681b6e3b7e8eedf2fbb288c3e6587db6fd2b7a4aa55dd3a8ab032094dfa8c",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "9c563b6d14e02db0e1d1c38ab62770f71454843fd1035c02577e578be0228c5c",
                "Parent": "e6cd05c6c6ab01676fbb4d5a75a190b134d674143bd88760c641dd3fa5ff04bf",
                "Created": "2016-12-21T11:59:04Z",
                "Container": "74ed77406d5b010fc377f64b41303058ac083f85774abf38b5706d2bbd66c73f",
                "ContainerConfig": {
                  "Hostname": "d6dcf178f680",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/rh/perl516/root/usr/local/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "PERL_VERSION=5.16"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=60a97c7a7543bd2e6c44ab7dfe57e5373cc4bb2b"
                  ],
                  "Image": "sha256:0cd8e4464d555214d6e3306e2d04eb70109f0a3623066482d57c2a3dc539e97b",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161102",
                    "io.k8s.description": "Platform for building and running Perl 5.1.6 applications",
                    "io.k8s.display-name": "Apache 2.4 with mod_perl/5.1.6",
                    "io.openshift.builder-base-version": "a8deee2",
                    "io.openshift.builder-version": "60a97c7a7543bd2e6c44ab7dfe57e5373cc4bb2b",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,perl,perl516",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "DockerVersion": "1.12.2-rc2",
                "Author": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                "Config": {
                  "Hostname": "d6dcf178f680",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/rh/perl516/root/usr/local/bin",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "PERL_VERSION=5.16"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:0cd8e4464d555214d6e3306e2d04eb70109f0a3623066482d57c2a3dc539e97b",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20161102",
                    "io.k8s.description": "Platform for building and running Perl 5.1.6 applications",
                    "io.k8s.display-name": "Apache 2.4 with mod_perl/5.1.6",
                    "io.openshift.builder-base-version": "a8deee2",
                    "io.openshift.builder-version": "60a97c7a7543bd2e6c44ab7dfe57e5373cc4bb2b",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,perl,perl516",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "name": "CentOS Base Image",
                    "vendor": "CentOS"
                  }
                },
                "Architecture": "amd64",
                "Size": 193962598
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 32,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:08d48e6f1cff259389732d35307bb877215fa28867cdaff50c1dbd6e0b993c1f",
                  "size": 70481699,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:147e60d427392d6f696273d0b633722bc6a7dc7af0c90a8f4b29777dade6002f",
                  "size": 255,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:71d046d973b92e351cf8391ec66e2e7e5fa252e2fb3cc6cd5881f2c368207777",
                  "size": 67962493,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:85dab2e0d129ed4c4f1da157574c0f5d66a54222d7ac2958093d01b00d487335",
                  "size": 1957,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:6614a43ecec7aa42c7bf739d23ac9299f7088688927895cbab7ba9d5566f7bbf",
                  "size": 55507349,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:04388b12475c656fb72ed77e8454e4e6595dd031976bb058c5dcc60fef076ebc",
                  "size": 1774,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a7111a2c790fbd7237a23ac0f5ff800f6d0a5006dd58e1f8edd7eeb82b080e5b",
                  "size": 1142,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:75979d37fa2b5037a51adb18a28f4d9f5964e5aa30350f10003c5e12ccce7c28",
                  "size": 5897,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                },
                {
                  "name": "sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4",
                  "size": 0,
                  "mediaType": "application/vnd.docker.container.image.rootfs.diff+x-gtar"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v1+json"
            },
            {
              "metadata": {
                "name": "sha256:e45338d5fb19d5042df3a1272018cfaf02c740859c97b40e0b6bec9327f2a933",
                "selfLink": "/oapi/v1/images/sha256%3Ae45338d5fb19d5042df3a1272018cfaf02c740859c97b40e0b6bec9327f2a933",
                "uid": "639fca8d-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "863",
                "creationTimestamp": "2017-12-11T13:15:42Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/mariadb-101-centos7@sha256:e45338d5fb19d5042df3a1272018cfaf02c740859c97b40e0b6bec9327f2a933",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:b6d84f179856bb8b115a2b3689614243ddaf0440331a509b4aeabdfd9219990a",
                "Created": "2017-12-10T16:48:03Z",
                "Container": "79de2c9817bbc37765d954d5e98e8a2aa453f12134dfcc6540ee62146ca7a138",
                "ContainerConfig": {
                  "Hostname": "87c4e37f7782",
                  "User": "27",
                  "ExposedPorts": {
                    "3306/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=MariaDB 10.1 SQL database server",
                    "DESCRIPTION=MariaDB is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MariaDB mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MariaDB databases on behalf of the clients.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/var/lib/mysql",
                    "BASH_ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/mysql/scl_enable",
                    "MYSQL_VERSION=10.1",
                    "APP_DATA=/opt/app-root/src",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/mysql",
                    "MYSQL_PREFIX=/opt/rh/rh-mariadb101/root/usr",
                    "ENABLED_COLLECTIONS=rh-mariadb101"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"6d48d68\""
                  ],
                  "Image": "sha256:663cd6945add0ef7849a190fc70c4556d7dc377782e9815329223b28b4832285",
                  "Volumes": {
                    "/var/lib/mysql/data": {}
                  },
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-mariadb101-docker",
                    "description": "MariaDB is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MariaDB mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MariaDB databases on behalf of the clients.",
                    "io.k8s.description": "MariaDB is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MariaDB mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MariaDB databases on behalf of the clients.",
                    "io.k8s.display-name": "MariaDB 10.1",
                    "io.openshift.builder-version": "\"6d48d68\"",
                    "io.openshift.expose-services": "3306:mysql",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "database,mysql,mariadb,mariadb101,rh-mariadb101,galera",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/mariadb-101-centos7",
                    "release": "1",
                    "summary": "MariaDB 10.1 SQL database server",
                    "usage": "docker run -e MYSQL_USER=\u003cuser_name\u003e -e MYSQL_PASSWORD=\u003cpassword\u003e -e MYSQL_DATABASE=\u003cdb_name\u003e -e MYSQL_ROOT_PASSWORD=\u003croot_password\u003e -p 3306:3306 centos/mariadb-101-centos7",
                    "vendor": "CentOS",
                    "version": "10.1"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "87c4e37f7782",
                  "User": "27",
                  "ExposedPorts": {
                    "3306/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=MariaDB 10.1 SQL database server",
                    "DESCRIPTION=MariaDB is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MariaDB mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MariaDB databases on behalf of the clients.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/var/lib/mysql",
                    "BASH_ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "ENV=/usr/share/container-scripts/mysql/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/mysql/scl_enable",
                    "MYSQL_VERSION=10.1",
                    "APP_DATA=/opt/app-root/src",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/mysql",
                    "MYSQL_PREFIX=/opt/rh/rh-mariadb101/root/usr",
                    "ENABLED_COLLECTIONS=rh-mariadb101"
                  ],
                  "Cmd": [
                    "run-mysqld"
                  ],
                  "Image": "sha256:663cd6945add0ef7849a190fc70c4556d7dc377782e9815329223b28b4832285",
                  "Volumes": {
                    "/var/lib/mysql/data": {}
                  },
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-mariadb101-docker",
                    "description": "MariaDB is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MariaDB mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MariaDB databases on behalf of the clients.",
                    "io.k8s.description": "MariaDB is a multi-user, multi-threaded SQL database server. The container image provides a containerized packaging of the MariaDB mysqld daemon and client application. The mysqld server daemon accepts connections from clients and provides access to content from MariaDB databases on behalf of the clients.",
                    "io.k8s.display-name": "MariaDB 10.1",
                    "io.openshift.builder-version": "\"6d48d68\"",
                    "io.openshift.expose-services": "3306:mysql",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "database,mysql,mariadb,mariadb101,rh-mariadb101,galera",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/mariadb-101-centos7",
                    "release": "1",
                    "summary": "MariaDB 10.1 SQL database server",
                    "usage": "docker run -e MYSQL_USER=\u003cuser_name\u003e -e MYSQL_PASSWORD=\u003cpassword\u003e -e MYSQL_DATABASE=\u003cdb_name\u003e -e MYSQL_ROOT_PASSWORD=\u003croot_password\u003e -p 3306:3306 centos/mariadb-101-centos7",
                    "vendor": "CentOS",
                    "version": "10.1"
                  }
                },
                "Architecture": "amd64",
                "Size": 142946787
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:cc0ddecc531466cdadca9ec38c3a05c9c6093f57c2a13b1ee713a24147b57600",
                  "size": 7836280,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:38838b2f6d95cec92b5ebeaba00f384c4190e5eba31c460b40c3435f620f7e30",
                  "size": 3788,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bac0ff76e28137f6b1ef4054cd4945ef574595f30e603ef1e46916101dcd4564",
                  "size": 176207,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:9ba0b76d78b5c8f847308fc3c32ad29abb47b651bfeb0cc010907affe6933004",
                  "size": 61343630,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:6ce530f4c3d3e0a80a897cd22ee21a4a51f513957ab252ce76be09501881fa4f",
                  "size": 9637,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:3c03d0283bae4697ea554d747a8c6b2ae3b6b0ff83043f2517cbcf12808dab0b",
                  "size": 418,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:6e46b96f33a44a5ebf96350920e695099a16eeee9439db56df1e4ac2afc5b785",
                  "size": 5860,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:86cf0baa520d86fdbc4ffb3fd04b9be0a68ce8b914e7a059841770e57bcfaf46",
                  "size": 162,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:d1e3c73ea87b85d554ea9522ceea277434ecf127c3008cd23afaf11ba3c91468",
                  "size": 129274,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:e571f47f47c64b5fd327138bc33f38a0f64a6799ec059db298763bace70473b1",
                "selfLink": "/oapi/v1/images/sha256%3Ae571f47f47c64b5fd327138bc33f38a0f64a6799ec059db298763bace70473b1",
                "uid": "6b45c16c-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1061",
                "creationTimestamp": "2017-12-11T13:15:55Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/ruby-23-centos7@sha256:e571f47f47c64b5fd327138bc33f38a0f64a6799ec059db298763bace70473b1",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:f0c8a466c233e1f72f5520e8ad8778c00b8ba22bed8a5687f20917d158aaf1b5",
                "Created": "2017-12-07T13:33:41Z",
                "Container": "daa368b94ab8e67f0a3c7cd079d4da2d5b45770db1d8ba65cefbae400983f240",
                "ContainerConfig": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Ruby 2.3 applications",
                    "DESCRIPTION=Ruby 2.3 available as docker container is a base platform for building and running various Ruby 2.3 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "RUBY_VERSION=2.3"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"c6e2e08\""
                  ],
                  "Image": "sha256:76906460237f9a6e52761b05ff86a61ae8e6e55c2a89e7cca07ae8e48bfc6243",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-ruby23-docker",
                    "description": "Ruby 2.3 available as docker container is a base platform for building and running various Ruby 2.3 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "io.k8s.description": "Ruby 2.3 available as docker container is a base platform for building and running various Ruby 2.3 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "io.k8s.display-name": "Ruby 2.3",
                    "io.openshift.builder-version": "\"c6e2e08\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,ruby,ruby23,rh-ruby23",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/ruby-23-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Ruby 2.3 applications",
                    "vendor": "CentOS",
                    "version": "2.3"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Ruby 2.3 applications",
                    "DESCRIPTION=Ruby 2.3 available as docker container is a base platform for building and running various Ruby 2.3 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "RUBY_VERSION=2.3"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:76906460237f9a6e52761b05ff86a61ae8e6e55c2a89e7cca07ae8e48bfc6243",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-ruby23-docker",
                    "description": "Ruby 2.3 available as docker container is a base platform for building and running various Ruby 2.3 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "io.k8s.description": "Ruby 2.3 available as docker container is a base platform for building and running various Ruby 2.3 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "io.k8s.display-name": "Ruby 2.3",
                    "io.openshift.builder-version": "\"c6e2e08\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,ruby,ruby23,rh-ruby23",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/ruby-23-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Ruby 2.3 applications",
                    "vendor": "CentOS",
                    "version": "2.3"
                  }
                },
                "Architecture": "amd64",
                "Size": 197321214
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:cc0ddecc531466cdadca9ec38c3a05c9c6093f57c2a13b1ee713a24147b57600",
                  "size": 7836280,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:38838b2f6d95cec92b5ebeaba00f384c4190e5eba31c460b40c3435f620f7e30",
                  "size": 3788,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bac0ff76e28137f6b1ef4054cd4945ef574595f30e603ef1e46916101dcd4564",
                  "size": 176207,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:a1e22e37e72c2f49c44aec2b8a894fff295bd18d4368a745aa6d4f0e7a6e2099",
                  "size": 90675631,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:ff61c328ccbbcce10d4fba5f07b97c3cb9b48cfaf2219198b2de4fdce466808c",
                  "size": 24980442,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:7b9aca0434c4b56d96d5c2efca527ed44633baaa5fa718a81e219d3498114336",
                  "size": 1815,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:c9eed4920fff0a9e85ad855272dc83cafdeccfeb15b99a8aaf9f27ae86f4a1b9",
                  "size": 3870,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:afd3fe902b4aa37b3c3f5405be2e5c4a297293338ee25086a8b4a966b5a9936d",
                  "size": 200969,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:e5756a00e9e49b78fb9ae88b8ffc37e4971baf903195cae1be7a5adae4431745",
                "selfLink": "/oapi/v1/images/sha256%3Ae5756a00e9e49b78fb9ae88b8ffc37e4971baf903195cae1be7a5adae4431745",
                "uid": "68b37075-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1033",
                "creationTimestamp": "2017-12-11T13:15:50Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/postgresql-95-centos7@sha256:e5756a00e9e49b78fb9ae88b8ffc37e4971baf903195cae1be7a5adae4431745",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:e81d4793614efe75433bda3157754020564b2296227e02c92faa63c5fdbae0fc",
                "Created": "2017-12-07T11:15:11Z",
                "Container": "7b7df82d459a480241bf15b36f271e2582c82e20930f345d3112f8f0b5412e6c",
                "ContainerConfig": {
                  "Hostname": "4237746bd942",
                  "User": "26",
                  "ExposedPorts": {
                    "5432/tcp": {}
                  },
                  "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "POSTGRESQL_VERSION=9.5",
                    "POSTGRESQL_PREV_VERSION=9.4",
                    "HOME=/var/lib/pgsql",
                    "PGUSER=postgres",
                    "SUMMARY=PostgreSQL is an advanced Object-Relational database management system",
                    "DESCRIPTION=PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/postgresql",
                    "ENABLED_COLLECTIONS=rh-postgresql95",
                    "BASH_ENV=/usr/share/container-scripts/postgresql/scl_enable",
                    "ENV=/usr/share/container-scripts/postgresql/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/postgresql/scl_enable"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"8230ed1\""
                  ],
                  "Image": "sha256:1e0f6649a217de2f02e22207c2d3ed321d664c33561d5deb11121262986ebb9f",
                  "Volumes": {
                    "/var/lib/pgsql/data": {}
                  },
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-postgresql95-docker",
                    "description": "PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
                    "io.k8s.description": "PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
                    "io.k8s.display-name": "PostgreSQL 9.5",
                    "io.openshift.builder-version": "\"8230ed1\"",
                    "io.openshift.expose-services": "5432:postgresql",
                    "io.openshift.tags": "database,postgresql,postgresql95,rh-postgresql95",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/postgresql-95-centos7",
                    "release": "1",
                    "summary": "PostgreSQL is an advanced Object-Relational database management system",
                    "vendor": "CentOS",
                    "version": "9.5"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "4237746bd942",
                  "User": "26",
                  "ExposedPorts": {
                    "5432/tcp": {}
                  },
                  "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "POSTGRESQL_VERSION=9.5",
                    "POSTGRESQL_PREV_VERSION=9.4",
                    "HOME=/var/lib/pgsql",
                    "PGUSER=postgres",
                    "SUMMARY=PostgreSQL is an advanced Object-Relational database management system",
                    "DESCRIPTION=PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
                    "CONTAINER_SCRIPTS_PATH=/usr/share/container-scripts/postgresql",
                    "ENABLED_COLLECTIONS=rh-postgresql95",
                    "BASH_ENV=/usr/share/container-scripts/postgresql/scl_enable",
                    "ENV=/usr/share/container-scripts/postgresql/scl_enable",
                    "PROMPT_COMMAND=. /usr/share/container-scripts/postgresql/scl_enable"
                  ],
                  "Cmd": [
                    "run-postgresql"
                  ],
                  "Image": "sha256:1e0f6649a217de2f02e22207c2d3ed321d664c33561d5deb11121262986ebb9f",
                  "Volumes": {
                    "/var/lib/pgsql/data": {}
                  },
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-postgresql95-docker",
                    "description": "PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
                    "io.k8s.description": "PostgreSQL is an advanced Object-Relational database management system (DBMS). The image contains the client and server programs that you'll need to create, run, maintain and access a PostgreSQL DBMS server.",
                    "io.k8s.display-name": "PostgreSQL 9.5",
                    "io.openshift.builder-version": "\"8230ed1\"",
                    "io.openshift.expose-services": "5432:postgresql",
                    "io.openshift.tags": "database,postgresql,postgresql95,rh-postgresql95",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/postgresql-95-centos7",
                    "release": "1",
                    "summary": "PostgreSQL is an advanced Object-Relational database management system",
                    "vendor": "CentOS",
                    "version": "9.5"
                  }
                },
                "Architecture": "amd64",
                "Size": 110461884
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:451a573687d1e7fdaab413aaa7a591b8c87b952b44bc56094fdc33cf675c94d0",
                  "size": 312,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:0b3b7cc3373265c25eb4da6f20a7016593143e176e67fa185abffc3dfdd45f13",
                  "size": 37012818,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:7af6599298717a84c88c4db9a9e40f6212fc8198f37b559b7b90e8908318d0a4",
                  "size": 12613,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:e98505b72106202bf88927247ad876c00b1390445d60624576c6753ab58fec72",
                "selfLink": "/oapi/v1/images/sha256%3Ae98505b72106202bf88927247ad876c00b1390445d60624576c6753ab58fec72",
                "uid": "6a5019e5-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1045",
                "creationTimestamp": "2017-12-11T13:15:53Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/python-34-centos7@sha256:e98505b72106202bf88927247ad876c00b1390445d60624576c6753ab58fec72",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:f7bf0845b2bc124a4424e37148545505dd569bd8f64d921a8d802fceb279ca1c",
                "Created": "2017-12-05T12:05:53Z",
                "Container": "b2d30f4e309414199a3773576dbb1f404ac845d30e13ba7d6a79bc4bc51e8a4e",
                "ContainerConfig": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/.local/bin/:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Python 3.4 applications",
                    "DESCRIPTION=Python 3.4 available as docker container is a base platform for building and running various Python 3.4 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "PYTHON_VERSION=3.4",
                    "PYTHONUNBUFFERED=1",
                    "PYTHONIOENCODING=UTF-8",
                    "LC_ALL=en_US.UTF-8",
                    "LANG=en_US.UTF-8",
                    "PIP_NO_CACHE_DIR=off"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"3704f8c\""
                  ],
                  "Image": "sha256:31a1186596046006ea4ad555c4d0abbd079ae51c725285cf55795f466651a004",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "python34-docker",
                    "description": "Python 3.4 available as docker container is a base platform for building and running various Python 3.4 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "io.k8s.description": "Python 3.4 available as docker container is a base platform for building and running various Python 3.4 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "io.k8s.display-name": "Python 3.4",
                    "io.openshift.builder-version": "\"3704f8c\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,python,python34,rh-python34",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/python-34-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Python 3.4 applications",
                    "vendor": "CentOS",
                    "version": "3.4"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/.local/bin/:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Python 3.4 applications",
                    "DESCRIPTION=Python 3.4 available as docker container is a base platform for building and running various Python 3.4 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "PYTHON_VERSION=3.4",
                    "PYTHONUNBUFFERED=1",
                    "PYTHONIOENCODING=UTF-8",
                    "LC_ALL=en_US.UTF-8",
                    "LANG=en_US.UTF-8",
                    "PIP_NO_CACHE_DIR=off"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:31a1186596046006ea4ad555c4d0abbd079ae51c725285cf55795f466651a004",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "python34-docker",
                    "description": "Python 3.4 available as docker container is a base platform for building and running various Python 3.4 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "io.k8s.description": "Python 3.4 available as docker container is a base platform for building and running various Python 3.4 applications and frameworks. Python is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python's elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.",
                    "io.k8s.display-name": "Python 3.4",
                    "io.openshift.builder-version": "\"3704f8c\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,python,python34,rh-python34",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/python-34-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Python 3.4 applications",
                    "vendor": "CentOS",
                    "version": "3.4"
                  }
                },
                "Architecture": "amd64",
                "Size": 263673227
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:cc0ddecc531466cdadca9ec38c3a05c9c6093f57c2a13b1ee713a24147b57600",
                  "size": 7836280,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:38838b2f6d95cec92b5ebeaba00f384c4190e5eba31c460b40c3435f620f7e30",
                  "size": 3788,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bac0ff76e28137f6b1ef4054cd4945ef574595f30e603ef1e46916101dcd4564",
                  "size": 176207,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:a1e22e37e72c2f49c44aec2b8a894fff295bd18d4368a745aa6d4f0e7a6e2099",
                  "size": 90675631,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:6c26d18cf7050e0ffebaf35e34977526402f0dd8689ded37417538bfcd4fc4c1",
                  "size": 86322301,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:6776040cdd56d4278150f99670132dd471b3574f55dd4d879822621e457b9d5d",
                  "size": 2639,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:baed82042a9d225f308fe0b5582b2c428d88a19dc4aa06a438c94a0f68bdd972",
                  "size": 4195,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:87fff4116b6c7e013970bdd824bcb1ce07b2bd2c3b409ed4e4fa152ed1394860",
                  "size": 5207915,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:ec00aa162986284b5c66e01c0b29bc3044761b816097845bc3fc370a4016ba1d",
                "selfLink": "/oapi/v1/images/sha256%3Aec00aa162986284b5c66e01c0b29bc3044761b816097845bc3fc370a4016ba1d",
                "uid": "67d563a4-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1024",
                "creationTimestamp": "2017-12-11T13:15:49Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/nodejs-4-centos7@sha256:ec00aa162986284b5c66e01c0b29bc3044761b816097845bc3fc370a4016ba1d",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:81784ab7bd2ccbd72c4da8e0e8d2bf259da252701c0c00b439061d532bc8144e",
                "Created": "2017-12-06T15:22:43Z",
                "Container": "cefe90b4bac3f5305ba8e316c40d7a66e9a7f07795f44272a912cf5d79e6925e",
                "ContainerConfig": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/node_modules/.bin/:/opt/app-root/src/.npm-global/bin/:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Node.js 4 applications",
                    "DESCRIPTION=Node.js 4 available as docker container is a base platform for building and running various Node.js 4 applications and frameworks. Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "NODEJS_VERSION=4",
                    "NPM_RUN=start",
                    "NAME=nodejs",
                    "NPM_CONFIG_PREFIX=/opt/app-root/src/.npm-global"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"b00f0cb\""
                  ],
                  "Image": "sha256:1f01ebad975501e763615daf1cd1656b1d89144a2d887e4c7ceab443b378a9d0",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-nodejs4-docker",
                    "com.redhat.deployments-dir": "/opt/app-root/src",
                    "com.redhat.dev-mode": "DEV_MODE:false",
                    "com.redhat.dev-mode.port": "DEBUG_PORT:5858",
                    "description": "Node.js 4 available as docker container is a base platform for building and running various Node.js 4 applications and frameworks. Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.",
                    "help": "For more information visit https://github.com/sclorg/s2i-nodejs-container",
                    "io.k8s.description": "Node.js 4 available as docker container is a base platform for building and running various Node.js 4 applications and frameworks. Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.",
                    "io.k8s.display-name": "Node.js 4",
                    "io.openshift.builder-version": "\"b00f0cb\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,nodejs,nodejs4",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/nodejs-4-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Node.js 4 applications",
                    "usage": "s2i build \u003cSOURCE-REPOSITORY\u003e centos/nodejs-4-centos7:latest \u003cAPP-NAME\u003e",
                    "vendor": "CentOS",
                    "version": "4"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/node_modules/.bin/:/opt/app-root/src/.npm-global/bin/:/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Node.js 4 applications",
                    "DESCRIPTION=Node.js 4 available as docker container is a base platform for building and running various Node.js 4 applications and frameworks. Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "NODEJS_VERSION=4",
                    "NPM_RUN=start",
                    "NAME=nodejs",
                    "NPM_CONFIG_PREFIX=/opt/app-root/src/.npm-global"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:1f01ebad975501e763615daf1cd1656b1d89144a2d887e4c7ceab443b378a9d0",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-nodejs4-docker",
                    "com.redhat.deployments-dir": "/opt/app-root/src",
                    "com.redhat.dev-mode": "DEV_MODE:false",
                    "com.redhat.dev-mode.port": "DEBUG_PORT:5858",
                    "description": "Node.js 4 available as docker container is a base platform for building and running various Node.js 4 applications and frameworks. Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.",
                    "help": "For more information visit https://github.com/sclorg/s2i-nodejs-container",
                    "io.k8s.description": "Node.js 4 available as docker container is a base platform for building and running various Node.js 4 applications and frameworks. Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.",
                    "io.k8s.display-name": "Node.js 4",
                    "io.openshift.builder-version": "\"b00f0cb\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,nodejs,nodejs4",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/nodejs-4-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Node.js 4 applications",
                    "usage": "s2i build \u003cSOURCE-REPOSITORY\u003e centos/nodejs-4-centos7:latest \u003cAPP-NAME\u003e",
                    "vendor": "CentOS",
                    "version": "4"
                  }
                },
                "Architecture": "amd64",
                "Size": 191881383
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:cc0ddecc531466cdadca9ec38c3a05c9c6093f57c2a13b1ee713a24147b57600",
                  "size": 7836280,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:38838b2f6d95cec92b5ebeaba00f384c4190e5eba31c460b40c3435f620f7e30",
                  "size": 3788,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bac0ff76e28137f6b1ef4054cd4945ef574595f30e603ef1e46916101dcd4564",
                  "size": 176207,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:a1e22e37e72c2f49c44aec2b8a894fff295bd18d4368a745aa6d4f0e7a6e2099",
                  "size": 90675631,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:2c39ff848ece149effcd0982df0ff343ec9d3c61e5636356e0191920aa5f2318",
                  "size": 19562803,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:f6f57eb62f2a63d668a7275be12e44a6b1cc69e447ea124324784da285b520ec",
                  "size": 1927,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:1c4258b14a7178f03093fe82341d4a833451eb2b53518a05bcba0b557976ac12",
                  "size": 3288,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:76f5c0f2a0cd954435a5c78d02549a6ad7754155edbc96d4a5e021cfb36ca9b2",
                  "size": 176999,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            },
            {
              "metadata": {
                "name": "sha256:f2ed293634e55c24e87f41e7ecd398811eb6674908810d86c1b233036eeeb771",
                "selfLink": "/oapi/v1/images/sha256%3Af2ed293634e55c24e87f41e7ecd398811eb6674908810d86c1b233036eeeb771",
                "uid": "6b44c5e3-de75-11e7-a24c-461d677cd862",
                "resourceVersion": "1060",
                "creationTimestamp": "2017-12-11T13:15:55Z",
                "annotations": {
                  "image.openshift.io/dockerLayersOrder": "ascending"
                }
              },
              "dockerImageReference": "centos/ruby-22-centos7@sha256:f2ed293634e55c24e87f41e7ecd398811eb6674908810d86c1b233036eeeb771",
              "dockerImageMetadata": {
                "kind": "DockerImage",
                "apiVersion": "1.0",
                "Id": "sha256:5b54a3ec4a2b831be58ac4d69ddc9b5e77c7736f6d2e79b9e56fee72c97fadaa",
                "Created": "2017-12-07T13:32:44Z",
                "Container": "dcffcfda67946d0276a57fc50ab7c7341e545ed067da7553920eb4b0d3f6980b",
                "ContainerConfig": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Ruby 2.2 applications",
                    "DESCRIPTION=Ruby 2.2 available as docker container is a base platform for building and running various Ruby 2.2 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "RUBY_VERSION=2.2"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "LABEL io.openshift.builder-version=\"c6e2e08\""
                  ],
                  "Image": "sha256:17f62dccfd58af94f65b861ca91cd12f9478d1206c862eff4a39e04b284aece5",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-ruby22-docker",
                    "description": "Ruby 2.2 available as docker container is a base platform for building and running various Ruby 2.2 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "io.k8s.description": "Ruby 2.2 available as docker container is a base platform for building and running various Ruby 2.2 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "io.k8s.display-name": "Ruby 2.2",
                    "io.openshift.builder-version": "\"c6e2e08\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,ruby,ruby22",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/ruby-22-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Ruby 2.2 applications",
                    "vendor": "CentOS",
                    "version": "2.2"
                  }
                },
                "DockerVersion": "1.12.6",
                "Config": {
                  "Hostname": "87c4e37f7782",
                  "User": "1001",
                  "ExposedPorts": {
                    "8080/tcp": {}
                  },
                  "Env": [
                    "PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "SUMMARY=Platform for building and running Ruby 2.2 applications",
                    "DESCRIPTION=Ruby 2.2 available as docker container is a base platform for building and running various Ruby 2.2 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "STI_SCRIPTS_URL=image:///usr/libexec/s2i",
                    "STI_SCRIPTS_PATH=/usr/libexec/s2i",
                    "APP_ROOT=/opt/app-root",
                    "HOME=/opt/app-root/src",
                    "BASH_ENV=/opt/app-root/etc/scl_enable",
                    "ENV=/opt/app-root/etc/scl_enable",
                    "PROMPT_COMMAND=. /opt/app-root/etc/scl_enable",
                    "NODEJS_SCL=rh-nodejs6",
                    "RUBY_VERSION=2.2"
                  ],
                  "Cmd": [
                    "/bin/sh",
                    "-c",
                    "$STI_SCRIPTS_PATH/usage"
                  ],
                  "Image": "sha256:17f62dccfd58af94f65b861ca91cd12f9478d1206c862eff4a39e04b284aece5",
                  "WorkingDir": "/opt/app-root/src",
                  "Entrypoint": [
                    "container-entrypoint"
                  ],
                  "Labels": {
                    "build-date": "20171128",
                    "com.redhat.component": "rh-ruby22-docker",
                    "description": "Ruby 2.2 available as docker container is a base platform for building and running various Ruby 2.2 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "io.k8s.description": "Ruby 2.2 available as docker container is a base platform for building and running various Ruby 2.2 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.",
                    "io.k8s.display-name": "Ruby 2.2",
                    "io.openshift.builder-version": "\"c6e2e08\"",
                    "io.openshift.expose-services": "8080:http",
                    "io.openshift.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "io.openshift.tags": "builder,ruby,ruby22",
                    "io.s2i.scripts-url": "image:///usr/libexec/s2i",
                    "license": "GPLv2",
                    "maintainer": "SoftwareCollections.org \u003csclorg@redhat.com\u003e",
                    "name": "centos/ruby-22-centos7",
                    "release": "1",
                    "summary": "Platform for building and running Ruby 2.2 applications",
                    "vendor": "CentOS",
                    "version": "2.2"
                  }
                },
                "Architecture": "amd64",
                "Size": 192789336
              },
              "dockerImageMetadataVersion": "1.0",
              "dockerImageLayers": [
                {
                  "name": "sha256:85432449fd0fabb6bef4772246d9b7948723275a4c7e4dee18728f28d79f1c2c",
                  "size": 73426838,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:cc0ddecc531466cdadca9ec38c3a05c9c6093f57c2a13b1ee713a24147b57600",
                  "size": 7836280,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:38838b2f6d95cec92b5ebeaba00f384c4190e5eba31c460b40c3435f620f7e30",
                  "size": 3788,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:bac0ff76e28137f6b1ef4054cd4945ef574595f30e603ef1e46916101dcd4564",
                  "size": 176207,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:a1e22e37e72c2f49c44aec2b8a894fff295bd18d4368a745aa6d4f0e7a6e2099",
                  "size": 90675631,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:64c4eb66b05cba4b8391a8fd7d796f6ad7b325b2fa38bbcc2df827ac063a8b2f",
                  "size": 20458497,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:0d831a08a3c1df8585113a8911cf8d9479ee9d6722ff0431733332982873d7cc",
                  "size": 1807,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:683440fc4f0c151986afb0a8c7a05f35bc5439c66178121c4806f1da04d24dca",
                  "size": 3867,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                },
                {
                  "name": "sha256:44ec27d4cee2070777b46ad119e3e2c349ef8e847a355e80413903db1e9fbf90",
                  "size": 191071,
                  "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip"
                }
              ],
              "dockerImageManifestMediaType": "application/vnd.docker.distribution.manifest.v2+json"
            }
          ]
        }
    http_version: 
  recorded_at: Mon, 11 Dec 2017 21:24:28 GMT
recorded_with: VCR 3.0.3
